{
    "sourceFile": "app/home/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 25,
            "patches": [
                {
                    "date": 1750105098373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1750105145558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1822,9 +1822,12 @@\n                   className=\"w-full h-64 px-3 py-2 border border-gray-300 rounded-lg bg-gray-50 text-sm font-mono resize-none\"\n                 />\n                 <button\n                   onClick={() => {\n-                    navigator.clipboard.writeText(document.querySelector(\"textarea\").value)\n+                    const textarea = document.querySelector(\"textarea\");\n+                    if (textarea) {\n+                      navigator.clipboard.writeText(textarea.value);\n+                    }\n                     // You could add a toast notification here\n                   }}\n                   className=\"absolute top-3 right-3 px-3 py-1 bg-gray-200 text-gray-700 rounded text-sm hover:bg-gray-300 transition-colors duration-200 flex items-center space-x-1\"\n                 >\n"
                },
                {
                    "date": 1750105282395,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n \"use client\"\n \n import type React from \"react\"\n-\n import Image from \"next/image\"\n+import { useRouter } from \"next/navigation\"\n import { useState, useEffect, useRef } from \"react\"\n import userActivityData from \"../../data/user-activity.json\"\n \n // 4. Replace all checkboxes with toggle switches in the Fraud Protection section\n@@ -26,8 +26,9 @@\n   )\n }\n \n export default function HomePage() {\n+  const router = useRouter()\n   const [isProfileOpen, setIsProfileOpen] = useState(false)\n   const [selectedProfile, setSelectedProfile] = useState(0)\n   const [isCalendarOpen, setIsCalendarOpen] = useState(false)\n   const [activeTab, setActiveTab] = useState(\"Dashboard\")\n@@ -573,8 +574,14 @@\n   const handleDeselectAllCountries = () => {\n     setSelectedCountries([])\n   }\n \n+  const handleSignOut = () => {\n+    // Here you would typically handle sign out logic\n+    // For now, we'll just navigate to the login page\n+    router.push('/login')\n+  }\n+\n   const renderDashboard = () => (\n     <div className=\"p-6 space-y-6\">\n       {/* Filters */}\n       <div className=\"bg-white rounded-lg p-6 shadow-sm hover:shadow-lg hover:scale-[1.02] transition-all duration-300\">\n@@ -2018,77 +2025,35 @@\n           <Image src=\"/images/new-logo.png\" alt=\"Oliggo Logo\" width={32} height={32} className=\"mr-2\" />\n           <span className=\"text-blue-600 text-2xl font-medium\">Oliggo</span>\n         </div>\n \n-        <button className=\"bg-white border border-gray-200 rounded-full px-6 py-2 text-blue-600 font-medium hover:bg-gray-50 transition-colors duration-200 shadow-sm\">\n-          Meta\n-        </button>\n-\n-        <div className=\"relative\">\n+        <div className=\"relative\" ref={profileDropdownRef}>\n           <button\n             onClick={() => setIsProfileOpen(!isProfileOpen)}\n-            className=\"flex items-center space-x-3 hover:bg-gray-50 rounded-lg px-3 py-2 transition-all duration-200\"\n+            className=\"flex items-center space-x-2 text-gray-700 hover:text-gray-900\"\n           >\n-            <div className=\"w-10 h-10 rounded-full bg-gradient-to-br from-blue-500 to-purple-600 flex items-center justify-center text-white font-medium\">\n-              JW\n+            <div className=\"w-8 h-8 rounded-full bg-blue-500 flex items-center justify-center text-white font-medium\">\n+              {userFirstName[0]}\n+              {userLastName[0]}\n             </div>\n-            <span className=\"text-gray-800 font-medium hidden sm:block\">\n-              {userFirstName} {userLastName}\n-            </span>\n-            <svg\n-              className={`w-4 h-4 text-gray-600 transition-transform duration-200 ${isProfileOpen ? \"rotate-180\" : \"\"}`}\n-              fill=\"none\"\n-              stroke=\"currentColor\"\n-              viewBox=\"0 0 24 24\"\n-            >\n-              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n-            </svg>\n+            <span className=\"font-medium\">{userFirstName}</span>\n           </button>\n \n           {isProfileOpen && (\n-            <div\n-              ref={profileDropdownRef}\n-              className=\"absolute right-0 mt-2 w-64 bg-white rounded-lg shadow-xl border border-gray-100 py-2 z-50\"\n-            >\n-              <div className=\"py-2\">\n-                <button\n-                  onClick={() => {\n-                    setIsUserSettingsOpen(true)\n-                    setIsProfileOpen(false)\n-                  }}\n-                  className=\"w-full px-4 py-2 text-left hover:bg-gray-50 flex items-center space-x-3 text-gray-700\"\n+            <div className=\"absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg py-2 z-50\">\n+              {/* ... other menu items ... */}\n+              \n+              {/* Sign Out */}\n+              <div className=\"border-t pt-4\">\n+                <button \n+                  onClick={handleSignOut}\n+                  className=\"w-full flex items-center justify-center space-x-2 text-red-600 hover:text-red-700\"\n                 >\n-                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                     <path\n                       strokeLinecap=\"round\"\n                       strokeLinejoin=\"round\"\n                       strokeWidth={2}\n-                      d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\n-                    />\n-                  </svg>\n-                  <span>User Settings</span>\n-                </button>\n-                <button\n-                  onClick={() => (window.location.href = \"/admin\")}\n-                  className=\"w-full px-4 py-2 text-left hover:bg-gray-50 flex items-center space-x-3 text-gray-700\"\n-                >\n-                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                    <path\n-                      strokeLinecap=\"round\"\n-                      strokeLinejoin=\"round\"\n-                      strokeWidth={2}\n-                      d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\"\n-                    />\n-                  </svg>\n-                  <span>Admin Panel</span>\n-                </button>\n-                <hr className=\"my-2 border-gray-100\" />\n-                <button className=\"w-full px-4 py-2 text-left hover:bg-gray-50 flex items-center space-x-3 text-red-600\">\n-                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                    <path\n-                      strokeLinecap=\"round\"\n-                      strokeLinejoin=\"round\"\n-                      strokeWidth={2}\n                       d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n                     />\n                   </svg>\n                   <span>Sign Out</span>\n"
                },
                {
                    "date": 1750105549105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2017,9 +2017,9 @@\n     </div>\n   )\n \n   return (\n-    <div className=\"min-h-screen h-screen flex flex-col bg-gray-50 overflow-hidden\">\n+    <div className=\"min-h-screen flex flex-col bg-gray-50\">\n       {/* Header */}\n       <header className=\"bg-white shadow-sm px-6 py-4 flex justify-between items-center z-10\">\n         <div className=\"flex items-center\">\n           <Image src=\"/images/new-logo.png\" alt=\"Oliggo Logo\" width={32} height={32} className=\"mr-2\" />\n@@ -2063,9 +2063,9 @@\n           )}\n         </div>\n       </header>\n \n-      <div className=\"flex flex-1 overflow-hidden\">\n+      <div className=\"flex flex-1\">\n         {/* Left Sidebar */}\n         <div\n           className={`${isSidebarExpanded ? \"w-80\" : \"w-20\"} bg-white shadow-sm flex flex-col py-6 transition-all duration-300 relative`}\n         >\n@@ -2295,9 +2295,9 @@\n           </div>\n         </div>\n \n         {/* Main Content */}\n-        <div className=\"flex-1 flex flex-col h-screen\">\n+        <div className=\"flex-1 flex flex-col\">\n           {/* Navigation Tabs */}\n           <div className=\"bg-white border-b border-gray-200 px-6\">\n             <div className=\"flex justify-center space-x-8\">\n               {tabs.map((tab) => (\n@@ -2315,10 +2315,10 @@\n               ))}\n             </div>\n           </div>\n \n-          {/* Content based on active tab - with independent scrolling */}\n-          <div className=\"flex-1 overflow-auto\">\n+          {/* Content based on active tab */}\n+          <div className=\"flex-1\">\n             {activeTab === \"Dashboard\" && renderDashboard()}\n             {activeTab === \"User Activity\" && renderUserActivity()}\n             {activeTab === \"Fraud Protection\" && renderFraudProtection()}\n             {activeTab === \"Integrations\" && renderIntegrations()}\n"
                },
                {
                    "date": 1750105725079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,36 +176,27 @@\n     {\n       title: \"Fraud Clicks\",\n       value: \"80\",\n       icon: (\n-        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-          <path\n-            strokeLinecap=\"round\"\n-            strokeLinejoin=\"round\"\n-            strokeWidth={2}\n-            d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n-          />\n+        <svg className=\"w-6 h-6 text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n         </svg>\n       ),\n-      color: \"text-green-500\",\n+      color: \"text-red-500\",\n     },\n-    // For \"Total Unique Visitors\", replace the icon with:\n     {\n       title: \"Total Unique Visitors\",\n       value: \"60\",\n       icon: (\n         <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-          <path\n-            strokeLinecap=\"round\"\n-            strokeLinejoin=\"round\"\n-            strokeWidth={2}\n-            d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\"\n-          />\n+          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 20h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v11a2 2 0 002 2z\" />\n+          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 11a4 4 0 100-8 4 4 0 000 8z\" />\n+          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 21v-2a4 4 0 018 0v2\" />\n+          <rect x=\"9\" y=\"14\" width=\"6\" height=\"2\" rx=\"1\" />\n         </svg>\n       ),\n       color: \"text-yellow-500\",\n     },\n-    // For \"Total Block Ip\", replace the icon with:\n     {\n       title: \"Total Block Ip\",\n       value: \"50\",\n       icon: (\n"
                },
                {
                    "date": 1750105890144,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,22 +177,26 @@\n       title: \"Fraud Clicks\",\n       value: \"80\",\n       icon: (\n         <svg className=\"w-6 h-6 text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n+          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01\" />\n+          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.29 3.86l-7.09 12.26A2 2 0 005.18 19h13.64a2 2 0 001.98-2.88l-7.09-12.26a2 2 0 00-3.42 0z\" />\n         </svg>\n       ),\n       color: \"text-red-500\",\n     },\n     {\n       title: \"Total Unique Visitors\",\n       value: \"60\",\n       icon: (\n-        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 20h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v11a2 2 0 002 2z\" />\n-          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 11a4 4 0 100-8 4 4 0 000 8z\" />\n-          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 21v-2a4 4 0 018 0v2\" />\n-          <rect x=\"9\" y=\"14\" width=\"6\" height=\"2\" rx=\"1\" />\n+        <svg className=\"w-6 h-6 text-yellow-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+          {/* Profil başı */}\n+          <circle cx=\"12\" cy=\"8\" r=\"4\" strokeWidth=\"2\" />\n+          {/* Gövde */}\n+          <path strokeWidth=\"2\" d=\"M4 20v-1a4 4 0 014-4h8a4 4 0 014 4v1\" />\n+          {/* ID kartı */}\n+          <rect x=\"16\" y=\"14\" width=\"6\" height=\"4\" rx=\"1\" strokeWidth=\"2\" />\n+          <line x1=\"18\" y1=\"16\" x2=\"20\" y2=\"16\" strokeWidth=\"2\" />\n         </svg>\n       ),\n       color: \"text-yellow-500\",\n     },\n"
                },
                {
                    "date": 1750106320501,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,10 +177,11 @@\n       title: \"Fraud Clicks\",\n       value: \"80\",\n       icon: (\n         <svg className=\"w-6 h-6 text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01\" />\n           <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.29 3.86l-7.09 12.26A2 2 0 005.18 19h13.64a2 2 0 001.98-2.88l-7.09-12.26a2 2 0 00-3.42 0z\" />\n+          <line x1=\"12\" y1=\"9\" x2=\"12\" y2=\"13\" strokeWidth=\"2\" />\n+          <circle cx=\"12\" cy=\"17\" r=\"1\" strokeWidth=\"2\" />\n         </svg>\n       ),\n       color: \"text-red-500\",\n     },\n"
                },
                {
                    "date": 1750106343282,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -178,10 +178,10 @@\n       value: \"80\",\n       icon: (\n         <svg className=\"w-6 h-6 text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n           <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.29 3.86l-7.09 12.26A2 2 0 005.18 19h13.64a2 2 0 001.98-2.88l-7.09-12.26a2 2 0 00-3.42 0z\" />\n-          <line x1=\"12\" y1=\"9\" x2=\"12\" y2=\"13\" strokeWidth=\"2\" />\n-          <circle cx=\"12\" cy=\"17\" r=\"1\" strokeWidth=\"2\" />\n+          <line x1=\"12\" y1=\"9\" x2=\"12\" y2=\"13\" stroke=\"currentColor\" strokeWidth=\"2\" />\n+          <circle cx=\"12\" cy=\"17\" r=\"1\" stroke=\"currentColor\" strokeWidth=\"2\" />\n         </svg>\n       ),\n       color: \"text-red-500\",\n     },\n@@ -728,16 +728,12 @@\n                   <svg\n                     className=\"w-6 h-6 group-hover:animate-pulse\"\n                     fill=\"none\"\n                     stroke=\"currentColor\"\n-                    viewBox=\"0 0 24 24\"\n-                  >\n-                    <path\n-                      strokeLinecap=\"round\"\n-                      strokeLinejoin=\"round\"\n-                      strokeWidth={2}\n-                      d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n-                    />\n+                    viewBox=\"0 0 24 24\">\n+                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.29 3.86l-7.09 12.26A2 2 0 005.18 19h13.64a2 2 0 001.98-2.88l-7.09-12.26a2 2 0 00-3.42 0z\" />\n+                    <line x1=\"12\" y1=\"9\" x2=\"12\" y2=\"13\" stroke=\"currentColor\" strokeWidth={2} />\n+                    <circle cx=\"12\" cy=\"17\" r=\"1\" stroke=\"currentColor\" strokeWidth={2} />\n                   </svg>\n                 )}\n                 {stat.title === \"Total Unique Visitors\" && (\n                   <svg\n"
                },
                {
                    "date": 1750106414285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -189,15 +189,10 @@\n       title: \"Total Unique Visitors\",\n       value: \"60\",\n       icon: (\n         <svg className=\"w-6 h-6 text-yellow-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-          {/* Profil başı */}\n           <circle cx=\"12\" cy=\"8\" r=\"4\" strokeWidth=\"2\" />\n-          {/* Gövde */}\n           <path strokeWidth=\"2\" d=\"M4 20v-1a4 4 0 014-4h8a4 4 0 014 4v1\" />\n-          {/* ID kartı */}\n-          <rect x=\"16\" y=\"14\" width=\"6\" height=\"4\" rx=\"1\" strokeWidth=\"2\" />\n-          <line x1=\"18\" y1=\"16\" x2=\"20\" y2=\"16\" strokeWidth=\"2\" />\n         </svg>\n       ),\n       color: \"text-yellow-500\",\n     },\n"
                },
                {
                    "date": 1750106490983,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -189,10 +189,10 @@\n       title: \"Total Unique Visitors\",\n       value: \"60\",\n       icon: (\n         <svg className=\"w-6 h-6 text-yellow-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-          <circle cx=\"12\" cy=\"8\" r=\"4\" strokeWidth=\"2\" />\n-          <path strokeWidth=\"2\" d=\"M4 20v-1a4 4 0 014-4h8a4 4 0 014 4v1\" />\n+          <circle cx=\"12\" cy=\"8\" r=\"4\" stroke=\"currentColor\" strokeWidth=\"2\" />\n+          <path d=\"M6 20v-2a6 6 0 0112 0v2\" stroke=\"currentColor\" strokeWidth=\"2\" />\n         </svg>\n       ),\n       color: \"text-yellow-500\",\n     },\n"
                },
                {
                    "date": 1750106532740,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -190,9 +190,9 @@\n       value: \"60\",\n       icon: (\n         <svg className=\"w-6 h-6 text-yellow-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n           <circle cx=\"12\" cy=\"8\" r=\"4\" stroke=\"currentColor\" strokeWidth=\"2\" />\n-          <path d=\"M6 20v-2a6 6 0 0112 0v2\" stroke=\"currentColor\" strokeWidth=\"2\" />\n+          <path d=\"M5 20v-2a6 6 0 0112 0v2\" stroke=\"currentColor\" strokeWidth=\"2\" />\n         </svg>\n       ),\n       color: \"text-yellow-500\",\n     },\n"
                },
                {
                    "date": 1750106539057,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -190,9 +190,9 @@\n       value: \"60\",\n       icon: (\n         <svg className=\"w-6 h-6 text-yellow-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n           <circle cx=\"12\" cy=\"8\" r=\"4\" stroke=\"currentColor\" strokeWidth=\"2\" />\n-          <path d=\"M5 20v-2a6 6 0 0112 0v2\" stroke=\"currentColor\" strokeWidth=\"2\" />\n+          <path d=\"M2 20v-2a6 6 0 0112 0v2\" stroke=\"currentColor\" strokeWidth=\"2\" />\n         </svg>\n       ),\n       color: \"text-yellow-500\",\n     },\n"
                },
                {
                    "date": 1750106557944,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -190,9 +190,9 @@\n       value: \"60\",\n       icon: (\n         <svg className=\"w-6 h-6 text-yellow-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n           <circle cx=\"12\" cy=\"8\" r=\"4\" stroke=\"currentColor\" strokeWidth=\"2\" />\n-          <path d=\"M2 20v-2a6 6 0 0112 0v2\" stroke=\"currentColor\" strokeWidth=\"2\" />\n+          <path d=\"M6 20v-2b6 6 0 0112 0v2\" stroke=\"currentColor\" strokeWidth=\"2\" />\n         </svg>\n       ),\n       color: \"text-yellow-500\",\n     },\n"
                },
                {
                    "date": 1750106567192,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -190,9 +190,9 @@\n       value: \"60\",\n       icon: (\n         <svg className=\"w-6 h-6 text-yellow-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n           <circle cx=\"12\" cy=\"8\" r=\"4\" stroke=\"currentColor\" strokeWidth=\"2\" />\n-          <path d=\"M6 20v-2b6 6 0 0112 0v2\" stroke=\"currentColor\" strokeWidth=\"2\" />\n+          <path d=\"M5 20v-2a6 6 0 0112 0v2\" stroke=\"currentColor\" strokeWidth=\"2\" />\n         </svg>\n       ),\n       color: \"text-yellow-500\",\n     },\n"
                },
                {
                    "date": 1750106815578,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,11 +177,11 @@\n       title: \"Fraud Clicks\",\n       value: \"80\",\n       icon: (\n         <svg className=\"w-6 h-6 text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.29 3.86l-7.09 12.26A2 2 0 005.18 19h13.64a2 2 0 001.98-2.88l-7.09-12.26a2 2 0 00-3.42 0z\" />\n-          <line x1=\"12\" y1=\"9\" x2=\"12\" y2=\"13\" stroke=\"currentColor\" strokeWidth=\"2\" />\n-          <circle cx=\"12\" cy=\"17\" r=\"1\" stroke=\"currentColor\" strokeWidth=\"2\" />\n+          <circle cx=\"12\" cy=\"12\" r=\"10\" strokeWidth=\"2\" className=\"text-orange-400\" stroke=\"currentColor\" fill=\"#fff3\" />\n+          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 8v4m0 4h.01\" />\n+          <circle cx=\"12\" cy=\"16.5\" r=\"1\" fill=\"currentColor\" />\n         </svg>\n       ),\n       color: \"text-red-500\",\n     },\n"
                },
                {
                    "date": 1750106853265,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -188,11 +188,16 @@\n     {\n       title: \"Total Unique Visitors\",\n       value: \"60\",\n       icon: (\n-        <svg className=\"w-6 h-6 text-yellow-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-          <circle cx=\"12\" cy=\"8\" r=\"4\" stroke=\"currentColor\" strokeWidth=\"2\" />\n-          <path d=\"M5 20v-2a6 6 0 0112 0v2\" stroke=\"currentColor\" strokeWidth=\"2\" />\n+        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+          {/* Profil başı */}\n+          <circle cx=\"12\" cy=\"8\" r=\"4\" strokeWidth=\"2\" />\n+          {/* Gövde */}\n+          <path strokeWidth=\"2\" d=\"M4 20c0-2.5 3.5-4 8-4s8 1.5 8 4\" />\n+          {/* ID etiketi */}\n+          <rect x=\"8\" y=\"16\" width=\"8\" height=\"4\" rx=\"1\" strokeWidth=\"2\" />\n+          <text x=\"12\" y=\"19\" textAnchor=\"middle\" fontSize=\"2.5\" fill=\"currentColor\">ID</text>\n         </svg>\n       ),\n       color: \"text-yellow-500\",\n     },\n"
                },
                {
                    "date": 1750106939858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -739,16 +739,16 @@\n                   <svg\n                     className=\"w-6 h-6 group-hover:animate-pulse\"\n                     fill=\"none\"\n                     stroke=\"currentColor\"\n-                    viewBox=\"0 0 24 24\"\n-                  >\n-                    <path\n-                      strokeLinecap=\"round\"\n-                      strokeLinejoin=\"round\"\n-                      strokeWidth={2}\n-                      d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z\"\n-                    />\n+                    viewBox=\"0 0 24 24\">\n+                    {/* Profil başı */}\n+                    <circle cx=\"12\" cy=\"8\" r=\"4\" strokeWidth=\"2\" />\n+                    {/* Gövde */}\n+                    <path strokeWidth=\"2\" d=\"M4 20c0-2.5 3.5-4 8-4s8 1.5 8 4\" />\n+                    {/* ID etiketi */}\n+                    <rect x=\"8\" y=\"16\" width=\"8\" height=\"4\" rx=\"1\" strokeWidth=\"2\" />\n+                    <text x=\"12\" y=\"19\" textAnchor=\"middle\" fontSize=\"2.5\" fill=\"currentColor\">ID</text>\n                   </svg>\n                 )}\n                 {stat.title === \"Total Block Ip\" && (\n                   <svg\n"
                },
                {
                    "date": 1750107189047,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2031,11 +2031,29 @@\n           </button>\n \n           {isProfileOpen && (\n             <div className=\"absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg py-2 z-50\">\n-              {/* ... other menu items ... */}\n-              \n-              {/* Sign Out */}\n+              <button\n+                onClick={() => {\n+                  setIsUserSettingsOpen(true);\n+                  setIsProfileOpen(false);\n+                }}\n+                className=\"w-full flex items-center justify-center space-x-2 text-gray-700 hover:text-blue-600 py-2\"\n+              >\n+                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n+                </svg>\n+                <span>User Settings</span>\n+              </button>\n+              <button\n+                onClick={() => { window.location.href = '/admin'; }}\n+                className=\"w-full flex items-center justify-center space-x-2 text-gray-700 hover:text-blue-600 py-2\"\n+              >\n+                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\" />\n+                </svg>\n+                <span>Admin Panel</span>\n+              </button>\n               <div className=\"border-t pt-4\">\n                 <button \n                   onClick={handleSignOut}\n                   className=\"w-full flex items-center justify-center space-x-2 text-red-600 hover:text-red-700\"\n"
                },
                {
                    "date": 1750107434315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1278,9 +1278,9 @@\n     </div>\n   )\n \n   const renderFraudProtection = () => (\n-    <div className=\"p-6 space-y-6\">\n+    <div className=\"p-6 space-y-6 relative\">\n       {/* Header */}\n       <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n         <div className=\"flex items-center space-x-3 mb-4\">\n           <svg className=\"w-6 h-6 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n@@ -1753,8 +1753,29 @@\n             </div>\n           </div>\n         </div>\n       </div>\n+      {/* Save Settings Button */}\n+      <div className=\"flex justify-end mt-8\">\n+        <button\n+          onClick={() => {\n+            setShowFraudSaveToast(true);\n+            setTimeout(() => setShowFraudSaveToast(false), 2000);\n+          }}\n+          className=\"px-6 py-3 bg-blue-600 text-white rounded-lg shadow hover:bg-blue-700 transition-colors duration-200 font-semibold text-lg\"\n+        >\n+          Save Settings\n+        </button>\n+      </div>\n+      {/* Toast Notification */}\n+      {showFraudSaveToast && (\n+        <div className=\"fixed right-8 bottom-8 z-50 bg-green-500 text-white px-6 py-4 rounded-lg shadow-lg flex items-center space-x-2 animate-fadeIn\">\n+          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n+          </svg>\n+          <span className=\"font-medium\">Settings saved</span>\n+        </div>\n+      )}\n     </div>\n   )\n \n   const renderIntegrations = () => (\n"
                },
                {
                    "date": 1750107447592,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,8 +56,9 @@\n   const [isUserSettingsOpen, setIsUserSettingsOpen] = useState(false)\n   const [userFirstName, setUserFirstName] = useState(\"John Tristan\")\n   const [userLastName, setUserLastName] = useState(\"Ward\")\n   const profileDropdownRef = useRef<HTMLDivElement>(null)\n+  const [showFraudSaveToast, setShowFraudSaveToast] = useState(false);\n \n   // Add these new state variables after the other useState declarations (around line 40)\n   const [countries] = useState([\n     { code: \"US\", name: \"United States\" },\n"
                },
                {
                    "date": 1750107726466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1580,9 +1580,8 @@\n                 <h4 className=\"font-medium text-gray-900 mb-2\">Country-Based Blocking</h4>\n                 <p className=\"text-sm text-gray-500 mb-3\">Only allow traffic from selected countries (whitelist).</p>\n \n                 <div className=\"space-y-3\">\n-                  // 1. Update the country selection dropdown to show selected countries as dimmed and allow deselection\n                   <div className=\"relative\">\n                     <select\n                       className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white\"\n                       onChange={handleCountrySelect}\n"
                },
                {
                    "date": 1750107995372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,2687 @@\n+\"use client\"\n+\n+import type React from \"react\"\n+import Image from \"next/image\"\n+import { useRouter } from \"next/navigation\"\n+import { useState, useEffect, useRef } from \"react\"\n+import userActivityData from \"../../data/user-activity.json\"\n+\n+// 4. Replace all checkboxes with toggle switches in the Fraud Protection section\n+// Create a new Toggle component function at the top of the file, after the other state variables:\n+\n+const Toggle = ({ checked = false, onChange }: { checked?: boolean; onChange?: () => void }) => {\n+  return (\n+    <div\n+      onClick={onChange}\n+      className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 cursor-pointer ${\n+        checked ? \"bg-blue-600\" : \"bg-gray-200\"\n+      }`}\n+    >\n+      <span\n+        className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n+          checked ? \"translate-x-6\" : \"translate-x-1\"\n+        }`}\n+      />\n+    </div>\n+  )\n+}\n+\n+export default function HomePage() {\n+  const router = useRouter()\n+  const [isProfileOpen, setIsProfileOpen] = useState(false)\n+  const [selectedProfile, setSelectedProfile] = useState(0)\n+  const [isCalendarOpen, setIsCalendarOpen] = useState(false)\n+  const [activeTab, setActiveTab] = useState(\"Dashboard\")\n+  const [hoveredSegment, setHoveredSegment] = useState<number | null>(null)\n+  const [selectedDate, setSelectedDate] = useState(new Date())\n+  const [startDate, setStartDate] = useState<Date | null>(null)\n+  const [endDate, setEndDate] = useState<Date | null>(null)\n+  const [chartRotation, setChartRotation] = useState(0)\n+  const [chartScale, setChartScale] = useState(1)\n+  const [isSidebarExpanded, setIsSidebarExpanded] = useState(false)\n+  const [hoveredProfile, setHoveredProfile] = useState<number | null>(null)\n+  const [activeMode, setActiveMode] = useState(\"All Users\")\n+  const [currentPage, setCurrentPage] = useState(1)\n+  const [itemsPerPage, setItemsPerPage] = useState(10)\n+  const [fraudMode, setFraudMode] = useState(\"Monitor Mode\")\n+  const [clickThresholdRules, setClickThresholdRules] = useState([\n+    { id: 1, clicks: 4, time: 7, unit: \"days\" },\n+    { id: 2, clicks: 6, time: 30, unit: \"days\" },\n+    { id: 3, clicks: 3, time: 10, unit: \"minutes\" },\n+  ])\n+  const [isEditModalOpen, setIsEditModalOpen] = useState(false)\n+  const [editingProfile, setEditingProfile] = useState<number | null>(null)\n+  const [editProfileName, setEditProfileName] = useState(\"\")\n+  const [editProfileColor, setEditProfileColor] = useState(\"\")\n+  const [isUserSettingsOpen, setIsUserSettingsOpen] = useState(false)\n+  const [userFirstName, setUserFirstName] = useState(\"John Tristan\")\n+  const [userLastName, setUserLastName] = useState(\"Ward\")\n+  const profileDropdownRef = useRef<HTMLDivElement>(null)\n+  const [showFraudSaveToast, setShowFraudSaveToast] = useState(false);\n+\n+  // Add these new state variables after the other useState declarations (around line 40)\n+  const [countries] = useState([\n+    { code: \"US\", name: \"United States\" },\n+    { code: \"CA\", name: \"Canada\" },\n+    { code: \"UK\", name: \"United Kingdom\" },\n+    { code: \"DE\", name: \"Germany\" },\n+    { code: \"FR\", name: \"France\" },\n+    { code: \"AU\", name: \"Australia\" },\n+    { code: \"JP\", name: \"Japan\" },\n+    { code: \"BR\", name: \"Brazil\" },\n+    { code: \"IN\", name: \"India\" },\n+    { code: \"IT\", name: \"Italy\" },\n+    { code: \"ES\", name: \"Spain\" },\n+    { code: \"MX\", name: \"Mexico\" },\n+    { code: \"KR\", name: \"South Korea\" },\n+    { code: \"NL\", name: \"Netherlands\" },\n+    { code: \"SE\", name: \"Sweden\" },\n+    { code: \"CH\", name: \"Switzerland\" },\n+    { code: \"SG\", name: \"Singapore\" },\n+    { code: \"ZA\", name: \"South Africa\" },\n+    { code: \"AE\", name: \"United Arab Emirates\" },\n+    { code: \"AR\", name: \"Argentina\" },\n+  ])\n+  const [selectedCountries, setSelectedCountries] = useState<{ code: string; name: string }[]>([\n+    { code: \"US\", name: \"United States\" },\n+    { code: \"CA\", name: \"Canada\" },\n+    { code: \"UK\", name: \"United Kingdom\" },\n+  ])\n+\n+  // Add animation effect for the chart\n+  useEffect(() => {\n+    const interval = setInterval(() => {\n+      setChartRotation((prev) => (prev + 1) % 360)\n+    }, 100)\n+    return () => clearInterval(interval)\n+  }, [])\n+\n+  useEffect(() => {\n+    const handleClickOutside = (event: MouseEvent) => {\n+      if (profileDropdownRef.current && !profileDropdownRef.current.contains(event.target as Node)) {\n+        setIsProfileOpen(false)\n+      }\n+    }\n+\n+    if (isProfileOpen) {\n+      document.addEventListener(\"mousedown\", handleClickOutside)\n+    }\n+\n+    return () => {\n+      document.removeEventListener(\"mousedown\", handleClickOutside)\n+    }\n+  }, [isProfileOpen])\n+\n+  const subProfiles = [\n+    {\n+      id: 0,\n+      name: \"JT\",\n+      color: \"bg-blue-500\",\n+      initials: \"JT\",\n+      details: {\n+        adAccount: \"Meta Ads Account #1\",\n+        campaign: \"Summer Campaign 2024\",\n+        adset: \"Targeting 18-35\",\n+        pixel: \"Pixel ID: 123456789\",\n+        activatedTime: \"Jan 15, 2024 10:30 AM\",\n+        protectStatus: \"Active\",\n+      },\n+    },\n+    {\n+      id: 1,\n+      name: \"MA\",\n+      color: \"bg-orange-500\",\n+      initials: \"MA\",\n+      details: {\n+        adAccount: \"Meta Ads Account #2\",\n+        campaign: \"Winter Campaign 2024\",\n+        adset: \"Targeting 25-45\",\n+        pixel: \"Pixel ID: 987654321\",\n+        activatedTime: \"Dec 20, 2023 2:15 PM\",\n+        protectStatus: \"Paused\",\n+      },\n+    },\n+  ]\n+\n+  const colorOptions = [\n+    { name: \"Blue\", value: \"bg-blue-500\", class: \"bg-blue-500\" },\n+    { name: \"Purple\", value: \"bg-purple-500\", class: \"bg-purple-500\" },\n+    { name: \"Teal\", value: \"bg-teal-500\", class: \"bg-teal-500\" },\n+    { name: \"Green\", value: \"bg-green-500\", class: \"bg-green-500\" },\n+    { name: \"Light Blue\", value: \"bg-sky-500\", class: \"bg-sky-500\" },\n+    { name: \"Red\", value: \"bg-red-500\", class: \"bg-red-500\" },\n+    { name: \"Orange\", value: \"bg-orange-500\", class: \"bg-orange-500\" },\n+    { name: \"Cyan\", value: \"bg-cyan-500\", class: \"bg-cyan-500\" },\n+  ]\n+\n+  const tabs = [\"Dashboard\", \"User Activity\", \"Fraud Protection\", \"Integrations\", \"Refund Report\"]\n+  const modes = [\"All Users\", \"Safe Mode\", \"Monitor Mode\", \"Aggressive Mode\"]\n+\n+  const statsCards = [\n+    {\n+      title: \"Total Clicks\",\n+      value: \"105\",\n+      icon: (\n+        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n+          <path\n+            strokeLinecap=\"round\"\n+            strokeLinejoin=\"round\"\n+            strokeWidth={2}\n+            d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\n+          />\n+        </svg>\n+      ),\n+      color: \"text-blue-500\",\n+    },\n+    {\n+      title: \"Fraud Clicks\",\n+      value: \"80\",\n+      icon: (\n+        <svg className=\"w-6 h-6 text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+          <circle cx=\"12\" cy=\"12\" r=\"10\" strokeWidth=\"2\" className=\"text-orange-400\" stroke=\"currentColor\" fill=\"#fff3\" />\n+          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 8v4m0 4h.01\" />\n+          <circle cx=\"12\" cy=\"16.5\" r=\"1\" fill=\"currentColor\" />\n+        </svg>\n+      ),\n+      color: \"text-red-500\",\n+    },\n+    {\n+      title: \"Total Unique Visitors\",\n+      value: \"60\",\n+      icon: (\n+        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+          {/* Profil başı */}\n+          <circle cx=\"12\" cy=\"8\" r=\"4\" strokeWidth=\"2\" />\n+          {/* Gövde */}\n+          <path strokeWidth=\"2\" d=\"M4 20c0-2.5 3.5-4 8-4s8 1.5 8 4\" />\n+          {/* ID etiketi */}\n+          <rect x=\"8\" y=\"16\" width=\"8\" height=\"4\" rx=\"1\" strokeWidth=\"2\" />\n+          <text x=\"12\" y=\"19\" textAnchor=\"middle\" fontSize=\"2.5\" fill=\"currentColor\">ID</text>\n+        </svg>\n+      ),\n+      color: \"text-yellow-500\",\n+    },\n+    {\n+      title: \"Total Block Ip\",\n+      value: \"50\",\n+      icon: (\n+        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+          <path\n+            strokeLinecap=\"round\"\n+            strokeLinejoin=\"round\"\n+            strokeWidth={2}\n+            d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\"\n+          />\n+        </svg>\n+      ),\n+      color: \"text-red-500\",\n+    },\n+    {\n+      title: \"VPN & Location Fraud\",\n+      value: \"105\",\n+      icon: (\n+        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+          <path\n+            strokeLinecap=\"round\"\n+            strokeLinejoin=\"round\"\n+            strokeWidth={2}\n+            d=\"M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9v-9m0-9v9m0 9c-5 0-9-4-9-9s4-9 9-9\"\n+          />\n+        </svg>\n+      ),\n+      color: \"text-purple-500\",\n+    },\n+  ]\n+\n+  const bottomStats = [\n+    {\n+      title: \"Browser Fraud\",\n+      value: \"25\",\n+      icon: (\n+        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+          <path\n+            strokeLinecap=\"round\"\n+            strokeLinejoin=\"round\"\n+            strokeWidth={2}\n+            d=\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\n+          />\n+        </svg>\n+      ),\n+      color: \"text-yellow-500\",\n+    },\n+    {\n+      title: \"Suspicious Behavior\",\n+      value: \"30\",\n+      icon: (\n+        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+          <path\n+            strokeLinecap=\"round\"\n+            strokeLinejoin=\"round\"\n+            strokeWidth={2}\n+            d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\n+          />\n+        </svg>\n+      ),\n+      color: \"text-blue-500\",\n+    },\n+    {\n+      title: \"Block Devices\",\n+      value: \"30\",\n+      icon: (\n+        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+          <path\n+            strokeLinecap=\"round\"\n+            strokeLinejoin=\"round\"\n+            strokeWidth={2}\n+            d=\"M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z\"\n+          />\n+        </svg>\n+      ),\n+      color: \"text-blue-500\",\n+    },\n+    {\n+      title: \"Fraud by Desktop\",\n+      value: \"30%\",\n+      progress: 30,\n+      icon: (\n+        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+          <path\n+            strokeLinecap=\"round\"\n+            strokeLinejoin=\"round\"\n+            strokeWidth={2}\n+            d=\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\n+          />\n+        </svg>\n+      ),\n+      color: \"text-orange-500\",\n+    },\n+    {\n+      title: \"Fraud by Mobile\",\n+      value: \"5%\",\n+      progress: 5,\n+      icon: (\n+        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+          <path\n+            strokeLinecap=\"round\"\n+            strokeLinejoin=\"round\"\n+            strokeWidth={2}\n+            d=\"M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z\"\n+          />\n+        </svg>\n+      ),\n+      color: \"text-blue-500\",\n+    },\n+  ]\n+\n+  // Chart data from Estimated Savings Report\n+  const chartData = [\n+    { name: \"Vpn\", value: 30, color: \"#3b82f6\", percentage: 37.5 },\n+    { name: \"Suspicious Behavior\", value: 15, color: \"#10b981\", percentage: 18.75 },\n+    { name: \"Browser Fraud\", value: 35, color: \"#f97316\", percentage: 43.75 },\n+  ]\n+\n+  const totalSavings = chartData.reduce((sum, item) => sum + item.value, 0)\n+\n+  // Calculate stroke-dasharray for each segment\n+  const circumference = 2 * Math.PI * 40\n+  let cumulativePercentage = 0\n+\n+  // Calendar helper functions\n+  const getDaysInMonth = (date: Date) => {\n+    return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate()\n+  }\n+\n+  const getFirstDayOfMonth = (date: Date) => {\n+    return new Date(date.getFullYear(), date.getMonth(), 1).getDay()\n+  }\n+\n+  const handleDateClick = (day: number) => {\n+    const clickedDate = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), day)\n+\n+    if (!startDate || (startDate && endDate)) {\n+      setStartDate(clickedDate)\n+      setEndDate(null)\n+    } else if (startDate && !endDate) {\n+      if (clickedDate >= startDate) {\n+        setEndDate(clickedDate)\n+      } else {\n+        setStartDate(clickedDate)\n+        setEndDate(null)\n+      }\n+    }\n+  }\n+\n+  const isDateInRange = (day: number) => {\n+    if (!startDate) return false\n+    const date = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), day)\n+    if (!endDate) return date.getTime() === startDate.getTime()\n+    return date >= startDate && date <= endDate\n+  }\n+\n+  const isDateStart = (day: number) => {\n+    if (!startDate) return false\n+    const date = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), day)\n+    return date.getTime() === startDate.getTime()\n+  }\n+\n+  const isDateEnd = (day: number) => {\n+    if (!endDate) return false\n+    const date = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), day)\n+    return date.getTime() === endDate.getTime()\n+  }\n+\n+  const userData = userActivityData.users\n+  const totalEntries = userActivityData.totalEntries\n+  const startEntry = (currentPage - 1) * itemsPerPage + 1\n+  const endEntry = Math.min(currentPage * itemsPerPage, totalEntries)\n+  const totalPages = Math.ceil(totalEntries / itemsPerPage)\n+\n+  const addClickThresholdRule = () => {\n+    const newRule = {\n+      id: Date.now(),\n+      clicks: 1,\n+      time: 1,\n+      unit: \"days\",\n+    }\n+    setClickThresholdRules([...clickThresholdRules, newRule])\n+  }\n+\n+  const removeClickThresholdRule = (id: number) => {\n+    setClickThresholdRules(clickThresholdRules.filter((rule) => rule.id !== id))\n+  }\n+\n+  const updateClickThresholdRule = (id: number, field: string, value: any) => {\n+    setClickThresholdRules(clickThresholdRules.map((rule) => (rule.id === id ? { ...rule, [field]: value } : rule)))\n+  }\n+\n+  const refundData = {\n+    weeks: [\n+      {\n+        id: 1,\n+        week: \"Week 10\",\n+        startDate: \"14 Jan 2024\",\n+        startTime: \"10:00 Eastern\",\n+        endDate: \"14 Jan 2024\",\n+        endTime: \"10:00 Eastern\",\n+        refundAmount: \"$150\",\n+        link: \"https://example.com/refund/week10\",\n+      },\n+      {\n+        id: 2,\n+        week: \"Week 9\",\n+        startDate: \"14 Jan 2024\",\n+        startTime: \"10:00 Eastern\",\n+        endDate: \"14 Jan 2024\",\n+        endTime: \"10:00 Eastern\",\n+        refundAmount: \"$150\",\n+        link: \"https://example.com/refund/week9\",\n+      },\n+      {\n+        id: 3,\n+        week: \"Week 8\",\n+        startDate: \"14 Jan 2024\",\n+        startTime: \"10:00 Eastern\",\n+        endDate: \"14 Jan 2024\",\n+        endTime: \"10:00 Eastern\",\n+        refundAmount: \"$150\",\n+        link: \"https://example.com/refund/week8\",\n+      },\n+      {\n+        id: 4,\n+        week: \"Week 7\",\n+        startDate: \"14 Jan 2024\",\n+        startTime: \"10:00 Eastern\",\n+        endDate: \"14 Jan 2024\",\n+        endTime: \"10:00 Eastern\",\n+        refundAmount: \"$150\",\n+        link: \"https://example.com/refund/week7\",\n+      },\n+      {\n+        id: 5,\n+        week: \"Week 6\",\n+        startDate: \"14 Jan 2024\",\n+        startTime: \"10:00 Eastern\",\n+        endDate: \"14 Jan 2024\",\n+        endTime: \"10:00 Eastern\",\n+        refundAmount: \"$150\",\n+        link: \"https://example.com/refund/week6\",\n+      },\n+      {\n+        id: 6,\n+        week: \"Week 5\",\n+        startDate: \"14 Jan 2024\",\n+        startTime: \"10:00 Eastern\",\n+        endDate: \"14 Jan 2024\",\n+        endTime: \"10:00 Eastern\",\n+        refundAmount: \"$150\",\n+        link: \"https://example.com/refund/week5\",\n+      },\n+      {\n+        id: 7,\n+        week: \"Week 4\",\n+        startDate: \"14 Jan 2024\",\n+        startTime: \"10:00 Eastern\",\n+        endDate: \"14 Jan 2024\",\n+        endTime: \"10:00 Eastern\",\n+        refundAmount: \"$150\",\n+        link: \"https://example.com/refund/week4\",\n+      },\n+      {\n+        id: 8,\n+        week: \"Week 3\",\n+        startDate: \"14 Jan 2024\",\n+        startTime: \"10:00 Eastern\",\n+        endDate: \"14 Jan 2024\",\n+        endTime: \"10:00 Eastern\",\n+        refundAmount: \"$150\",\n+        link: \"https://example.com/refund/week3\",\n+      },\n+      {\n+        id: 9,\n+        week: \"Week 2\",\n+        startDate: \"14 Jan 2024\",\n+        startTime: \"10:00 Eastern\",\n+        endDate: \"14 Jan 2024\",\n+        endTime: \"10:00 Eastern\",\n+        refundAmount: \"$150\",\n+        link: \"https://example.com/refund/week2\",\n+      },\n+      {\n+        id: 10,\n+        week: \"Week 1\",\n+        startDate: \"14 Jan 2024\",\n+        startTime: \"10:00 Eastern\",\n+        endDate: \"14 Jan 2024\",\n+        endTime: \"10:00 Eastern\",\n+        refundAmount: \"$150\",\n+        link: \"https://example.com/refund/week1\",\n+      },\n+    ],\n+  }\n+\n+  const openEditModal = (profileIndex: number) => {\n+    setEditingProfile(profileIndex)\n+    setEditProfileName(subProfiles[profileIndex].name)\n+    setEditProfileColor(subProfiles[profileIndex].color)\n+    setIsEditModalOpen(true)\n+  }\n+\n+  const closeEditModal = () => {\n+    setIsEditModalOpen(false)\n+    setEditingProfile(null)\n+    setEditProfileName(\"\")\n+    setEditProfileColor(\"\")\n+  }\n+\n+  const saveProfileChanges = () => {\n+    if (editingProfile !== null) {\n+      // Update the profile (in a real app, this would update the backend)\n+      const updatedProfiles = [...subProfiles]\n+      updatedProfiles[editingProfile] = {\n+        ...updatedProfiles[editingProfile],\n+        name: editProfileName,\n+        color: editProfileColor,\n+        initials: editProfileName\n+          .split(\" \")\n+          .map((n) => n[0])\n+          .join(\"\")\n+          .toUpperCase()\n+          .slice(0, 2),\n+      }\n+      // In a real app, you would update the state here\n+      console.log(\"Profile updated:\", updatedProfiles[editingProfile])\n+    }\n+    closeEditModal()\n+  }\n+\n+  const deleteProfile = (profileIndex: number) => {\n+    if (confirm(\"Are you sure you want to delete this profile?\")) {\n+      // In a real app, this would delete from backend\n+      console.log(\"Profile deleted:\", subProfiles[profileIndex])\n+      if (selectedProfile === profileIndex) {\n+        setSelectedProfile(0)\n+      }\n+    }\n+  }\n+\n+  // Add these handler functions before the renderFraudProtection function\n+  // 2. Update the handleCountrySelect function to handle toggling selection\n+  const handleCountrySelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\n+    const selectedCode = e.target.value\n+    if (!selectedCode) return\n+\n+    const countryToAdd = countries.find((country) => country.code === selectedCode)\n+    if (countryToAdd && !selectedCountries.some((country) => country.code === selectedCode)) {\n+      setSelectedCountries([...selectedCountries, countryToAdd])\n+    }\n+\n+    // Reset the select element\n+    e.target.value = \"\"\n+  }\n+\n+  const handleRemoveCountry = (codeToRemove: string) => {\n+    setSelectedCountries(selectedCountries.filter((country) => country.code !== codeToRemove))\n+  }\n+\n+  const handleSelectAllCountries = () => {\n+    setSelectedCountries([...countries])\n+  }\n+\n+  const handleDeselectAllCountries = () => {\n+    setSelectedCountries([])\n+  }\n+\n+  const handleSignOut = () => {\n+    // Here you would typically handle sign out logic\n+    // For now, we'll just navigate to the login page\n+    router.push('/login')\n+  }\n+\n+  const renderDashboard = () => (\n+    <div className=\"p-6 space-y-6\">\n+      {/* Filters */}\n+      <div className=\"bg-white rounded-lg p-6 shadow-sm hover:shadow-lg hover:scale-[1.02] transition-all duration-300\">\n+        <div className=\"grid grid-cols-1 md:grid-cols-6 gap-4 items-end\">\n+          <div className=\"md:col-span-1\">\n+            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Ad Account</label>\n+            <div className=\"relative\">\n+              <select className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent appearance-none bg-white\">\n+                <option>Select</option>\n+                <option>Account 1</option>\n+                <option>Account 2</option>\n+              </select>\n+              <svg\n+                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none\"\n+                fill=\"none\"\n+                stroke=\"currentColor\"\n+                viewBox=\"0 0 24 24\"\n+              >\n+                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n+              </svg>\n+            </div>\n+          </div>\n+\n+          <div className=\"md:col-span-1\">\n+            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Campaign</label>\n+            <div className=\"relative\">\n+              <select className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent appearance-none bg-white\">\n+                <option>Select</option>\n+                <option>Campaign 1</option>\n+                <option>Campaign 2</option>\n+              </select>\n+              <svg\n+                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none\"\n+                fill=\"none\"\n+                stroke=\"currentColor\"\n+                viewBox=\"0 0 24 24\"\n+              >\n+                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n+              </svg>\n+            </div>\n+          </div>\n+\n+          <div className=\"md:col-span-1\">\n+            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Adset</label>\n+            <div className=\"relative\">\n+              <select className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent appearance-none bg-white\">\n+                <option>Select</option>\n+                <option>Adset 1</option>\n+                <option>Adset 2</option>\n+              </select>\n+              <svg\n+                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none\"\n+                fill=\"none\"\n+                stroke=\"currentColor\"\n+                viewBox=\"0 0 24 24\"\n+              >\n+                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n+              </svg>\n+            </div>\n+          </div>\n+\n+          <div className=\"md:col-span-1\">\n+            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Pixel</label>\n+            <div className=\"relative\">\n+              <select className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent appearance-none bg-white\">\n+                <option>Select</option>\n+                <option>Pixel 1</option>\n+                <option>Pixel 2</option>\n+              </select>\n+              <svg\n+                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none\"\n+                fill=\"none\"\n+                stroke=\"currentColor\"\n+                viewBox=\"0 0 24 24\"\n+              >\n+                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n+              </svg>\n+            </div>\n+          </div>\n+\n+          <div className=\"md:col-span-1\">\n+            <button className=\"w-full bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-lg font-medium transition-colors duration-200\">\n+              Protect\n+            </button>\n+          </div>\n+\n+          <div className=\"md:col-span-1\">\n+            <button\n+              onClick={() => setIsCalendarOpen(true)}\n+              className=\"w-full flex items-center justify-center space-x-2 px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors duration-200\"\n+            >\n+              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                <path\n+                  strokeLinecap=\"round\"\n+                  strokeLinejoin=\"round\"\n+                  strokeWidth={2}\n+                  d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n+                />\n+              </svg>\n+              <span className=\"truncate\">\n+                {startDate && endDate\n+                  ? `${startDate.toLocaleDateString()} — ${endDate.toLocaleDateString()}`\n+                  : \"Feb 10, 2023 — Feb 12, 2023\"}\n+              </span>\n+              <svg className=\"w-4 h-4 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n+              </svg>\n+            </button>\n+          </div>\n+        </div>\n+      </div>\n+\n+      {/* Stats Cards */}\n+      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-6\">\n+        {statsCards.map((stat, index) => (\n+          <div\n+            key={index}\n+            className=\"bg-white rounded-lg shadow-sm p-6 h-36 flex flex-col justify-between hover:scale-105 transition-transform duration-200 group\"\n+          >\n+            <div className=\"flex items-center justify-between\">\n+              <div className=\"flex-1\">\n+                <p className=\"text-sm font-medium text-gray-600 mb-2\">{stat.title}</p>\n+                <p className=\"text-3xl font-bold text-gray-900\">{stat.value}</p>\n+              </div>\n+              <div className={`${stat.color} ml-4 transition-transform duration-300 group-hover:scale-110`}>\n+                {stat.title === \"Total Clicks\" && (\n+                  <svg\n+                    className=\"w-6 h-6 group-hover:animate-pulse\"\n+                    fill=\"none\"\n+                    stroke=\"currentColor\"\n+                    viewBox=\"0 0 24 24\"\n+                  >\n+                    <path\n+                      strokeLinecap=\"round\"\n+                      strokeLinejoin=\"round\"\n+                      strokeWidth={2}\n+                      d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n+                    />\n+                    <path\n+                      strokeLinecap=\"round\"\n+                      strokeLinejoin=\"round\"\n+                      strokeWidth={2}\n+                      d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\n+                    />\n+                  </svg>\n+                )}\n+                {stat.title === \"Fraud Clicks\" && (\n+                  <svg\n+                    className=\"w-6 h-6 group-hover:animate-pulse\"\n+                    fill=\"none\"\n+                    stroke=\"currentColor\"\n+                    viewBox=\"0 0 24 24\">\n+                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.29 3.86l-7.09 12.26A2 2 0 005.18 19h13.64a2 2 0 001.98-2.88l-7.09-12.26a2 2 0 00-3.42 0z\" />\n+                    <line x1=\"12\" y1=\"9\" x2=\"12\" y2=\"13\" stroke=\"currentColor\" strokeWidth={2} />\n+                    <circle cx=\"12\" cy=\"17\" r=\"1\" stroke=\"currentColor\" strokeWidth={2} />\n+                  </svg>\n+                )}\n+                {stat.title === \"Total Unique Visitors\" && (\n+                  <svg\n+                    className=\"w-6 h-6 group-hover:animate-pulse\"\n+                    fill=\"none\"\n+                    stroke=\"currentColor\"\n+                    viewBox=\"0 0 24 24\">\n+                    {/* Profil başı */}\n+                    <circle cx=\"12\" cy=\"8\" r=\"4\" strokeWidth=\"2\" />\n+                    {/* Gövde */}\n+                    <path strokeWidth=\"2\" d=\"M4 20c0-2.5 3.5-4 8-4s8 1.5 8 4\" />\n+                    {/* ID etiketi */}\n+                    <rect x=\"8\" y=\"16\" width=\"8\" height=\"4\" rx=\"1\" strokeWidth=\"2\" />\n+                    <text x=\"12\" y=\"19\" textAnchor=\"middle\" fontSize=\"2.5\" fill=\"currentColor\">ID</text>\n+                  </svg>\n+                )}\n+                {stat.title === \"Total Block Ip\" && (\n+                  <svg\n+                    className=\"w-6 h-6 group-hover:animate-spin\"\n+                    fill=\"none\"\n+                    stroke=\"currentColor\"\n+                    viewBox=\"0 0 24 24\"\n+                  >\n+                    <path\n+                      strokeLinecap=\"round\"\n+                      strokeLinejoin=\"round\"\n+                      strokeWidth={2}\n+                      d=\"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728L5.636 5.636m12.728 12.728L5.636 5.636\"\n+                    />\n+                  </svg>\n+                )}\n+                {stat.title === \"VPN & Location Fraud\" && (\n+                  <svg\n+                    className=\"w-6 h-6 group-hover:animate-pulse\"\n+                    fill=\"none\"\n+                    stroke=\"currentColor\"\n+                    viewBox=\"0 0 24 24\"\n+                  >\n+                    <path\n+                      strokeLinecap=\"round\"\n+                      strokeLinejoin=\"round\"\n+                      strokeWidth={2}\n+                      d=\"M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9v-9m0-9v9m0 9c-5 0-9-4-9-9s4-9 9-9\"\n+                    />\n+                  </svg>\n+                )}\n+              </div>\n+            </div>\n+          </div>\n+        ))}\n+      </div>\n+\n+      {/* Middle Stats */}\n+      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-6 gap-6\">\n+        {bottomStats.map((stat, index) => (\n+          <div\n+            key={index}\n+            className=\"bg-white rounded-lg shadow-sm p-6 h-36 flex flex-col justify-between hover:scale-105 transition-transform duration-200\"\n+          >\n+            <div className=\"flex items-center justify-between mb-2\">\n+              <div className=\"flex-1\">\n+                <p className=\"text-sm font-medium text-gray-600 mb-2\">{stat.title}</p>\n+                <p className=\"text-2xl font-bold text-gray-900\">{stat.value}</p>\n+              </div>\n+              <div className={`${stat.color} ml-4`}>{stat.icon}</div>\n+            </div>\n+            {stat.progress && (\n+              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n+                <div\n+                  className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n+                  style={{ width: `${stat.progress}%` }}\n+                ></div>\n+              </div>\n+            )}\n+          </div>\n+        ))}\n+\n+        {/* Threat Level */}\n+        <div className=\"bg-white rounded-lg shadow-sm p-6 h-36 hover:scale-105 transition-transform duration-200\">\n+          <div className=\"flex items-center justify-between mb-4\">\n+            <p className=\"text-sm font-medium text-gray-600\">Threat Level</p>\n+            <svg className=\"w-6 h-6 text-purple-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+              <path\n+                strokeLinecap=\"round\"\n+                strokeLinejoin=\"round\"\n+                strokeWidth={2}\n+                d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\"\n+              />\n+            </svg>\n+          </div>\n+          <div className=\"flex flex-col justify-between h-16\">\n+            <div className=\"flex items-center justify-between\">\n+              <span className=\"text-sm text-gray-600\">Low</span>\n+              <div className=\"w-20 bg-gray-200 rounded-full h-2\">\n+                <div className=\"bg-green-500 h-2 rounded-full w-3/4\"></div>\n+              </div>\n+            </div>\n+            <div className=\"flex items-center justify-between\">\n+              <span className=\"text-sm text-gray-600\">Mid</span>\n+              <div className=\"w-20 bg-gray-200 rounded-full h-2\">\n+                <div className=\"bg-orange-500 h-2 rounded-full w-1/2\"></div>\n+              </div>\n+            </div>\n+            <div className=\"flex items-center justify-between\">\n+              <span className=\"text-sm text-gray-600\">High</span>\n+              <div className=\"w-20 bg-gray-200 rounded-full h-2\">\n+                <div className=\"bg-red-500 h-2 rounded-full w-1/4\"></div>\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+      </div>\n+\n+      {/* Bottom Row - Chart and Savings Report */}\n+      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n+        {/* Interactive Donut Chart */}\n+        <div className=\"bg-white rounded-lg shadow-sm p-6 overflow-hidden hover:scale-105 transition-transform duration-200\">\n+          <div className=\"relative w-64 h-64 mx-auto\">\n+            {/* Background glow effects */}\n+            <div\n+              className=\"absolute inset-0 bg-blue-500/10 rounded-full blur-xl\"\n+              style={{\n+                transform: `scale(${1 + Math.sin(chartRotation * 0.05) * 0.05})`,\n+                transition: \"transform 0.5s ease-in-out\",\n+              }}\n+            ></div>\n+            <div\n+              className=\"absolute inset-0 bg-green-500/10 rounded-full blur-xl\"\n+              style={{\n+                transform: `scale(${1 + Math.sin(chartRotation * 0.03 + 2) * 0.05})`,\n+                transition: \"transform 0.5s ease-in-out\",\n+              }}\n+            ></div>\n+            <div\n+              className=\"absolute inset-0 bg-orange-500/10 rounded-full blur-xl\"\n+              style={{\n+                transform: `scale(${1 + Math.sin(chartRotation * 0.04 + 4) * 0.05})`,\n+                transition: \"transform 0.5s ease-in-out\",\n+              }}\n+            ></div>\n+\n+            {/* Main chart */}\n+            <svg\n+              className=\"w-full h-full transform\"\n+              style={{\n+                transform: `rotate(${-90 + (hoveredSegment !== null ? chartRotation * 0.1 : 0)}deg) scale(${\n+                  hoveredSegment !== null ? 1.05 : 1\n+                })`,\n+                transition: \"transform 0.3s ease-in-out\",\n+              }}\n+              viewBox=\"0 0 100 100\"\n+              onMouseEnter={() => setChartScale(1.05)}\n+              onMouseLeave={() => setChartScale(1)}\n+            >\n+              <defs>\n+                <filter id=\"glow\" x=\"-20%\" y=\"-20%\" width=\"140%\" height=\"140%\">\n+                  <feGaussianBlur stdDeviation=\"2\" result=\"blur\" />\n+                  <feComposite in=\"SourceGraphic\" in2=\"blur\" operator=\"over\" />\n+                </filter>\n+              </defs>\n+\n+              <circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"#f3f4f6\" strokeWidth=\"8\" fill=\"none\" />\n+              {chartData.map((segment, index) => {\n+                const strokeDasharray = `${(segment.value / totalSavings) * circumference} ${circumference}`\n+                const strokeDashoffset = (-cumulativePercentage * circumference) / 100\n+                cumulativePercentage += (segment.value / totalSavings) * 100\n+\n+                return (\n+                  <circle\n+                    key={index}\n+                    cx=\"50\"\n+                    cy=\"50\"\n+                    r=\"40\"\n+                    stroke={segment.color}\n+                    strokeWidth={hoveredSegment === index ? \"12\" : \"8\"}\n+                    fill=\"none\"\n+                    strokeDasharray={strokeDasharray}\n+                    strokeDashoffset={strokeDashoffset}\n+                    strokeLinecap=\"round\"\n+                    filter={hoveredSegment === index ? \"url(#glow)\" : \"\"}\n+                    className=\"transition-all duration-300 cursor-pointer\"\n+                    onMouseEnter={() => setHoveredSegment(index)}\n+                    onMouseLeave={() => setHoveredSegment(null)}\n+                    style={{\n+                      transition: \"all 0.3s ease-in-out\",\n+                      transform: hoveredSegment === index ? \"scale(1.02)\" : \"scale(1)\",\n+                      transformOrigin: \"center\",\n+                    }}\n+                  />\n+                )\n+              })}\n+\n+              {/* Animated particles */}\n+              {chartData.map((segment, index) => {\n+                const angle = (cumulativePercentage - segment.percentage / 2) * 3.6 * (Math.PI / 180)\n+                const x = 50 + 40 * Math.cos(angle)\n+                const y = 50 + 40 * Math.sin(angle)\n+\n+                return (\n+                  <circle\n+                    key={`particle-${index}`}\n+                    cx={x}\n+                    cy={y}\n+                    r={hoveredSegment === index ? 2 : 1}\n+                    fill={segment.color}\n+                    className=\"transition-all duration-300\"\n+                    style={{\n+                      opacity: hoveredSegment === index ? 1 : 0.7,\n+                      filter: hoveredSegment === index ? \"url(#glow)\" : \"\",\n+                      animation: \"pulse 2s infinite\",\n+                    }}\n+                  />\n+                )\n+              })}\n+            </svg>\n+\n+            {/* Center content */}\n+            <div\n+              className=\"absolute inset-0 flex flex-col items-center justify-center bg-white/80 rounded-full\"\n+              style={{\n+                width: \"65%\",\n+                height: \"65%\",\n+                left: \"17.5%\",\n+                top: \"17.5%\",\n+                backdropFilter: \"blur(5px)\",\n+                boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.05), 0 1px 3px rgba(0, 0, 0, 0.1)\",\n+                transform: `scale(${hoveredSegment !== null ? 1.1 : 1})`,\n+                transition: \"transform 0.3s ease-in-out\",\n+              }}\n+            >\n+              <p className=\"text-lg font-semibold text-gray-900\">Ad Spend Saved</p>\n+              <p\n+                className=\"text-3xl font-bold text-blue-600\"\n+                style={{\n+                  textShadow: hoveredSegment !== null ? \"0 0 10px rgba(59, 130, 246, 0.3)\" : \"none\",\n+                }}\n+              >\n+                ${totalSavings}\n+              </p>\n+              {hoveredSegment !== null && (\n+                <p\n+                  className=\"text-sm text-gray-600 mt-1 animate-fadeIn px-2 text-center max-w-full overflow-hidden\"\n+                  style={{\n+                    color: chartData[hoveredSegment].color,\n+                    fontWeight: \"500\",\n+                  }}\n+                >\n+                  {chartData[hoveredSegment].name}: ${chartData[hoveredSegment].value}\n+                </p>\n+              )}\n+            </div>\n+          </div>\n+\n+          {/* Legend */}\n+          <div className=\"flex justify-center mt-4 space-x-6\">\n+            {chartData.map((item, index) => (\n+              <div\n+                key={index}\n+                className=\"flex items-center space-x-2 cursor-pointer transition-all duration-200\"\n+                onMouseEnter={() => setHoveredSegment(index)}\n+                onMouseLeave={() => setHoveredSegment(null)}\n+                style={{\n+                  transform: hoveredSegment === index ? \"scale(1.1)\" : \"scale(1)\",\n+                }}\n+              >\n+                <div\n+                  className=\"w-3 h-3 rounded-full\"\n+                  style={{\n+                    backgroundColor: item.color,\n+                    boxShadow: hoveredSegment === index ? `0 0 8px ${item.color}` : \"none\",\n+                  }}\n+                ></div>\n+                <span\n+                  className=\"text-xs font-medium\"\n+                  style={{\n+                    color: hoveredSegment === index ? item.color : \"#6B7280\",\n+                  }}\n+                >\n+                  {item.name}\n+                </span>\n+              </div>\n+            ))}\n+          </div>\n+        </div>\n+\n+        {/* Estimated Savings Report */}\n+        <div className=\"bg-white rounded-lg shadow-sm hover:scale-105 transition-transform duration-200\">\n+          <div className=\"p-6 border-b border-gray-200\">\n+            <h3 className=\"text-lg font-semibold text-gray-900\">Estimated Savings Report</h3>\n+          </div>\n+          <div className=\"p-6 space-y-6\">\n+            {chartData.map((item, index) => (\n+              <div\n+                key={index}\n+                className={`flex items-center justify-between p-3 rounded-lg transition-all duration-300 cursor-pointer ${\n+                  hoveredSegment === index ? \"bg-gray-50 scale-105 shadow-md\" : \"hover:bg-gray-50 hover:shadow-sm\"\n+                }`}\n+                onMouseEnter={() => setHoveredSegment(index)}\n+                onMouseLeave={() => setHoveredSegment(null)}\n+              >\n+                <div className=\"flex items-center space-x-3\">\n+                  <div\n+                    className=\"w-4 h-4 rounded-full transition-all duration-300\"\n+                    style={{\n+                      backgroundColor: item.color,\n+                      transform: hoveredSegment === index ? \"scale(1.3)\" : \"scale(1)\",\n+                      boxShadow: hoveredSegment === index ? `0 0 10px ${item.color}` : \"none\",\n+                    }}\n+                  ></div>\n+                  <span\n+                    className={`text-sm font-medium transition-all duration-300 ${\n+                      hoveredSegment === index ? \"text-gray-900\" : \"text-gray-600\"\n+                    }`}\n+                  >\n+                    {item.name}\n+                  </span>\n+                </div>\n+                <div className=\"flex items-center\">\n+                  <span\n+                    className={`font-bold text-lg transition-all duration-300 ${\n+                      hoveredSegment === index ? \"text-blue-600 scale-110\" : \"text-gray-900\"\n+                    }`}\n+                  >\n+                    ${item.value}\n+                  </span>\n+                  <div\n+                    className={`ml-2 w-16 bg-gray-200 rounded-full h-1 transition-all duration-300 ${\n+                      hoveredSegment === index ? \"opacity-100\" : \"opacity-0\"\n+                    }`}\n+                  >\n+                    <div\n+                      className=\"h-1 rounded-full\"\n+                      style={{\n+                        width: `${item.percentage}%`,\n+                        backgroundColor: item.color,\n+                      }}\n+                    ></div>\n+                  </div>\n+                </div>\n+              </div>\n+            ))}\n+\n+            <div className=\"mt-8 pt-4 border-t border-gray-100\">\n+              <div className=\"flex items-center justify-between\">\n+                <span className=\"text-sm font-medium text-gray-600\">Total Savings</span>\n+                <span className=\"font-bold text-xl text-blue-600\">${totalSavings}</span>\n+              </div>\n+              <div className=\"mt-2 w-full bg-gray-200 rounded-full h-1.5\">\n+                <div className=\"bg-blue-600 h-1.5 rounded-full w-full\"></div>\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+  )\n+\n+  const renderUserActivity = () => (\n+    <div className=\"p-6\">\n+      {/* Header Controls */}\n+      <div className=\"bg-white rounded-lg p-6 shadow-sm mb-6\">\n+        <div className=\"flex flex-wrap items-center justify-between gap-4\">\n+          {/* Mode Filters */}\n+          <div className=\"flex items-center space-x-2\">\n+            {modes.map((mode) => (\n+              <button\n+                key={mode}\n+                onClick={() => setActiveMode(mode)}\n+                className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors duration-200 ${\n+                  activeMode === mode\n+                    ? \"bg-blue-100 text-blue-700 border border-blue-200\"\n+                    : \"bg-gray-100 text-gray-600 hover:bg-gray-200\"\n+                }`}\n+              >\n+                {mode}\n+              </button>\n+            ))}\n+          </div>\n+\n+          {/* Stats and Date Range */}\n+          <div className=\"flex items-center space-x-4\">\n+            <span className=\"text-sm font-medium text-gray-600\">10/10,000 Clicks</span>\n+            <button\n+              onClick={() => setIsCalendarOpen(true)}\n+              className=\"flex items-center space-x-2 px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors duration-200\"\n+            >\n+              <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                <path\n+                  strokeLinecap=\"round\"\n+                  strokeLinejoin=\"round\"\n+                  strokeWidth={2}\n+                  d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n+                />\n+              </svg>\n+              <span className=\"text-sm text-gray-600\">\n+                {startDate && endDate\n+                  ? `${startDate.toLocaleDateString()} — ${endDate.toLocaleDateString()}`\n+                  : \"Feb 10, 2023 — Feb 12, 2023\"}\n+              </span>\n+              <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n+              </svg>\n+            </button>\n+          </div>\n+        </div>\n+      </div>\n+\n+      {/* Data Table */}\n+      <div className=\"bg-white rounded-lg shadow-sm overflow-hidden\">\n+        <div className=\"overflow-x-auto\">\n+          <table className=\"w-full\">\n+            <thead className=\"bg-gray-50 border-b border-gray-200\">\n+              <tr>\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">User</th>\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n+                  User ID\n+                </th>\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n+                  IP Address\n+                </th>\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n+                  Clicks\n+                </th>\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n+                  Last Click Timestamp\n+                </th>\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n+                  Fraud Reason\n+                </th>\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Mode</th>\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n+                  Status\n+                </th>\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n+                  Action\n+                </th>\n+              </tr>\n+            </thead>\n+            <tbody className=\"bg-white divide-y divide-gray-200\">\n+              {userData.map((user) => (\n+                <tr key={user.id} className=\"hover:bg-gray-50 transition-colors duration-150\">\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{user.id}</td>\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{user.userId}</td>\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{user.ipAddress}</td>\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{user.clicks}</td>\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n+                    <div className=\"whitespace-pre-line\">{user.timestamp}</div>\n+                  </td>\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n+                    {user.fraudReason && <span className=\"text-red-600 font-medium\">{user.fraudReason}</span>}\n+                  </td>\n+                  <td className=\"px-6 py-4 whitespace-nowrap\">\n+                    <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${user.modeColor}`}>\n+                      {user.mode}\n+                    </span>\n+                  </td>\n+                  <td className=\"px-6 py-4 whitespace-nowrap\">\n+                    <span className={`text-sm font-medium ${user.statusColor}`}>{user.status}</span>\n+                  </td>\n+                  <td className=\"px-6 py-4 whitespace-nowrap\">\n+                    <button className=\"text-gray-400 hover:text-gray-600 transition-colors duration-200\">\n+                      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                        <path\n+                          strokeLinecap=\"round\"\n+                          strokeLinejoin=\"round\"\n+                          strokeWidth={2}\n+                          d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n+                        />\n+                        <path\n+                          strokeLinecap=\"round\"\n+                          strokeLinejoin=\"round\"\n+                          strokeWidth={2}\n+                          d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\n+                        />\n+                      </svg>\n+                    </button>\n+                  </td>\n+                </tr>\n+              ))}\n+            </tbody>\n+          </table>\n+        </div>\n+\n+        {/* Pagination */}\n+        <div className=\"bg-white px-6 py-3 border-t border-gray-200 flex items-center justify-between\">\n+          <div className=\"flex items-center space-x-2\">\n+            <span className=\"text-sm text-gray-700\">Showing</span>\n+            <select\n+              value={itemsPerPage}\n+              onChange={(e) => setItemsPerPage(Number(e.target.value))}\n+              className=\"border border-gray-300 rounded px-2 py-1 text-sm\"\n+            >\n+              <option value={10}>10</option>\n+              <option value={25}>25</option>\n+              <option value={50}>50</option>\n+            </select>\n+            <span className=\"text-sm text-gray-700\">\n+              to {endEntry} out of {totalEntries} entries\n+            </span>\n+          </div>\n+\n+          <div className=\"flex items-center space-x-2\">\n+            <button\n+              onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\n+              disabled={currentPage === 1}\n+              className=\"px-3 py-1 border border-gray-300 rounded text-sm hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n+            >\n+              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n+              </svg>\n+            </button>\n+\n+            {[...Array(Math.min(5, totalPages))].map((_, index) => {\n+              const pageNumber = index + 1\n+              return (\n+                <button\n+                  key={pageNumber}\n+                  onClick={() => setCurrentPage(pageNumber)}\n+                  className={`px-3 py-1 border rounded text-sm transition-colors duration-200 ${\n+                    currentPage === pageNumber\n+                      ? \"bg-blue-500 text-white border-blue-500\"\n+                      : \"border-gray-300 hover:bg-gray-50\"\n+                  }`}\n+                >\n+                  {pageNumber}\n+                </button>\n+              )\n+            })}\n+\n+            <button\n+              onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}\n+              disabled={currentPage === totalPages}\n+              className=\"px-3 py-1 border border-gray-300 rounded text-sm hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n+            >\n+              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n+              </svg>\n+            </button>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+  )\n+\n+  const renderFraudProtection = () => (\n+    <div className=\"p-6 space-y-6 relative\">\n+      {/* Header */}\n+      <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n+        <div className=\"flex items-center space-x-3 mb-4\">\n+          <svg className=\"w-6 h-6 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+            <path\n+              strokeLinecap=\"round\"\n+              strokeLinejoin=\"round\"\n+              strokeWidth={2}\n+              d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\"\n+            />\n+          </svg>\n+          <h2 className=\"text-xl font-semibold text-gray-900\">Fraud Control Settings</h2>\n+        </div>\n+        <p className=\"text-gray-600\">\n+          These rules run continuously and apply to all sessions. You can enable or customize them to automatically\n+          detect and block fraudulent behavior.\n+        </p>\n+\n+        {/* Mode Selection */}\n+        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mt-6\">\n+          <button\n+            onClick={() => setFraudMode(\"Monitor Mode\")}\n+            className={`p-4 rounded-lg border-2 transition-all duration-200 ${\n+              fraudMode === \"Monitor Mode\"\n+                ? \"border-orange-300 bg-orange-50\"\n+                : \"border-gray-200 bg-white hover:border-orange-200\"\n+            }`}\n+          >\n+            <div className=\"flex items-center space-x-3\">\n+              <div className=\"w-10 h-10 bg-orange-100 rounded-lg flex items-center justify-center\">\n+                <svg className=\"w-5 h-5 text-orange-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                  <path\n+                    strokeLinecap=\"round\"\n+                    strokeLinejoin=\"round\"\n+                    strokeWidth={2}\n+                    d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n+                  />\n+                </svg>\n+              </div>\n+              <div className=\"text-left\">\n+                <h3 className=\"font-semibold text-gray-900\">Monitor Mode</h3>\n+                <p className=\"text-sm text-gray-600\">\n+                  Detects fraud without auto-blocking; requires manual review to block.\n+                </p>\n+              </div>\n+            </div>\n+          </button>\n+\n+          <button\n+            onClick={() => setFraudMode(\"Aggressive Mode\")}\n+            className={`p-4 rounded-lg border-2 transition-all duration-200 ${\n+              fraudMode === \"Aggressive Mode\"\n+                ? \"border-red-300 bg-red-50\"\n+                : \"border-gray-200 bg-white hover:border-red-200\"\n+            }`}\n+          >\n+            <div className=\"flex items-center space-x-3\">\n+              <div className=\"w-10 h-10 bg-red-100 rounded-lg flex items-center justify-center\">\n+                <svg className=\"w-5 h-5 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                  <path\n+                    strokeLinecap=\"round\"\n+                    strokeLinejoin=\"round\"\n+                    strokeWidth={2}\n+                    d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\n+                  />\n+                </svg>\n+              </div>\n+              <div className=\"text-left\">\n+                <h3 className=\"font-semibold text-gray-900\">Aggressive Mode</h3>\n+                <p className=\"text-sm text-gray-600\">Instantly detects and automatically blocks fraudulent traffic.</p>\n+              </div>\n+            </div>\n+          </button>\n+        </div>\n+      </div>\n+\n+      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n+        {/* Suspicious Behavior */}\n+        <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n+          <div className=\"flex items-center space-x-3 mb-6\">\n+            <svg className=\"w-6 h-6 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+              <path\n+                strokeLinecap=\"round\"\n+                strokeLinejoin=\"round\"\n+                strokeWidth={2}\n+                d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\n+              />\n+            </svg>\n+            <h3 className=\"text-lg font-semibold text-gray-900\">Suspicious Behavior</h3>\n+          </div>\n+\n+          <div className=\"space-y-6\">\n+            {/* Bounce Rate */}\n+            <div className=\"flex items-start space-x-4\">\n+              <div className=\"flex items-center mt-1\">\n+                <Toggle checked={true} onChange={() => {}} />\n+              </div>\n+              <div className=\"flex-1\">\n+                <h4 className=\"font-medium text-gray-900 mb-2\">Bounce Rate</h4>\n+                <div className=\"flex items-center space-x-4 mb-2\">\n+                  <input\n+                    type=\"number\"\n+                    defaultValue={2}\n+                    className=\"w-20 px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n+                  />\n+                  <span className=\"text-gray-600\">Minimum session duration (seconds)</span>\n+                </div>\n+                <p className=\"text-sm text-gray-500\">\n+                  Flags users who leave the site within a short time (below minimum session duration).\n+                </p>\n+              </div>\n+            </div>\n+\n+            {/* Click Fraud Threshold */}\n+            <div className=\"flex items-start space-x-4\">\n+              <div className=\"flex items-center mt-1\">\n+                <Toggle checked={true} onChange={() => {}} />\n+              </div>\n+              <div className=\"flex-1\">\n+                <h4 className=\"font-medium text-gray-900 mb-2\">Click Fraud Threshold</h4>\n+                <p className=\"text-sm text-gray-500 mb-4\">\n+                  Limits high-frequency visits from the same user to prevent repeated click abuse.\n+                </p>\n+\n+                <div className=\"space-y-3 border border-gray-200 rounded-lg p-4\">\n+                  {clickThresholdRules.map((rule) => (\n+                    <div key={rule.id} className=\"flex items-center space-x-3\">\n+                      <span className=\"text-sm text-gray-600\">Allow up to</span>\n+                      <input\n+                        type=\"number\"\n+                        value={rule.clicks}\n+                        onChange={(e) => updateClickThresholdRule(rule.id, \"clicks\", Number.parseInt(e.target.value))}\n+                        className=\"w-16 px-2 py-1 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\n+                      />\n+                      <span className=\"text-sm text-gray-600\">ad clicks within</span>\n+                      <input\n+                        type=\"number\"\n+                        value={rule.time}\n+                        onChange={(e) => updateClickThresholdRule(rule.id, \"time\", Number.parseInt(e.target.value))}\n+                        className=\"w-16 px-2 py-1 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\n+                      />\n+                      <select\n+                        value={rule.unit}\n+                        onChange={(e) => updateClickThresholdRule(rule.id, \"unit\", e.target.value)}\n+                        className=\"px-3 py-1 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\n+                      >\n+                        <option value=\"minutes\">minutes</option>\n+                        <option value=\"hours\">hours</option>\n+                        <option value=\"days\">days</option>\n+                        <option value=\"months\">months</option>\n+                      </select>\n+                      <button\n+                        onClick={() => removeClickThresholdRule(rule.id)}\n+                        className=\"p-1 text-red-500 hover:text-red-700 transition-colors duration-200\"\n+                      >\n+                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                          <path\n+                            strokeLinecap=\"round\"\n+                            strokeLinejoin=\"round\"\n+                            strokeWidth={2}\n+                            d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n+                          />\n+                        </svg>\n+                      </button>\n+                    </div>\n+                  ))}\n+\n+                  <div className=\"flex justify-between items-center mt-4\">\n+                    <button\n+                      onClick={addClickThresholdRule}\n+                      className=\"px-4 py-2 border border-orange-300 text-orange-600 rounded-lg hover:bg-orange-50 transition-colors duration-200\"\n+                    >\n+                      New Rule\n+                    </button>\n+                    <button className=\"px-4 py-2 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors duration-200\">\n+                      Update Threshold Rules\n+                    </button>\n+                  </div>\n+                </div>\n+              </div>\n+            </div>\n+\n+            {/* No Mouse Movement */}\n+            <div className=\"flex items-start space-x-4\">\n+              <div className=\"flex items-center mt-1\">\n+                <Toggle checked={false} onChange={() => {}} />\n+              </div>\n+              <div className=\"flex-1\">\n+                <h4 className=\"font-medium text-gray-900 mb-2\">No Mouse Movement (Desktop)</h4>\n+                <p className=\"text-sm text-gray-500\">\n+                  Flags desktop users who show no mouse movement, indicating low interaction or automation.\n+                </p>\n+              </div>\n+            </div>\n+\n+            {/* No Scroll Activity */}\n+            <div className=\"flex items-start space-x-4\">\n+              <div className=\"flex items-center mt-1\">\n+                <Toggle checked={false} onChange={() => {}} />\n+              </div>\n+              <div className=\"flex-1\">\n+                <h4 className=\"font-medium text-gray-900 mb-2\">No Scroll Activity</h4>\n+                <p className=\"text-sm text-gray-500\">\n+                  Flags users who do not scroll the page, suggesting minimal engagement.\n+                </p>\n+              </div>\n+            </div>\n+\n+            {/* No Click Interaction */}\n+            <div className=\"flex items-start space-x-4\">\n+              <div className=\"flex items-center mt-1\">\n+                <Toggle checked={false} onChange={() => {}} />\n+              </div>\n+              <div className=\"flex-1\">\n+                <h4 className=\"font-medium text-gray-900 mb-2\">No Click Interaction</h4>\n+                <p className=\"text-sm text-gray-500\">\n+                  Flags users who never click on any element during their session.\n+                </p>\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+\n+        {/* VPN & Location Fraud */}\n+        <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n+          <div className=\"flex items-center space-x-3 mb-6\">\n+            <svg className=\"w-6 h-6 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+              <path\n+                strokeLinecap=\"round\"\n+                strokeLinejoin=\"round\"\n+                strokeWidth={2}\n+                d=\"M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9v-9m0-9v9m0 9c-5 0-9-4-9-9s4-9 9-9\"\n+              />\n+            </svg>\n+            <h3 className=\"text-lg font-semibold text-gray-900\">Vpn & Location Fraud</h3>\n+          </div>\n+\n+          <div className=\"space-y-6\">\n+            {/* Block VPN/Proxy */}\n+            <div className=\"flex items-start space-x-4\">\n+              <div className=\"flex items-center mt-1\">\n+                <Toggle checked={false} onChange={() => {}} />\n+              </div>\n+              <div className=\"flex-1\">\n+                <h4 className=\"font-medium text-gray-900 mb-2\">Block VPN/Proxy</h4>\n+                <p className=\"text-sm text-gray-500\">\n+                  Blocks users identified as using VPNs or proxy services to mask their IP.\n+                </p>\n+              </div>\n+            </div>\n+\n+            {/* ISP Fraud Detection */}\n+            <div className=\"flex items-start space-x-4\">\n+              <div className=\"flex items-center mt-1\">\n+                <Toggle checked={false} onChange={() => {}} />\n+              </div>\n+              <div className=\"flex-1\">\n+                <h4 className=\"font-medium text-gray-900 mb-2\">ISP Fraud Detection</h4>\n+                <p className=\"text-sm text-gray-500\">\n+                  Flags users connected through high-risk or suspicious internet providers.\n+                </p>\n+              </div>\n+            </div>\n+\n+            {/* IP/Geo Location Mismatch */}\n+            <div className=\"flex items-start space-x-4\">\n+              <div className=\"flex items-center mt-1\">\n+                <Toggle checked={true} onChange={() => {}} />\n+              </div>\n+              <div className=\"flex-1\">\n+                <h4 className=\"font-medium text-gray-900 mb-2\">IP/Geo Location Mismatch</h4>\n+                <p className=\"text-sm text-gray-500\">\n+                  Blocks users whose IP address does not align with their reported geolocation.\n+                </p>\n+              </div>\n+            </div>\n+\n+            {/* Timezone/IP Mismatch */}\n+            <div className=\"flex items-start space-x-4\">\n+              <div className=\"flex items-center mt-1\">\n+                <Toggle checked={true} onChange={() => {}} />\n+              </div>\n+              <div className=\"flex-1\">\n+                <h4 className=\"font-medium text-gray-900 mb-2\">Timezone/IP Mismatch</h4>\n+                <p className=\"text-sm text-gray-500\">\n+                  Blocks users whose browser timezone doesn't match their IP-based location.\n+                </p>\n+              </div>\n+            </div>\n+\n+            {/* Country-Based Blocking */}\n+            <div className=\"flex items-start space-x-4\">\n+              <div className=\"flex items-center mt-1\">\n+                <Toggle checked={false} onChange={() => {}} />\n+              </div>\n+              <div className=\"flex-1\">\n+                <h4 className=\"font-medium text-gray-900 mb-2\">Country-Based Blocking</h4>\n+                <p className=\"text-sm text-gray-500 mb-3\">Only allow traffic from selected countries (whitelist).</p>\n+\n+                <div className=\"space-y-3\">\n+                  <div className=\"relative\">\n+                    <select\n+                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white\"\n+                      onChange={handleCountrySelect}\n+                      value=\"\"\n+                    >\n+                      <option value=\"\" disabled>\n+                        Select countries to allow\n+                      </option>\n+                      {countries.map((country) => {\n+                        const isSelected = selectedCountries.some((c) => c.code === country.code)\n+                        return (\n+                          <option\n+                            key={country.code}\n+                            value={country.code}\n+                            className={isSelected ? \"text-gray-400\" : \"\"}\n+                            disabled={isSelected}\n+                          >\n+                            {country.name} {isSelected ? \"(Selected)\" : \"\"}\n+                          </option>\n+                        )\n+                      })}\n+                    </select>\n+                  </div>\n+                  <div className=\"flex space-x-2\">\n+                    <button\n+                      onClick={handleSelectAllCountries}\n+                      className=\"px-3 py-1 text-xs bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-md transition-colors\"\n+                    >\n+                      Select All Countries\n+                    </button>\n+                    <button\n+                      onClick={handleDeselectAllCountries}\n+                      className=\"px-3 py-1 text-xs bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-md transition-colors\"\n+                    >\n+                      Deselect All\n+                    </button>\n+                  </div>\n+                  {selectedCountries.length > 0 ? (\n+                    <div className=\"mt-3 flex flex-wrap gap-2\">\n+                      {selectedCountries.map((country) => (\n+                        <div\n+                          key={country.code}\n+                          className=\"bg-blue-50 text-blue-700 px-2 py-1 rounded-md text-sm flex items-center\"\n+                        >\n+                          {country.name}\n+                          <button\n+                            className=\"ml-1 text-blue-500 hover:text-blue-700\"\n+                            onClick={() => handleRemoveCountry(country.code)}\n+                          >\n+                            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                              <path\n+                                strokeLinecap=\"round\"\n+                                strokeLinejoin=\"round\"\n+                                strokeWidth={2}\n+                                d=\"M6 18L18 6M6 6l12 12\"\n+                              />\n+                            </svg>\n+                          </button>\n+                        </div>\n+                      ))}\n+                    </div>\n+                  ) : (\n+                    <div className=\"mt-3 text-sm text-gray-500 italic\">\n+                      No countries selected. All traffic will be blocked.\n+                    </div>\n+                  )}\n+                </div>\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+\n+        {/* Browser Fraud */}\n+        <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n+          <div className=\"flex items-center space-x-3 mb-6\">\n+            <svg className=\"w-6 h-6 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+              <path\n+                strokeLinecap=\"round\"\n+                strokeLinejoin=\"round\"\n+                strokeWidth={2}\n+                d=\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\n+              />\n+            </svg>\n+            <h3 className=\"text-lg font-semibold text-gray-900\">Browser Fraud</h3>\n+          </div>\n+\n+          <div className=\"space-y-6\">\n+            {/* Incognito/Ad Blocker Detected */}\n+            <div className=\"flex items-start space-x-4\">\n+              <div className=\"flex items-center mt-1\">\n+                <Toggle checked={true} onChange={() => {}} />\n+              </div>\n+              <div className=\"flex-1\">\n+                <h4 className=\"font-medium text-gray-900 mb-2\">Incognito/Ad Blocker Detected</h4>\n+                <p className=\"text-sm text-gray-500\">\n+                  Flags users browsing in private/incognito mode or using ad-blocking extensions.\n+                </p>\n+              </div>\n+            </div>\n+\n+            {/* JavaScript Disabled */}\n+            <div className=\"flex items-start space-x-4\">\n+              <div className=\"flex items-center mt-1\">\n+                <Toggle checked={true} onChange={() => {}} />\n+              </div>\n+              <div className=\"flex-1\">\n+                <h4 className=\"font-medium text-gray-900 mb-2\">JavaScript Disabled</h4>\n+                <p className=\"text-sm text-gray-500\">\n+                  Blocks users with JavaScript disabled, a common trait of bots or anti-tracking setups.\n+                </p>\n+              </div>\n+            </div>\n+\n+            {/* Browser Language Fraud Detection */}\n+            <div className=\"flex items-start space-x-4\">\n+              <div className=\"flex items-center mt-1\">\n+                <Toggle checked={false} onChange={() => {}} />\n+              </div>\n+              <div className=\"flex-1\">\n+                <h4 className=\"font-medium text-gray-900 mb-2\">Browser Language Fraud Detection</h4>\n+                <p className=\"text-sm text-gray-500\">\n+                  Flags users with non-English browser languages (Only EN-US, EN-GB etc. are allowed)\n+                </p>\n+              </div>\n+            </div>\n+\n+            {/* Headless Browser Detected */}\n+            <div className=\"flex items-start space-x-4\">\n+              <div className=\"flex items-center mt-1\">\n+                <Toggle checked={true} onChange={() => {}} />\n+              </div>\n+              <div className=\"flex-1\">\n+                <h4 className=\"font-medium text-gray-900 mb-2\">Headless Browser Detected</h4>\n+                <p className=\"text-sm text-gray-500\">\n+                  Blocks sessions running in headless or automation-mode browsers, common in bots.\n+                </p>\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+\n+        {/* Geo Access Control */}\n+        <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n+          <div className=\"flex items-center space-x-3 mb-6\">\n+            <svg className=\"w-6 h-6 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+              <path\n+                strokeLinecap=\"round\"\n+                strokeLinejoin=\"round\"\n+                strokeWidth={2}\n+                d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\"\n+              />\n+              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n+            </svg>\n+            <h3 className=\"text-lg font-semibold text-gray-900\">Geo Access Control</h3>\n+          </div>\n+\n+          <div className=\"space-y-6\">\n+            {/* One-Time Geolocation */}\n+            <div className=\"flex items-start space-x-4\">\n+              <div className=\"flex items-center mt-1\">\n+                <Toggle checked={false} onChange={() => {}} />\n+              </div>\n+              <div className=\"flex-1\">\n+                <h4 className=\"font-medium text-gray-900 mb-2\">One-Time Geolocation</h4>\n+                <p className=\"text-sm text-gray-500\">\n+                  Prompts users to share their location once for additional verification.\n+                </p>\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+      </div>\n+      {/* Save Settings Button */}\n+      <div className=\"flex justify-end mt-8\">\n+        <button\n+          onClick={() => {\n+            setShowFraudSaveToast(true);\n+            setTimeout(() => setShowFraudSaveToast(false), 2000);\n+          }}\n+          className=\"px-6 py-3 bg-blue-600 text-white rounded-lg shadow hover:bg-blue-700 transition-colors duration-200 font-semibold text-lg\"\n+        >\n+          Save Settings\n+        </button>\n+      </div>\n+      {/* Toast Notification */}\n+      {showFraudSaveToast && (\n+        <div className=\"fixed right-8 bottom-8 z-50 bg-green-500 text-white px-6 py-4 rounded-lg shadow-lg flex items-center space-x-2 animate-fadeIn\">\n+          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n+          </svg>\n+          <span className=\"font-medium\">Settings saved</span>\n+        </div>\n+      )}\n+    </div>\n+  )\n+\n+  const renderIntegrations = () => (\n+    <div className=\"p-6 space-y-6\">\n+      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n+        {/* Website Domain Section */}\n+        <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n+          <h3 className=\"text-lg font-semibold text-gray-900 mb-6\">Please Enter Your Website Domain</h3>\n+\n+          <div className=\"space-y-4\">\n+            <div>\n+              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Website</label>\n+              <div className=\"flex space-x-3\">\n+                <input\n+                  type=\"text\"\n+                  defaultValue=\"www.yourdomain.com\"\n+                  className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n+                />\n+                <button className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors duration-200\">\n+                  Test Connection\n+                </button>\n+              </div>\n+            </div>\n+\n+            <div>\n+              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Status</label>\n+              <span className=\"inline-flex px-3 py-1 text-sm font-medium bg-green-100 text-green-800 rounded-full\">\n+                Connected\n+              </span>\n+            </div>\n+\n+            <div>\n+              <label className=\"block text-sm font-medium text-gray-700 mb-2\">HTML Code</label>\n+              <div className=\"relative\">\n+                <textarea\n+                  readOnly\n+                  value={`<!DOCTYPE html>\n+<html lang=\"en\">\n+<head>\n+  <meta charset=\"UTF-8\">\n+  <title>Fraud Detection Settings</title>\n+</head>\n+<body>\n+\n+  <h1>Detection Mode</h1>\n+  \n+  <h2>Safe Mode</h2>\n+  <p>Flags medium-risk behavior for review.</p>\n+  \n+  <h2>Aggressive Mode</h2>\n+  <p>Blocks high-risk users immediately.</p>\n+  \n+  <h1>Custom Rules</h1>\n+  <p>Extra checks like VPN, incognito, and user interaction.</p>\n+  \n+  <h2>Visitor Threshold</h2>\n+  <p>Limits visits over short and long periods.</p>\n+  \n+  <h2>Session Control</h2>\n+  <p>Blocks long or suspicious sessions.</p>\n+\n+</body>\n+</html>`}\n+                  className=\"w-full h-64 px-3 py-2 border border-gray-300 rounded-lg bg-gray-50 text-sm font-mono resize-none\"\n+                />\n+                <button\n+                  onClick={() => {\n+                    const textarea = document.querySelector(\"textarea\");\n+                    if (textarea) {\n+                      navigator.clipboard.writeText(textarea.value);\n+                    }\n+                    // You could add a toast notification here\n+                  }}\n+                  className=\"absolute top-3 right-3 px-3 py-1 bg-gray-200 text-gray-700 rounded text-sm hover:bg-gray-300 transition-colors duration-200 flex items-center space-x-1\"\n+                >\n+                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                    <path\n+                      strokeLinecap=\"round\"\n+                      strokeLinejoin=\"round\"\n+                      strokeWidth={2}\n+                      d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\"\n+                    />\n+                  </svg>\n+                  <span>Copy</span>\n+                </button>\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+\n+        {/* Facebook Event Test Section */}\n+        <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n+          <h3 className=\"text-lg font-semibold text-gray-900 mb-6\">Facebook Event Test</h3>\n+\n+          <div className=\"space-y-4\">\n+            <div>\n+              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Event Name</label>\n+              <div className=\"flex space-x-3\">\n+                <input\n+                  type=\"text\"\n+                  value=\"Oliggo3824639423\"\n+                  readOnly\n+                  className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg bg-gray-50 text-gray-600\"\n+                />\n+                <button className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors duration-200\">\n+                  Test Connection\n+                </button>\n+              </div>\n+            </div>\n+\n+            <div>\n+              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Status</label>\n+              <span className=\"inline-flex px-3 py-1 text-sm font-medium bg-green-100 text-green-800 rounded-full\">\n+                Connected\n+              </span>\n+            </div>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+  )\n+\n+  const renderRefundReport = () => (\n+    <div className=\"p-6 space-y-6\">\n+      {/* Header Stats */}\n+      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n+        <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n+          <div className=\"flex items-center space-x-3\">\n+            <div className=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center\">\n+              <svg className=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                <path\n+                  strokeLinecap=\"round\"\n+                  strokeLinejoin=\"round\"\n+                  strokeWidth={2}\n+                  d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\"\n+                />\n+              </svg>\n+            </div>\n+            <div>\n+              <p className=\"text-sm font-medium text-gray-600\">All Time Refund</p>\n+              <p className=\"text-2xl font-bold text-gray-900\">$300</p>\n+            </div>\n+          </div>\n+        </div>\n+\n+        <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n+          <div className=\"flex items-center space-x-3\">\n+            <div className=\"w-10 h-10 bg-purple-100 rounded-lg flex items-center justify-center\">\n+              <svg className=\"w-5 h-5 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                <path\n+                  strokeLinecap=\"round\"\n+                  strokeLinejoin=\"round\"\n+                  strokeWidth={2}\n+                  d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n+                />\n+              </svg>\n+            </div>\n+            <div>\n+              <p className=\"text-sm font-medium text-gray-600\">Next Upcoming Refund Date</p>\n+              <p className=\"text-2xl font-bold text-gray-900\">05/01/2025</p>\n+            </div>\n+          </div>\n+        </div>\n+      </div>\n+\n+      {/* Refund Table */}\n+      <div className=\"bg-white rounded-lg shadow-sm overflow-hidden\">\n+        <div className=\"overflow-x-auto\">\n+          <table className=\"w-full\">\n+            <thead className=\"bg-gray-50 border-b border-gray-200\">\n+              <tr>\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Week</th>\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n+                  Start Date\n+                </th>\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n+                  End Date\n+                </th>\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n+                  Refund Amount\n+                </th>\n+                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Link</th>\n+              </tr>\n+            </thead>\n+            <tbody className=\"bg-white divide-y divide-gray-200\">\n+              {refundData.weeks.map((week) => (\n+                <tr key={week.id} className=\"hover:bg-gray-50 transition-colors duration-150\">\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{week.week}</td>\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n+                    <div>\n+                      <div>{week.startDate}</div>\n+                      <div className=\"text-xs text-gray-400\">{week.startTime}</div>\n+                    </div>\n+                  </td>\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n+                    <div>\n+                      <div>{week.endDate}</div>\n+                      <div className=\"text-xs text-gray-400\">{week.endTime}</div>\n+                    </div>\n+                  </td>\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{week.refundAmount}</td>\n+                  <td className=\"px-6 py-4 whitespace-nowrap\">\n+                    <button\n+                      onClick={() => navigator.clipboard.writeText(week.link)}\n+                      className=\"inline-flex items-center space-x-1 px-3 py-1 border border-gray-300 rounded text-sm hover:bg-gray-50 transition-colors duration-200\"\n+                    >\n+                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                        <path\n+                          strokeLinecap=\"round\"\n+                          strokeLinejoin=\"round\"\n+                          strokeWidth={2}\n+                          d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\"\n+                        />\n+                      </svg>\n+                      <span>Copy Link</span>\n+                    </button>\n+                  </td>\n+                </tr>\n+              ))}\n+            </tbody>\n+          </table>\n+        </div>\n+\n+        {/* Pagination */}\n+        <div className=\"bg-white px-6 py-3 border-t border-gray-200 flex items-center justify-between\">\n+          <div className=\"flex items-center space-x-2\">\n+            <span className=\"text-sm text-gray-700\">Showing 1 to</span>\n+            <select className=\"border border-gray-300 rounded px-2 py-1 text-sm\">\n+              <option value={10}>10</option>\n+              <option value={25}>25</option>\n+              <option value={50}>50</option>\n+            </select>\n+            <span className=\"text-sm text-gray-700\">out of 20 entries</span>\n+          </div>\n+\n+          <div className=\"flex items-center space-x-2\">\n+            <button className=\"px-3 py-1 border border-gray-300 rounded text-sm hover:bg-gray-50\">\n+              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n+              </svg>\n+            </button>\n+            <button className=\"px-3 py-1 bg-blue-500 text-white border border-blue-500 rounded text-sm\">1</button>\n+            <button className=\"px-3 py-1 border border-gray-300 rounded text-sm hover:bg-gray-50\">2</button>\n+            <button className=\"px-3 py-1 border border-gray-300 rounded text-sm hover:bg-gray-50\">\n+              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n+              </svg>\n+            </button>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+  )\n+\n+  return (\n+    <div className=\"min-h-screen flex flex-col bg-gray-50\">\n+      {/* Header */}\n+      <header className=\"bg-white shadow-sm px-6 py-4 flex justify-between items-center z-10\">\n+        <div className=\"flex items-center\">\n+          <Image src=\"/images/new-logo.png\" alt=\"Oliggo Logo\" width={32} height={32} className=\"mr-2\" />\n+          <span className=\"text-blue-600 text-2xl font-medium\">Oliggo</span>\n+        </div>\n+\n+        <div className=\"relative\" ref={profileDropdownRef}>\n+          <button\n+            onClick={() => setIsProfileOpen(!isProfileOpen)}\n+            className=\"flex items-center space-x-2 text-gray-700 hover:text-gray-900\"\n+          >\n+            <div className=\"w-8 h-8 rounded-full bg-blue-500 flex items-center justify-center text-white font-medium\">\n+              {userFirstName[0]}\n+              {userLastName[0]}\n+            </div>\n+            <span className=\"font-medium\">{userFirstName}</span>\n+          </button>\n+\n+          {isProfileOpen && (\n+            <div className=\"absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg py-2 z-50\">\n+              <button\n+                onClick={() => {\n+                  setIsUserSettingsOpen(true);\n+                  setIsProfileOpen(false);\n+                }}\n+                className=\"w-full flex items-center justify-center space-x-2 text-gray-700 hover:text-blue-600 py-2\"\n+              >\n+                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n+                </svg>\n+                <span>User Settings</span>\n+              </button>\n+              <button\n+                onClick={() => { window.location.href = '/admin'; }}\n+                className=\"w-full flex items-center justify-center space-x-2 text-gray-700 hover:text-blue-600 py-2\"\n+              >\n+                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\" />\n+                </svg>\n+                <span>Admin Panel</span>\n+              </button>\n+              <div className=\"border-t pt-4\">\n+                <button \n+                  onClick={handleSignOut}\n+                  className=\"w-full flex items-center justify-center space-x-2 text-red-600 hover:text-red-700\"\n+                >\n+                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                    <path\n+                      strokeLinecap=\"round\"\n+                      strokeLinejoin=\"round\"\n+                      strokeWidth={2}\n+                      d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n+                    />\n+                  </svg>\n+                  <span>Sign Out</span>\n+                </button>\n+              </div>\n+            </div>\n+          )}\n+        </div>\n+      </header>\n+\n+      <div className=\"flex flex-1\">\n+        {/* Left Sidebar */}\n+        <div\n+          className={`${isSidebarExpanded ? \"w-80\" : \"w-20\"} bg-white shadow-sm flex flex-col py-6 transition-all duration-300 relative`}\n+        >\n+          {/* Expand/Collapse Button - Moved above profiles */}\n+          <div className={`${isSidebarExpanded ? \"px-6\" : \"flex justify-center\"} mb-4`}>\n+            <button\n+              onClick={() => setIsSidebarExpanded(!isSidebarExpanded)}\n+              className=\"w-8 h-8 bg-gray-100 border border-gray-300 rounded-full flex items-center justify-center shadow-sm hover:shadow-md transition-all duration-200 hover:bg-gray-200\"\n+            >\n+              <svg\n+                className={`w-4 h-4 text-gray-600 transition-transform duration-200 ${isSidebarExpanded ? \"rotate-180\" : \"\"}`}\n+                fill=\"none\"\n+                stroke=\"currentColor\"\n+                viewBox=\"0 0 24 24\"\n+              >\n+                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n+              </svg>\n+            </button>\n+          </div>\n+\n+          <div className={`${isSidebarExpanded ? \"px-6\" : \"items-center\"} flex flex-col space-y-4`}>\n+            {/* Sub-profiles */}\n+            {subProfiles.map((profile, index) => (\n+              <div key={profile.id} className=\"relative\">\n+                <button\n+                  onClick={() => setSelectedProfile(index)}\n+                  onMouseEnter={() => !isSidebarExpanded && setHoveredProfile(index)}\n+                  onMouseLeave={() => !isSidebarExpanded && setHoveredProfile(null)}\n+                  className={`flex items-center justify-center transition-all duration-300 transform hover:scale-110 ${\n+                    isSidebarExpanded ? \"w-full flex-col\" : \"w-12 h-12 rounded-full\"\n+                  }`}\n+                >\n+                  <div\n+                    className={`w-12 h-12 rounded-full ${profile.color} flex items-center justify-center text-white font-medium shadow-md ${\n+                      selectedProfile === index ? \"ring-2 ring-blue-500 ring-offset-2\" : \"\"\n+                    }`}\n+                  >\n+                    {profile.initials}\n+                  </div>\n+\n+                  {isSidebarExpanded && (\n+                    <div className=\"mt-2 text-center\">\n+                      <p className=\"text-gray-800 font-medium\">{profile.name}</p>\n+                      <p className=\"text-gray-500 text-xs\">{profile.details.adAccount}</p>\n+                    </div>\n+                  )}\n+                </button>\n+\n+                {/* Tooltip for collapsed sidebar */}\n+                {!isSidebarExpanded && hoveredProfile === index && (\n+                  <div\n+                    className=\"absolute left-16 top-0 bg-white border border-gray-200 text-gray-800 p-3 rounded-lg shadow-xl z-50 w-64\"\n+                    onMouseEnter={() => setHoveredProfile(index)}\n+                    onMouseLeave={() => setHoveredProfile(null)}\n+                  >\n+                    <div className=\"flex items-center justify-between mb-2\">\n+                      <div className=\"font-medium text-blue-600\">{profile.name} Profile</div>\n+                      <div className=\"flex space-x-1\">\n+                        <button\n+                          onClick={() => openEditModal(index)}\n+                          className=\"p-1.5 text-gray-400 hover:text-blue-600 hover:bg-blue-50 rounded transition-colors duration-200\"\n+                          title=\"Edit Profile\"\n+                        >\n+                          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                            <path\n+                              strokeLinecap=\"round\"\n+                              strokeLinejoin=\"round\"\n+                              strokeWidth={2}\n+                              d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n+                            />\n+                          </svg>\n+                        </button>\n+                        <button\n+                          onClick={() => deleteProfile(index)}\n+                          className=\"p-1.5 text-gray-400 hover:text-red-600 hover:bg-red-50 rounded transition-colors duration-200\"\n+                          title=\"Delete Profile\"\n+                        >\n+                          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                            <path\n+                              strokeLinecap=\"round\"\n+                              strokeLinejoin=\"round\"\n+                              strokeWidth={2}\n+                              d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n+                            />\n+                          </svg>\n+                        </button>\n+                      </div>\n+                    </div>\n+                    <div className=\"text-sm space-y-2\">\n+                      <div>\n+                        <span className=\"text-gray-500\">Ad Account:</span> {profile.details.adAccount}\n+                      </div>\n+                      <div>\n+                        <span className=\"text-gray-500\">Campaign:</span> {profile.details.campaign}\n+                      </div>\n+                      <div>\n+                        <span className=\"text-gray-500\">Adset:</span> {profile.details.adset}\n+                      </div>\n+                      <div>\n+                        <span className=\"text-gray-500\">Pixel:</span> {profile.details.pixel}\n+                      </div>\n+                      <div>\n+                        <span className=\"text-gray-500\">Activated:</span> {profile.details.activatedTime}\n+                      </div>\n+                      <div>\n+                        <span className=\"text-gray-500\">Status:</span>\n+                        <span\n+                          className={`ml-1 ${profile.details.protectStatus === \"Active\" ? \"text-green-600\" : \"text-yellow-600\"}`}\n+                        >\n+                          {profile.details.protectStatus}\n+                        </span>\n+                      </div>\n+                    </div>\n+                    <div className=\"absolute left-0 top-3 w-0 h-0 border-t-4 border-b-4 border-r-4 border-transparent border-r-white -translate-x-1\"></div>\n+                  </div>\n+                )}\n+              </div>\n+            ))}\n+\n+            {/* Expanded Profile Details */}\n+            {isSidebarExpanded && (\n+              <div className=\"bg-gray-50 rounded-lg p-4 mt-4\">\n+                <div className=\"flex items-center justify-between mb-3\">\n+                  <h3 className=\"font-medium text-gray-800\">Profile Details</h3>\n+                  <div className=\"flex space-x-1\">\n+                    <button\n+                      onClick={() => openEditModal(selectedProfile)}\n+                      className=\"p-1.5 text-gray-400 hover:text-blue-600 hover:bg-blue-50 rounded transition-colors duration-200\"\n+                      title=\"Edit Profile\"\n+                    >\n+                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                        <path\n+                          strokeLinecap=\"round\"\n+                          strokeLinejoin=\"round\"\n+                          strokeWidth={2}\n+                          d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n+                        />\n+                      </svg>\n+                    </button>\n+                    <button\n+                      onClick={() => deleteProfile(selectedProfile)}\n+                      className=\"p-1.5 text-gray-400 hover:text-red-600 hover:bg-red-50 rounded transition-colors duration-200\"\n+                      title=\"Delete Profile\"\n+                    >\n+                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                        <path\n+                          strokeLinecap=\"round\"\n+                          strokeLinejoin=\"round\"\n+                          strokeWidth={2}\n+                          d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n+                        />\n+                      </svg>\n+                    </button>\n+                  </div>\n+                </div>\n+                <div className=\"space-y-2 text-sm\">\n+                  <div>\n+                    <span className=\"text-gray-500\">Campaign:</span>\n+                    <p className=\"text-gray-800\">{subProfiles[selectedProfile].details.campaign}</p>\n+                  </div>\n+                  <div>\n+                    <span className=\"text-gray-500\">Adset:</span>\n+                    <p className=\"text-gray-800\">{subProfiles[selectedProfile].details.adset}</p>\n+                  </div>\n+                  <div>\n+                    <span className=\"text-gray-500\">Pixel:</span>\n+                    <p className=\"text-gray-800\">{subProfiles[selectedProfile].details.pixel}</p>\n+                  </div>\n+                  <div>\n+                    <span className=\"text-gray-500\">Activated Time:</span>\n+                    <p className=\"text-gray-800\">{subProfiles[selectedProfile].details.activatedTime}</p>\n+                  </div>\n+                  <div>\n+                    <span className=\"text-gray-500\">Protect Status:</span>\n+                    <span\n+                      className={`ml-1 px-2 py-1 rounded-full text-xs font-medium ${\n+                        subProfiles[selectedProfile].details.protectStatus === \"Active\"\n+                          ? \"bg-green-100 text-green-800\"\n+                          : \"bg-yellow-100 text-yellow-800\"\n+                      }`}\n+                    >\n+                      {subProfiles[selectedProfile].details.protectStatus}\n+                    </span>\n+                  </div>\n+                </div>\n+              </div>\n+            )}\n+\n+            {/* Add Profile Button */}\n+            <button\n+              className={`${isSidebarExpanded ? \"w-full p-4 rounded-lg\" : \"w-12 h-12 rounded-full\"} border-2 border-dashed border-gray-300 flex items-center justify-center text-gray-400 hover:text-gray-600 hover:border-gray-400 transition-all duration-300 hover:scale-105`}\n+            >\n+              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n+              </svg>\n+              {isSidebarExpanded && <span className=\"ml-2 text-gray-600\">Add Profile</span>}\n+            </button>\n+\n+            {/* Separator Line */}\n+            <div className={`${isSidebarExpanded ? \"w-full\" : \"w-8\"} h-px bg-gray-300 my-4`}></div>\n+\n+            {/* Facebook Logo with Animation */}\n+            <div\n+              className={`${isSidebarExpanded ? \"w-full p-4 rounded-lg\" : \"w-12 h-12 rounded-lg\"} bg-blue-600 flex items-center justify-center transition-all duration-300 hover:bg-blue-700 hover:scale-105 ${isSidebarExpanded ? \"justify-start space-x-3\" : \"\"} relative overflow-hidden group`}\n+            >\n+              <div className=\"relative\">\n+                <span className=\"text-white font-bold text-lg transform transition-all duration-500 group-hover:rotate-12 group-hover:scale-110 inline-block\">\n+                  f\n+                </span>\n+                {/* Animated background pulse */}\n+                <div className=\"absolute inset-0 bg-blue-400 rounded-full opacity-0 group-hover:opacity-30 group-hover:animate-ping\"></div>\n+                {/* Rotating border */}\n+                <div className=\"absolute inset-0 border-2 border-blue-300 rounded-full opacity-0 group-hover:opacity-50 animate-spin\"></div>\n+              </div>\n+              {isSidebarExpanded && (\n+                <span className=\"text-white font-medium transform transition-all duration-300 group-hover:translate-x-1\">\n+                  Facebook Ads\n+                </span>\n+              )}\n+              {/* Floating particles */}\n+              <div className=\"absolute top-1 right-1 w-1 h-1 bg-blue-200 rounded-full opacity-0 group-hover:opacity-100 group-hover:animate-bounce\"></div>\n+              <div\n+                className=\"absolute bottom-1 left-1 w-1 h-1 bg-blue-200 rounded-full opacity-0 group-hover:opacity-100 group-hover:animate-bounce\"\n+                style={{ animationDelay: \"0.2s\" }}\n+              ></div>\n+            </div>\n+          </div>\n+        </div>\n+\n+        {/* Main Content */}\n+        <div className=\"flex-1 flex flex-col\">\n+          {/* Navigation Tabs */}\n+          <div className=\"bg-white border-b border-gray-200 px-6\">\n+            <div className=\"flex justify-center space-x-8\">\n+              {tabs.map((tab) => (\n+                <button\n+                  key={tab}\n+                  onClick={() => setActiveTab(tab)}\n+                  className={`py-4 px-2 border-b-2 font-medium text-sm transition-colors duration-200 ${\n+                    activeTab === tab\n+                      ? \"border-blue-500 text-blue-600\"\n+                      : \"border-transparent text-gray-500 hover:text-gray-700\"\n+                  }`}\n+                >\n+                  {tab}\n+                </button>\n+              ))}\n+            </div>\n+          </div>\n+\n+          {/* Content based on active tab */}\n+          <div className=\"flex-1\">\n+            {activeTab === \"Dashboard\" && renderDashboard()}\n+            {activeTab === \"User Activity\" && renderUserActivity()}\n+            {activeTab === \"Fraud Protection\" && renderFraudProtection()}\n+            {activeTab === \"Integrations\" && renderIntegrations()}\n+            {activeTab === \"Refund Report\" && renderRefundReport()}\n+          </div>\n+        </div>\n+      </div>\n+\n+      {/* Calendar Modal */}\n+      {isCalendarOpen && (\n+        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n+          <div className=\"bg-white rounded-lg p-6 w-96\">\n+            <div className=\"flex items-center justify-between mb-4\">\n+              <h3 className=\"text-lg font-semibold\">Select Date Range</h3>\n+              <button onClick={() => setIsCalendarOpen(false)} className=\"text-gray-400 hover:text-gray-600\">\n+                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n+                </svg>\n+              </button>\n+            </div>\n+\n+            {/* Calendar Header */}\n+            <div className=\"flex items-center justify-between mb-4\">\n+              <button\n+                onClick={() => setSelectedDate(new Date(selectedDate.getFullYear(), selectedDate.getMonth() - 1))}\n+                className=\"p-2 hover:bg-gray-100 rounded\"\n+              >\n+                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n+                </svg>\n+              </button>\n+              <h4 className=\"text-lg font-medium\">\n+                {selectedDate.toLocaleDateString(\"en-US\", { month: \"long\", year: \"numeric\" })}\n+              </h4>\n+              <button\n+                onClick={() => setSelectedDate(new Date(selectedDate.getFullYear(), selectedDate.getMonth() + 1))}\n+                className=\"p-2 hover:bg-gray-100 rounded\"\n+              >\n+                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n+                </svg>\n+              </button>\n+            </div>\n+\n+            {/* Calendar Grid */}\n+            <div className=\"grid grid-cols-7 gap-1 mb-4\">\n+              {[\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"].map((day) => (\n+                <div key={day} className=\"p-2 text-center text-sm font-medium text-gray-500\">\n+                  {day}\n+                </div>\n+              ))}\n+\n+              {/* Empty cells for days before month starts */}\n+              {Array.from({ length: getFirstDayOfMonth(selectedDate) }).map((_, index) => (\n+                <div key={index} className=\"p-2\"></div>\n+              ))}\n+\n+              {/* Days of the month */}\n+              {Array.from({ length: getDaysInMonth(selectedDate) }).map((_, index) => {\n+                const day = index + 1\n+                return (\n+                  <button\n+                    key={day}\n+                    onClick={() => handleDateClick(day)}\n+                    className={`p-2 text-sm rounded hover:bg-blue-100 transition-colors ${\n+                      isDateStart(day) || isDateEnd(day)\n+                        ? \"bg-blue-600 text-white\"\n+                        : isDateInRange(day)\n+                          ? \"bg-blue-100 text-blue-600\"\n+                          : \"text-gray-700\"\n+                    }`}\n+                  >\n+                    {day}\n+                  </button>\n+                )\n+              })}\n+            </div>\n+\n+            {/* Selected Range Display */}\n+            {startDate && (\n+              <div className=\"mb-4 p-3 bg-gray-50 rounded-lg\">\n+                <p className=\"text-sm text-gray-600\">\n+                  <strong>Start:</strong> {startDate.toLocaleDateString()}\n+                  {endDate && (\n+                    <>\n+                      <br />\n+                      <strong>End:</strong> {endDate.toLocaleDateString()}\n+                    </>\n+                  )}\n+                </p>\n+              </div>\n+            )}\n+\n+            <div className=\"flex justify-end space-x-3\">\n+              <button\n+                onClick={() => {\n+                  setStartDate(null)\n+                  setEndDate(null)\n+                  setIsCalendarOpen(false)\n+                }}\n+                className=\"px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors duration-200\"\n+              >\n+                Cancel\n+              </button>\n+              <button\n+                onClick={() => setIsCalendarOpen(false)}\n+                disabled={!startDate || !endDate}\n+                className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed\"\n+              >\n+                Apply\n+              </button>\n+            </div>\n+          </div>\n+        </div>\n+      )}\n+\n+      {/* Edit Profile Modal */}\n+      {isEditModalOpen && (\n+        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n+          <div className=\"bg-white rounded-lg p-6 w-96 max-w-md mx-4\">\n+            <div className=\"flex items-center justify-between mb-6\">\n+              <h3 className=\"text-lg font-semibold text-gray-900\">Edit Facebook Account</h3>\n+              <button\n+                onClick={closeEditModal}\n+                className=\"text-gray-400 hover:text-gray-600 transition-colors duration-200\"\n+              >\n+                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n+                </svg>\n+              </button>\n+            </div>\n+\n+            {/* Profile Avatar */}\n+            <div className=\"flex justify-center mb-6\">\n+              <div className=\"relative\">\n+                <div\n+                  className={`w-20 h-20 rounded-full ${editProfileColor} flex items-center justify-center text-xl font-bold shadow-lg`}\n+                >\n+                  {editProfileName\n+                    .split(\" \")\n+                    .map((n) => n[0])\n+                    .join(\"\")\n+                    .toUpperCase()\n+                    .slice(0, 2) || \"MB\"}\n+                </div>\n+                <div className=\"absolute -bottom-1 -right-1 w-6 h-6 bg-blue-600 rounded-full flex items-center justify-center\">\n+                  <svg className=\"w-3 h-3 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n+                  </svg>\n+                </div>\n+              </div>\n+            </div>\n+\n+            {/* Account Name */}\n+            <div className=\"mb-6\">\n+              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Account Name</label>\n+              <input\n+                type=\"text\"\n+                value={editProfileName}\n+                onChange={(e) => setEditProfileName(e.target.value)}\n+                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n+                placeholder=\"Enter account name\"\n+              />\n+            </div>\n+\n+            {/* Account Color */}\n+            <div className=\"mb-8\">\n+              <label className=\"block text-sm font-medium text-gray-700 mb-3\">Account Color</label>\n+              <div className=\"flex flex-wrap gap-3 justify-center\">\n+                {colorOptions.map((color) => (\n+                  <button\n+                    key={color.value}\n+                    onClick={() => setEditProfileColor(color.value)}\n+                    className={`w-10 h-10 rounded-full ${color.class} transition-all duration-200 hover:scale-110 ${\n+                      editProfileColor === color.value\n+                        ? \"ring-4 ring-blue-300 ring-offset-2\"\n+                        : \"hover:ring-2 hover:ring-gray-300 hover:ring-offset-1\"\n+                    }`}\n+                    title={color.name}\n+                  />\n+                ))}\n+              </div>\n+            </div>\n+\n+            {/* Action Buttons */}\n+            <div className=\"flex justify-end space-x-3\">\n+              <button\n+                onClick={closeEditModal}\n+                className=\"px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors duration-200\"\n+              >\n+                Cancel\n+              </button>\n+              <button\n+                onClick={saveProfileChanges}\n+                className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors duration-200\"\n+              >\n+                Save Changes\n+              </button>\n+            </div>\n+          </div>\n+        </div>\n+      )}\n+\n+      {/* User Settings Modal */}\n+      {isUserSettingsOpen && (\n+        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n+          <div className=\"bg-white rounded-lg p-6 w-96 max-w-md mx-4\">\n+            <div className=\"flex items-center justify-between mb-6\">\n+              <div className=\"flex items-center space-x-2\">\n+                <svg className=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                  <path\n+                    strokeLinecap=\"round\"\n+                    strokeLinejoin=\"round\"\n+                    strokeWidth={2}\n+                    d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\n+                  />\n+                </svg>\n+                <h3 className=\"text-lg font-semibold text-gray-900\">User Settings</h3>\n+              </div>\n+              <button onClick={() => setIsUserSettingsOpen(false)} className=\"text-gray-400 hover:text-gray-600\">\n+                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n+                </svg>\n+              </button>\n+            </div>\n+\n+            {/* Photo Section */}\n+            <div className=\"mb-6\">\n+              <label className=\"block text-sm font-medium text-gray-700 mb-3\">Photo</label>\n+              <div className=\"flex items-center space-x-4\">\n+                <div className=\"w-16 h-16 bg-gray-200 rounded-full flex items-center justify-center\">\n+                  <svg className=\"w-8 h-8 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                    <path\n+                      strokeLinecap=\"round\"\n+                      strokeLinejoin=\"round\"\n+                      strokeWidth={2}\n+                      d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\n+                    />\n+                  </svg>\n+                </div>\n+                <button className=\"flex items-center space-x-2 text-blue-600 hover:text-blue-700\">\n+                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n+                  </svg>\n+                  <span>Upload</span>\n+                </button>\n+              </div>\n+            </div>\n+\n+            {/* First Name */}\n+            <div className=\"mb-4\">\n+              <label className=\"block text-sm font-medium text-gray-700 mb-2\">First Name</label>\n+              <input\n+                type=\"text\"\n+                value={userFirstName}\n+                onChange={(e) => setUserFirstName(e.target.value)}\n+                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n+              />\n+            </div>\n+\n+            {/* Last Name */}\n+            <div className=\"mb-8\">\n+              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Last Name</label>\n+              <input\n+                type=\"text\"\n+                value={userLastName}\n+                onChange={(e) => setUserLastName(e.target.value)}\n+                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n+              />\n+            </div>\n+\n+            {/* Action Buttons */}\n+            <div className=\"flex justify-end space-x-3 mb-4\">\n+              <button\n+                onClick={() => setIsUserSettingsOpen(false)}\n+                className=\"px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50\"\n+              >\n+                Cancel\n+              </button>\n+              <button\n+                onClick={() => setIsUserSettingsOpen(false)}\n+                className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n+              >\n+                Save Changes\n+              </button>\n+            </div>\n+\n+            {/* Sign Out */}\n+            <div className=\"border-t pt-4\">\n+              <button className=\"w-full flex items-center justify-center space-x-2 text-red-600 hover:text-red-700\">\n+                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                  <path\n+                    strokeLinecap=\"round\"\n+                    strokeLinejoin=\"round\"\n+                    strokeWidth={2}\n+                    d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n+                  />\n+                </svg>\n+                <span>Sign Out</span>\n+              </button>\n+            </div>\n+          </div>\n+        </div>\n+      )}\n+\n+      <style jsx global>{`\n+        @keyframes pulse {\n+          0% {\n+            transform: scale(1);\n+            opacity: 0.7;\n+          }\n+          50% {\n+            transform: scale(1.5);\n+            opacity: 1;\n+          }\n+          100% {\n+            transform: scale(1);\n+            opacity: 0.7;\n+          }\n+        }\n+        @keyframes fadeIn {\n+          from {\n+            opacity: 0;\n+          }\n+          to {\n+            opacity: 1;\n+          }\n+        }\n+        .animate-fadeIn {\n+          animation: fadeIn 0.3s ease-in-out;\n+        }\n+      `}</style>\n+    </div>\n+  )\n+}\n"
                },
                {
                    "date": 1750108003316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1580,8 +1580,9 @@\n                 <h4 className=\"font-medium text-gray-900 mb-2\">Country-Based Blocking</h4>\n                 <p className=\"text-sm text-gray-500 mb-3\">Only allow traffic from selected countries (whitelist).</p>\n \n                 <div className=\"space-y-3\">\n+                  // 1. Update the country selection dropdown to show selected countries as dimmed and allow deselection\n                   <div className=\"relative\">\n                     <select\n                       className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white\"\n                       onChange={handleCountrySelect}\n@@ -2684,2691 +2685,4 @@\n       `}</style>\n     </div>\n   )\n }\n-\"use client\"\n-\n-import type React from \"react\"\n-import Image from \"next/image\"\n-import { useRouter } from \"next/navigation\"\n-import { useState, useEffect, useRef } from \"react\"\n-import userActivityData from \"../../data/user-activity.json\"\n-\n-// 4. Replace all checkboxes with toggle switches in the Fraud Protection section\n-// Create a new Toggle component function at the top of the file, after the other state variables:\n-\n-const Toggle = ({ checked = false, onChange }: { checked?: boolean; onChange?: () => void }) => {\n-  return (\n-    <div\n-      onClick={onChange}\n-      className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 cursor-pointer ${\n-        checked ? \"bg-blue-600\" : \"bg-gray-200\"\n-      }`}\n-    >\n-      <span\n-        className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n-          checked ? \"translate-x-6\" : \"translate-x-1\"\n-        }`}\n-      />\n-    </div>\n-  )\n-}\n-\n-export default function HomePage() {\n-  const router = useRouter()\n-  const [isProfileOpen, setIsProfileOpen] = useState(false)\n-  const [selectedProfile, setSelectedProfile] = useState(0)\n-  const [isCalendarOpen, setIsCalendarOpen] = useState(false)\n-  const [activeTab, setActiveTab] = useState(\"Dashboard\")\n-  const [hoveredSegment, setHoveredSegment] = useState<number | null>(null)\n-  const [selectedDate, setSelectedDate] = useState(new Date())\n-  const [startDate, setStartDate] = useState<Date | null>(null)\n-  const [endDate, setEndDate] = useState<Date | null>(null)\n-  const [chartRotation, setChartRotation] = useState(0)\n-  const [chartScale, setChartScale] = useState(1)\n-  const [isSidebarExpanded, setIsSidebarExpanded] = useState(false)\n-  const [hoveredProfile, setHoveredProfile] = useState<number | null>(null)\n-  const [activeMode, setActiveMode] = useState(\"All Users\")\n-  const [currentPage, setCurrentPage] = useState(1)\n-  const [itemsPerPage, setItemsPerPage] = useState(10)\n-  const [fraudMode, setFraudMode] = useState(\"Monitor Mode\")\n-  const [clickThresholdRules, setClickThresholdRules] = useState([\n-    { id: 1, clicks: 4, time: 7, unit: \"days\" },\n-    { id: 2, clicks: 6, time: 30, unit: \"days\" },\n-    { id: 3, clicks: 3, time: 10, unit: \"minutes\" },\n-  ])\n-  const [isEditModalOpen, setIsEditModalOpen] = useState(false)\n-  const [editingProfile, setEditingProfile] = useState<number | null>(null)\n-  const [editProfileName, setEditProfileName] = useState(\"\")\n-  const [editProfileColor, setEditProfileColor] = useState(\"\")\n-  const [isUserSettingsOpen, setIsUserSettingsOpen] = useState(false)\n-  const [userFirstName, setUserFirstName] = useState(\"John Tristan\")\n-  const [userLastName, setUserLastName] = useState(\"Ward\")\n-  const profileDropdownRef = useRef<HTMLDivElement>(null)\n-  const [showFraudSaveToast, setShowFraudSaveToast] = useState(false);\n-\n-  // Add these new state variables after the other useState declarations (around line 40)\n-  const [countries] = useState([\n-    { code: \"US\", name: \"United States\" },\n-    { code: \"CA\", name: \"Canada\" },\n-    { code: \"UK\", name: \"United Kingdom\" },\n-    { code: \"DE\", name: \"Germany\" },\n-    { code: \"FR\", name: \"France\" },\n-    { code: \"AU\", name: \"Australia\" },\n-    { code: \"JP\", name: \"Japan\" },\n-    { code: \"BR\", name: \"Brazil\" },\n-    { code: \"IN\", name: \"India\" },\n-    { code: \"IT\", name: \"Italy\" },\n-    { code: \"ES\", name: \"Spain\" },\n-    { code: \"MX\", name: \"Mexico\" },\n-    { code: \"KR\", name: \"South Korea\" },\n-    { code: \"NL\", name: \"Netherlands\" },\n-    { code: \"SE\", name: \"Sweden\" },\n-    { code: \"CH\", name: \"Switzerland\" },\n-    { code: \"SG\", name: \"Singapore\" },\n-    { code: \"ZA\", name: \"South Africa\" },\n-    { code: \"AE\", name: \"United Arab Emirates\" },\n-    { code: \"AR\", name: \"Argentina\" },\n-  ])\n-  const [selectedCountries, setSelectedCountries] = useState<{ code: string; name: string }[]>([\n-    { code: \"US\", name: \"United States\" },\n-    { code: \"CA\", name: \"Canada\" },\n-    { code: \"UK\", name: \"United Kingdom\" },\n-  ])\n-\n-  // Add animation effect for the chart\n-  useEffect(() => {\n-    const interval = setInterval(() => {\n-      setChartRotation((prev) => (prev + 1) % 360)\n-    }, 100)\n-    return () => clearInterval(interval)\n-  }, [])\n-\n-  useEffect(() => {\n-    const handleClickOutside = (event: MouseEvent) => {\n-      if (profileDropdownRef.current && !profileDropdownRef.current.contains(event.target as Node)) {\n-        setIsProfileOpen(false)\n-      }\n-    }\n-\n-    if (isProfileOpen) {\n-      document.addEventListener(\"mousedown\", handleClickOutside)\n-    }\n-\n-    return () => {\n-      document.removeEventListener(\"mousedown\", handleClickOutside)\n-    }\n-  }, [isProfileOpen])\n-\n-  const subProfiles = [\n-    {\n-      id: 0,\n-      name: \"JT\",\n-      color: \"bg-blue-500\",\n-      initials: \"JT\",\n-      details: {\n-        adAccount: \"Meta Ads Account #1\",\n-        campaign: \"Summer Campaign 2024\",\n-        adset: \"Targeting 18-35\",\n-        pixel: \"Pixel ID: 123456789\",\n-        activatedTime: \"Jan 15, 2024 10:30 AM\",\n-        protectStatus: \"Active\",\n-      },\n-    },\n-    {\n-      id: 1,\n-      name: \"MA\",\n-      color: \"bg-orange-500\",\n-      initials: \"MA\",\n-      details: {\n-        adAccount: \"Meta Ads Account #2\",\n-        campaign: \"Winter Campaign 2024\",\n-        adset: \"Targeting 25-45\",\n-        pixel: \"Pixel ID: 987654321\",\n-        activatedTime: \"Dec 20, 2023 2:15 PM\",\n-        protectStatus: \"Paused\",\n-      },\n-    },\n-  ]\n-\n-  const colorOptions = [\n-    { name: \"Blue\", value: \"bg-blue-500\", class: \"bg-blue-500\" },\n-    { name: \"Purple\", value: \"bg-purple-500\", class: \"bg-purple-500\" },\n-    { name: \"Teal\", value: \"bg-teal-500\", class: \"bg-teal-500\" },\n-    { name: \"Green\", value: \"bg-green-500\", class: \"bg-green-500\" },\n-    { name: \"Light Blue\", value: \"bg-sky-500\", class: \"bg-sky-500\" },\n-    { name: \"Red\", value: \"bg-red-500\", class: \"bg-red-500\" },\n-    { name: \"Orange\", value: \"bg-orange-500\", class: \"bg-orange-500\" },\n-    { name: \"Cyan\", value: \"bg-cyan-500\", class: \"bg-cyan-500\" },\n-  ]\n-\n-  const tabs = [\"Dashboard\", \"User Activity\", \"Fraud Protection\", \"Integrations\", \"Refund Report\"]\n-  const modes = [\"All Users\", \"Safe Mode\", \"Monitor Mode\", \"Aggressive Mode\"]\n-\n-  const statsCards = [\n-    {\n-      title: \"Total Clicks\",\n-      value: \"105\",\n-      icon: (\n-        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n-          <path\n-            strokeLinecap=\"round\"\n-            strokeLinejoin=\"round\"\n-            strokeWidth={2}\n-            d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\n-          />\n-        </svg>\n-      ),\n-      color: \"text-blue-500\",\n-    },\n-    {\n-      title: \"Fraud Clicks\",\n-      value: \"80\",\n-      icon: (\n-        <svg className=\"w-6 h-6 text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-          <circle cx=\"12\" cy=\"12\" r=\"10\" strokeWidth=\"2\" className=\"text-orange-400\" stroke=\"currentColor\" fill=\"#fff3\" />\n-          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 8v4m0 4h.01\" />\n-          <circle cx=\"12\" cy=\"16.5\" r=\"1\" fill=\"currentColor\" />\n-        </svg>\n-      ),\n-      color: \"text-red-500\",\n-    },\n-    {\n-      title: \"Total Unique Visitors\",\n-      value: \"60\",\n-      icon: (\n-        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-          {/* Profil başı */}\n-          <circle cx=\"12\" cy=\"8\" r=\"4\" strokeWidth=\"2\" />\n-          {/* Gövde */}\n-          <path strokeWidth=\"2\" d=\"M4 20c0-2.5 3.5-4 8-4s8 1.5 8 4\" />\n-          {/* ID etiketi */}\n-          <rect x=\"8\" y=\"16\" width=\"8\" height=\"4\" rx=\"1\" strokeWidth=\"2\" />\n-          <text x=\"12\" y=\"19\" textAnchor=\"middle\" fontSize=\"2.5\" fill=\"currentColor\">ID</text>\n-        </svg>\n-      ),\n-      color: \"text-yellow-500\",\n-    },\n-    {\n-      title: \"Total Block Ip\",\n-      value: \"50\",\n-      icon: (\n-        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-          <path\n-            strokeLinecap=\"round\"\n-            strokeLinejoin=\"round\"\n-            strokeWidth={2}\n-            d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\"\n-          />\n-        </svg>\n-      ),\n-      color: \"text-red-500\",\n-    },\n-    {\n-      title: \"VPN & Location Fraud\",\n-      value: \"105\",\n-      icon: (\n-        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-          <path\n-            strokeLinecap=\"round\"\n-            strokeLinejoin=\"round\"\n-            strokeWidth={2}\n-            d=\"M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9v-9m0-9v9m0 9c-5 0-9-4-9-9s4-9 9-9\"\n-          />\n-        </svg>\n-      ),\n-      color: \"text-purple-500\",\n-    },\n-  ]\n-\n-  const bottomStats = [\n-    {\n-      title: \"Browser Fraud\",\n-      value: \"25\",\n-      icon: (\n-        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-          <path\n-            strokeLinecap=\"round\"\n-            strokeLinejoin=\"round\"\n-            strokeWidth={2}\n-            d=\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\n-          />\n-        </svg>\n-      ),\n-      color: \"text-yellow-500\",\n-    },\n-    {\n-      title: \"Suspicious Behavior\",\n-      value: \"30\",\n-      icon: (\n-        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-          <path\n-            strokeLinecap=\"round\"\n-            strokeLinejoin=\"round\"\n-            strokeWidth={2}\n-            d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\n-          />\n-        </svg>\n-      ),\n-      color: \"text-blue-500\",\n-    },\n-    {\n-      title: \"Block Devices\",\n-      value: \"30\",\n-      icon: (\n-        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-          <path\n-            strokeLinecap=\"round\"\n-            strokeLinejoin=\"round\"\n-            strokeWidth={2}\n-            d=\"M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z\"\n-          />\n-        </svg>\n-      ),\n-      color: \"text-blue-500\",\n-    },\n-    {\n-      title: \"Fraud by Desktop\",\n-      value: \"30%\",\n-      progress: 30,\n-      icon: (\n-        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-          <path\n-            strokeLinecap=\"round\"\n-            strokeLinejoin=\"round\"\n-            strokeWidth={2}\n-            d=\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\n-          />\n-        </svg>\n-      ),\n-      color: \"text-orange-500\",\n-    },\n-    {\n-      title: \"Fraud by Mobile\",\n-      value: \"5%\",\n-      progress: 5,\n-      icon: (\n-        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-          <path\n-            strokeLinecap=\"round\"\n-            strokeLinejoin=\"round\"\n-            strokeWidth={2}\n-            d=\"M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z\"\n-          />\n-        </svg>\n-      ),\n-      color: \"text-blue-500\",\n-    },\n-  ]\n-\n-  // Chart data from Estimated Savings Report\n-  const chartData = [\n-    { name: \"Vpn\", value: 30, color: \"#3b82f6\", percentage: 37.5 },\n-    { name: \"Suspicious Behavior\", value: 15, color: \"#10b981\", percentage: 18.75 },\n-    { name: \"Browser Fraud\", value: 35, color: \"#f97316\", percentage: 43.75 },\n-  ]\n-\n-  const totalSavings = chartData.reduce((sum, item) => sum + item.value, 0)\n-\n-  // Calculate stroke-dasharray for each segment\n-  const circumference = 2 * Math.PI * 40\n-  let cumulativePercentage = 0\n-\n-  // Calendar helper functions\n-  const getDaysInMonth = (date: Date) => {\n-    return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate()\n-  }\n-\n-  const getFirstDayOfMonth = (date: Date) => {\n-    return new Date(date.getFullYear(), date.getMonth(), 1).getDay()\n-  }\n-\n-  const handleDateClick = (day: number) => {\n-    const clickedDate = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), day)\n-\n-    if (!startDate || (startDate && endDate)) {\n-      setStartDate(clickedDate)\n-      setEndDate(null)\n-    } else if (startDate && !endDate) {\n-      if (clickedDate >= startDate) {\n-        setEndDate(clickedDate)\n-      } else {\n-        setStartDate(clickedDate)\n-        setEndDate(null)\n-      }\n-    }\n-  }\n-\n-  const isDateInRange = (day: number) => {\n-    if (!startDate) return false\n-    const date = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), day)\n-    if (!endDate) return date.getTime() === startDate.getTime()\n-    return date >= startDate && date <= endDate\n-  }\n-\n-  const isDateStart = (day: number) => {\n-    if (!startDate) return false\n-    const date = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), day)\n-    return date.getTime() === startDate.getTime()\n-  }\n-\n-  const isDateEnd = (day: number) => {\n-    if (!endDate) return false\n-    const date = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), day)\n-    return date.getTime() === endDate.getTime()\n-  }\n-\n-  const userData = userActivityData.users\n-  const totalEntries = userActivityData.totalEntries\n-  const startEntry = (currentPage - 1) * itemsPerPage + 1\n-  const endEntry = Math.min(currentPage * itemsPerPage, totalEntries)\n-  const totalPages = Math.ceil(totalEntries / itemsPerPage)\n-\n-  const addClickThresholdRule = () => {\n-    const newRule = {\n-      id: Date.now(),\n-      clicks: 1,\n-      time: 1,\n-      unit: \"days\",\n-    }\n-    setClickThresholdRules([...clickThresholdRules, newRule])\n-  }\n-\n-  const removeClickThresholdRule = (id: number) => {\n-    setClickThresholdRules(clickThresholdRules.filter((rule) => rule.id !== id))\n-  }\n-\n-  const updateClickThresholdRule = (id: number, field: string, value: any) => {\n-    setClickThresholdRules(clickThresholdRules.map((rule) => (rule.id === id ? { ...rule, [field]: value } : rule)))\n-  }\n-\n-  const refundData = {\n-    weeks: [\n-      {\n-        id: 1,\n-        week: \"Week 10\",\n-        startDate: \"14 Jan 2024\",\n-        startTime: \"10:00 Eastern\",\n-        endDate: \"14 Jan 2024\",\n-        endTime: \"10:00 Eastern\",\n-        refundAmount: \"$150\",\n-        link: \"https://example.com/refund/week10\",\n-      },\n-      {\n-        id: 2,\n-        week: \"Week 9\",\n-        startDate: \"14 Jan 2024\",\n-        startTime: \"10:00 Eastern\",\n-        endDate: \"14 Jan 2024\",\n-        endTime: \"10:00 Eastern\",\n-        refundAmount: \"$150\",\n-        link: \"https://example.com/refund/week9\",\n-      },\n-      {\n-        id: 3,\n-        week: \"Week 8\",\n-        startDate: \"14 Jan 2024\",\n-        startTime: \"10:00 Eastern\",\n-        endDate: \"14 Jan 2024\",\n-        endTime: \"10:00 Eastern\",\n-        refundAmount: \"$150\",\n-        link: \"https://example.com/refund/week8\",\n-      },\n-      {\n-        id: 4,\n-        week: \"Week 7\",\n-        startDate: \"14 Jan 2024\",\n-        startTime: \"10:00 Eastern\",\n-        endDate: \"14 Jan 2024\",\n-        endTime: \"10:00 Eastern\",\n-        refundAmount: \"$150\",\n-        link: \"https://example.com/refund/week7\",\n-      },\n-      {\n-        id: 5,\n-        week: \"Week 6\",\n-        startDate: \"14 Jan 2024\",\n-        startTime: \"10:00 Eastern\",\n-        endDate: \"14 Jan 2024\",\n-        endTime: \"10:00 Eastern\",\n-        refundAmount: \"$150\",\n-        link: \"https://example.com/refund/week6\",\n-      },\n-      {\n-        id: 6,\n-        week: \"Week 5\",\n-        startDate: \"14 Jan 2024\",\n-        startTime: \"10:00 Eastern\",\n-        endDate: \"14 Jan 2024\",\n-        endTime: \"10:00 Eastern\",\n-        refundAmount: \"$150\",\n-        link: \"https://example.com/refund/week5\",\n-      },\n-      {\n-        id: 7,\n-        week: \"Week 4\",\n-        startDate: \"14 Jan 2024\",\n-        startTime: \"10:00 Eastern\",\n-        endDate: \"14 Jan 2024\",\n-        endTime: \"10:00 Eastern\",\n-        refundAmount: \"$150\",\n-        link: \"https://example.com/refund/week4\",\n-      },\n-      {\n-        id: 8,\n-        week: \"Week 3\",\n-        startDate: \"14 Jan 2024\",\n-        startTime: \"10:00 Eastern\",\n-        endDate: \"14 Jan 2024\",\n-        endTime: \"10:00 Eastern\",\n-        refundAmount: \"$150\",\n-        link: \"https://example.com/refund/week3\",\n-      },\n-      {\n-        id: 9,\n-        week: \"Week 2\",\n-        startDate: \"14 Jan 2024\",\n-        startTime: \"10:00 Eastern\",\n-        endDate: \"14 Jan 2024\",\n-        endTime: \"10:00 Eastern\",\n-        refundAmount: \"$150\",\n-        link: \"https://example.com/refund/week2\",\n-      },\n-      {\n-        id: 10,\n-        week: \"Week 1\",\n-        startDate: \"14 Jan 2024\",\n-        startTime: \"10:00 Eastern\",\n-        endDate: \"14 Jan 2024\",\n-        endTime: \"10:00 Eastern\",\n-        refundAmount: \"$150\",\n-        link: \"https://example.com/refund/week1\",\n-      },\n-    ],\n-  }\n-\n-  const openEditModal = (profileIndex: number) => {\n-    setEditingProfile(profileIndex)\n-    setEditProfileName(subProfiles[profileIndex].name)\n-    setEditProfileColor(subProfiles[profileIndex].color)\n-    setIsEditModalOpen(true)\n-  }\n-\n-  const closeEditModal = () => {\n-    setIsEditModalOpen(false)\n-    setEditingProfile(null)\n-    setEditProfileName(\"\")\n-    setEditProfileColor(\"\")\n-  }\n-\n-  const saveProfileChanges = () => {\n-    if (editingProfile !== null) {\n-      // Update the profile (in a real app, this would update the backend)\n-      const updatedProfiles = [...subProfiles]\n-      updatedProfiles[editingProfile] = {\n-        ...updatedProfiles[editingProfile],\n-        name: editProfileName,\n-        color: editProfileColor,\n-        initials: editProfileName\n-          .split(\" \")\n-          .map((n) => n[0])\n-          .join(\"\")\n-          .toUpperCase()\n-          .slice(0, 2),\n-      }\n-      // In a real app, you would update the state here\n-      console.log(\"Profile updated:\", updatedProfiles[editingProfile])\n-    }\n-    closeEditModal()\n-  }\n-\n-  const deleteProfile = (profileIndex: number) => {\n-    if (confirm(\"Are you sure you want to delete this profile?\")) {\n-      // In a real app, this would delete from backend\n-      console.log(\"Profile deleted:\", subProfiles[profileIndex])\n-      if (selectedProfile === profileIndex) {\n-        setSelectedProfile(0)\n-      }\n-    }\n-  }\n-\n-  // Add these handler functions before the renderFraudProtection function\n-  // 2. Update the handleCountrySelect function to handle toggling selection\n-  const handleCountrySelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\n-    const selectedCode = e.target.value\n-    if (!selectedCode) return\n-\n-    const countryToAdd = countries.find((country) => country.code === selectedCode)\n-    if (countryToAdd && !selectedCountries.some((country) => country.code === selectedCode)) {\n-      setSelectedCountries([...selectedCountries, countryToAdd])\n-    }\n-\n-    // Reset the select element\n-    e.target.value = \"\"\n-  }\n-\n-  const handleRemoveCountry = (codeToRemove: string) => {\n-    setSelectedCountries(selectedCountries.filter((country) => country.code !== codeToRemove))\n-  }\n-\n-  const handleSelectAllCountries = () => {\n-    setSelectedCountries([...countries])\n-  }\n-\n-  const handleDeselectAllCountries = () => {\n-    setSelectedCountries([])\n-  }\n-\n-  const handleSignOut = () => {\n-    // Here you would typically handle sign out logic\n-    // For now, we'll just navigate to the login page\n-    router.push('/login')\n-  }\n-\n-  const renderDashboard = () => (\n-    <div className=\"p-6 space-y-6\">\n-      {/* Filters */}\n-      <div className=\"bg-white rounded-lg p-6 shadow-sm hover:shadow-lg hover:scale-[1.02] transition-all duration-300\">\n-        <div className=\"grid grid-cols-1 md:grid-cols-6 gap-4 items-end\">\n-          <div className=\"md:col-span-1\">\n-            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Ad Account</label>\n-            <div className=\"relative\">\n-              <select className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent appearance-none bg-white\">\n-                <option>Select</option>\n-                <option>Account 1</option>\n-                <option>Account 2</option>\n-              </select>\n-              <svg\n-                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none\"\n-                fill=\"none\"\n-                stroke=\"currentColor\"\n-                viewBox=\"0 0 24 24\"\n-              >\n-                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n-              </svg>\n-            </div>\n-          </div>\n-\n-          <div className=\"md:col-span-1\">\n-            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Campaign</label>\n-            <div className=\"relative\">\n-              <select className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent appearance-none bg-white\">\n-                <option>Select</option>\n-                <option>Campaign 1</option>\n-                <option>Campaign 2</option>\n-              </select>\n-              <svg\n-                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none\"\n-                fill=\"none\"\n-                stroke=\"currentColor\"\n-                viewBox=\"0 0 24 24\"\n-              >\n-                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n-              </svg>\n-            </div>\n-          </div>\n-\n-          <div className=\"md:col-span-1\">\n-            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Adset</label>\n-            <div className=\"relative\">\n-              <select className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent appearance-none bg-white\">\n-                <option>Select</option>\n-                <option>Adset 1</option>\n-                <option>Adset 2</option>\n-              </select>\n-              <svg\n-                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none\"\n-                fill=\"none\"\n-                stroke=\"currentColor\"\n-                viewBox=\"0 0 24 24\"\n-              >\n-                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n-              </svg>\n-            </div>\n-          </div>\n-\n-          <div className=\"md:col-span-1\">\n-            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Pixel</label>\n-            <div className=\"relative\">\n-              <select className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent appearance-none bg-white\">\n-                <option>Select</option>\n-                <option>Pixel 1</option>\n-                <option>Pixel 2</option>\n-              </select>\n-              <svg\n-                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none\"\n-                fill=\"none\"\n-                stroke=\"currentColor\"\n-                viewBox=\"0 0 24 24\"\n-              >\n-                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n-              </svg>\n-            </div>\n-          </div>\n-\n-          <div className=\"md:col-span-1\">\n-            <button className=\"w-full bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-lg font-medium transition-colors duration-200\">\n-              Protect\n-            </button>\n-          </div>\n-\n-          <div className=\"md:col-span-1\">\n-            <button\n-              onClick={() => setIsCalendarOpen(true)}\n-              className=\"w-full flex items-center justify-center space-x-2 px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors duration-200\"\n-            >\n-              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                <path\n-                  strokeLinecap=\"round\"\n-                  strokeLinejoin=\"round\"\n-                  strokeWidth={2}\n-                  d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n-                />\n-              </svg>\n-              <span className=\"truncate\">\n-                {startDate && endDate\n-                  ? `${startDate.toLocaleDateString()} — ${endDate.toLocaleDateString()}`\n-                  : \"Feb 10, 2023 — Feb 12, 2023\"}\n-              </span>\n-              <svg className=\"w-4 h-4 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n-              </svg>\n-            </button>\n-          </div>\n-        </div>\n-      </div>\n-\n-      {/* Stats Cards */}\n-      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-6\">\n-        {statsCards.map((stat, index) => (\n-          <div\n-            key={index}\n-            className=\"bg-white rounded-lg shadow-sm p-6 h-36 flex flex-col justify-between hover:scale-105 transition-transform duration-200 group\"\n-          >\n-            <div className=\"flex items-center justify-between\">\n-              <div className=\"flex-1\">\n-                <p className=\"text-sm font-medium text-gray-600 mb-2\">{stat.title}</p>\n-                <p className=\"text-3xl font-bold text-gray-900\">{stat.value}</p>\n-              </div>\n-              <div className={`${stat.color} ml-4 transition-transform duration-300 group-hover:scale-110`}>\n-                {stat.title === \"Total Clicks\" && (\n-                  <svg\n-                    className=\"w-6 h-6 group-hover:animate-pulse\"\n-                    fill=\"none\"\n-                    stroke=\"currentColor\"\n-                    viewBox=\"0 0 24 24\"\n-                  >\n-                    <path\n-                      strokeLinecap=\"round\"\n-                      strokeLinejoin=\"round\"\n-                      strokeWidth={2}\n-                      d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n-                    />\n-                    <path\n-                      strokeLinecap=\"round\"\n-                      strokeLinejoin=\"round\"\n-                      strokeWidth={2}\n-                      d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\n-                    />\n-                  </svg>\n-                )}\n-                {stat.title === \"Fraud Clicks\" && (\n-                  <svg\n-                    className=\"w-6 h-6 group-hover:animate-pulse\"\n-                    fill=\"none\"\n-                    stroke=\"currentColor\"\n-                    viewBox=\"0 0 24 24\">\n-                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.29 3.86l-7.09 12.26A2 2 0 005.18 19h13.64a2 2 0 001.98-2.88l-7.09-12.26a2 2 0 00-3.42 0z\" />\n-                    <line x1=\"12\" y1=\"9\" x2=\"12\" y2=\"13\" stroke=\"currentColor\" strokeWidth={2} />\n-                    <circle cx=\"12\" cy=\"17\" r=\"1\" stroke=\"currentColor\" strokeWidth={2} />\n-                  </svg>\n-                )}\n-                {stat.title === \"Total Unique Visitors\" && (\n-                  <svg\n-                    className=\"w-6 h-6 group-hover:animate-pulse\"\n-                    fill=\"none\"\n-                    stroke=\"currentColor\"\n-                    viewBox=\"0 0 24 24\">\n-                    {/* Profil başı */}\n-                    <circle cx=\"12\" cy=\"8\" r=\"4\" strokeWidth=\"2\" />\n-                    {/* Gövde */}\n-                    <path strokeWidth=\"2\" d=\"M4 20c0-2.5 3.5-4 8-4s8 1.5 8 4\" />\n-                    {/* ID etiketi */}\n-                    <rect x=\"8\" y=\"16\" width=\"8\" height=\"4\" rx=\"1\" strokeWidth=\"2\" />\n-                    <text x=\"12\" y=\"19\" textAnchor=\"middle\" fontSize=\"2.5\" fill=\"currentColor\">ID</text>\n-                  </svg>\n-                )}\n-                {stat.title === \"Total Block Ip\" && (\n-                  <svg\n-                    className=\"w-6 h-6 group-hover:animate-spin\"\n-                    fill=\"none\"\n-                    stroke=\"currentColor\"\n-                    viewBox=\"0 0 24 24\"\n-                  >\n-                    <path\n-                      strokeLinecap=\"round\"\n-                      strokeLinejoin=\"round\"\n-                      strokeWidth={2}\n-                      d=\"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728L5.636 5.636m12.728 12.728L5.636 5.636\"\n-                    />\n-                  </svg>\n-                )}\n-                {stat.title === \"VPN & Location Fraud\" && (\n-                  <svg\n-                    className=\"w-6 h-6 group-hover:animate-pulse\"\n-                    fill=\"none\"\n-                    stroke=\"currentColor\"\n-                    viewBox=\"0 0 24 24\"\n-                  >\n-                    <path\n-                      strokeLinecap=\"round\"\n-                      strokeLinejoin=\"round\"\n-                      strokeWidth={2}\n-                      d=\"M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9v-9m0-9v9m0 9c-5 0-9-4-9-9s4-9 9-9\"\n-                    />\n-                  </svg>\n-                )}\n-              </div>\n-            </div>\n-          </div>\n-        ))}\n-      </div>\n-\n-      {/* Middle Stats */}\n-      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-6 gap-6\">\n-        {bottomStats.map((stat, index) => (\n-          <div\n-            key={index}\n-            className=\"bg-white rounded-lg shadow-sm p-6 h-36 flex flex-col justify-between hover:scale-105 transition-transform duration-200\"\n-          >\n-            <div className=\"flex items-center justify-between mb-2\">\n-              <div className=\"flex-1\">\n-                <p className=\"text-sm font-medium text-gray-600 mb-2\">{stat.title}</p>\n-                <p className=\"text-2xl font-bold text-gray-900\">{stat.value}</p>\n-              </div>\n-              <div className={`${stat.color} ml-4`}>{stat.icon}</div>\n-            </div>\n-            {stat.progress && (\n-              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n-                <div\n-                  className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n-                  style={{ width: `${stat.progress}%` }}\n-                ></div>\n-              </div>\n-            )}\n-          </div>\n-        ))}\n-\n-        {/* Threat Level */}\n-        <div className=\"bg-white rounded-lg shadow-sm p-6 h-36 hover:scale-105 transition-transform duration-200\">\n-          <div className=\"flex items-center justify-between mb-4\">\n-            <p className=\"text-sm font-medium text-gray-600\">Threat Level</p>\n-            <svg className=\"w-6 h-6 text-purple-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-              <path\n-                strokeLinecap=\"round\"\n-                strokeLinejoin=\"round\"\n-                strokeWidth={2}\n-                d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\"\n-              />\n-            </svg>\n-          </div>\n-          <div className=\"flex flex-col justify-between h-16\">\n-            <div className=\"flex items-center justify-between\">\n-              <span className=\"text-sm text-gray-600\">Low</span>\n-              <div className=\"w-20 bg-gray-200 rounded-full h-2\">\n-                <div className=\"bg-green-500 h-2 rounded-full w-3/4\"></div>\n-              </div>\n-            </div>\n-            <div className=\"flex items-center justify-between\">\n-              <span className=\"text-sm text-gray-600\">Mid</span>\n-              <div className=\"w-20 bg-gray-200 rounded-full h-2\">\n-                <div className=\"bg-orange-500 h-2 rounded-full w-1/2\"></div>\n-              </div>\n-            </div>\n-            <div className=\"flex items-center justify-between\">\n-              <span className=\"text-sm text-gray-600\">High</span>\n-              <div className=\"w-20 bg-gray-200 rounded-full h-2\">\n-                <div className=\"bg-red-500 h-2 rounded-full w-1/4\"></div>\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n-      </div>\n-\n-      {/* Bottom Row - Chart and Savings Report */}\n-      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n-        {/* Interactive Donut Chart */}\n-        <div className=\"bg-white rounded-lg shadow-sm p-6 overflow-hidden hover:scale-105 transition-transform duration-200\">\n-          <div className=\"relative w-64 h-64 mx-auto\">\n-            {/* Background glow effects */}\n-            <div\n-              className=\"absolute inset-0 bg-blue-500/10 rounded-full blur-xl\"\n-              style={{\n-                transform: `scale(${1 + Math.sin(chartRotation * 0.05) * 0.05})`,\n-                transition: \"transform 0.5s ease-in-out\",\n-              }}\n-            ></div>\n-            <div\n-              className=\"absolute inset-0 bg-green-500/10 rounded-full blur-xl\"\n-              style={{\n-                transform: `scale(${1 + Math.sin(chartRotation * 0.03 + 2) * 0.05})`,\n-                transition: \"transform 0.5s ease-in-out\",\n-              }}\n-            ></div>\n-            <div\n-              className=\"absolute inset-0 bg-orange-500/10 rounded-full blur-xl\"\n-              style={{\n-                transform: `scale(${1 + Math.sin(chartRotation * 0.04 + 4) * 0.05})`,\n-                transition: \"transform 0.5s ease-in-out\",\n-              }}\n-            ></div>\n-\n-            {/* Main chart */}\n-            <svg\n-              className=\"w-full h-full transform\"\n-              style={{\n-                transform: `rotate(${-90 + (hoveredSegment !== null ? chartRotation * 0.1 : 0)}deg) scale(${\n-                  hoveredSegment !== null ? 1.05 : 1\n-                })`,\n-                transition: \"transform 0.3s ease-in-out\",\n-              }}\n-              viewBox=\"0 0 100 100\"\n-              onMouseEnter={() => setChartScale(1.05)}\n-              onMouseLeave={() => setChartScale(1)}\n-            >\n-              <defs>\n-                <filter id=\"glow\" x=\"-20%\" y=\"-20%\" width=\"140%\" height=\"140%\">\n-                  <feGaussianBlur stdDeviation=\"2\" result=\"blur\" />\n-                  <feComposite in=\"SourceGraphic\" in2=\"blur\" operator=\"over\" />\n-                </filter>\n-              </defs>\n-\n-              <circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"#f3f4f6\" strokeWidth=\"8\" fill=\"none\" />\n-              {chartData.map((segment, index) => {\n-                const strokeDasharray = `${(segment.value / totalSavings) * circumference} ${circumference}`\n-                const strokeDashoffset = (-cumulativePercentage * circumference) / 100\n-                cumulativePercentage += (segment.value / totalSavings) * 100\n-\n-                return (\n-                  <circle\n-                    key={index}\n-                    cx=\"50\"\n-                    cy=\"50\"\n-                    r=\"40\"\n-                    stroke={segment.color}\n-                    strokeWidth={hoveredSegment === index ? \"12\" : \"8\"}\n-                    fill=\"none\"\n-                    strokeDasharray={strokeDasharray}\n-                    strokeDashoffset={strokeDashoffset}\n-                    strokeLinecap=\"round\"\n-                    filter={hoveredSegment === index ? \"url(#glow)\" : \"\"}\n-                    className=\"transition-all duration-300 cursor-pointer\"\n-                    onMouseEnter={() => setHoveredSegment(index)}\n-                    onMouseLeave={() => setHoveredSegment(null)}\n-                    style={{\n-                      transition: \"all 0.3s ease-in-out\",\n-                      transform: hoveredSegment === index ? \"scale(1.02)\" : \"scale(1)\",\n-                      transformOrigin: \"center\",\n-                    }}\n-                  />\n-                )\n-              })}\n-\n-              {/* Animated particles */}\n-              {chartData.map((segment, index) => {\n-                const angle = (cumulativePercentage - segment.percentage / 2) * 3.6 * (Math.PI / 180)\n-                const x = 50 + 40 * Math.cos(angle)\n-                const y = 50 + 40 * Math.sin(angle)\n-\n-                return (\n-                  <circle\n-                    key={`particle-${index}`}\n-                    cx={x}\n-                    cy={y}\n-                    r={hoveredSegment === index ? 2 : 1}\n-                    fill={segment.color}\n-                    className=\"transition-all duration-300\"\n-                    style={{\n-                      opacity: hoveredSegment === index ? 1 : 0.7,\n-                      filter: hoveredSegment === index ? \"url(#glow)\" : \"\",\n-                      animation: \"pulse 2s infinite\",\n-                    }}\n-                  />\n-                )\n-              })}\n-            </svg>\n-\n-            {/* Center content */}\n-            <div\n-              className=\"absolute inset-0 flex flex-col items-center justify-center bg-white/80 rounded-full\"\n-              style={{\n-                width: \"65%\",\n-                height: \"65%\",\n-                left: \"17.5%\",\n-                top: \"17.5%\",\n-                backdropFilter: \"blur(5px)\",\n-                boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.05), 0 1px 3px rgba(0, 0, 0, 0.1)\",\n-                transform: `scale(${hoveredSegment !== null ? 1.1 : 1})`,\n-                transition: \"transform 0.3s ease-in-out\",\n-              }}\n-            >\n-              <p className=\"text-lg font-semibold text-gray-900\">Ad Spend Saved</p>\n-              <p\n-                className=\"text-3xl font-bold text-blue-600\"\n-                style={{\n-                  textShadow: hoveredSegment !== null ? \"0 0 10px rgba(59, 130, 246, 0.3)\" : \"none\",\n-                }}\n-              >\n-                ${totalSavings}\n-              </p>\n-              {hoveredSegment !== null && (\n-                <p\n-                  className=\"text-sm text-gray-600 mt-1 animate-fadeIn px-2 text-center max-w-full overflow-hidden\"\n-                  style={{\n-                    color: chartData[hoveredSegment].color,\n-                    fontWeight: \"500\",\n-                  }}\n-                >\n-                  {chartData[hoveredSegment].name}: ${chartData[hoveredSegment].value}\n-                </p>\n-              )}\n-            </div>\n-          </div>\n-\n-          {/* Legend */}\n-          <div className=\"flex justify-center mt-4 space-x-6\">\n-            {chartData.map((item, index) => (\n-              <div\n-                key={index}\n-                className=\"flex items-center space-x-2 cursor-pointer transition-all duration-200\"\n-                onMouseEnter={() => setHoveredSegment(index)}\n-                onMouseLeave={() => setHoveredSegment(null)}\n-                style={{\n-                  transform: hoveredSegment === index ? \"scale(1.1)\" : \"scale(1)\",\n-                }}\n-              >\n-                <div\n-                  className=\"w-3 h-3 rounded-full\"\n-                  style={{\n-                    backgroundColor: item.color,\n-                    boxShadow: hoveredSegment === index ? `0 0 8px ${item.color}` : \"none\",\n-                  }}\n-                ></div>\n-                <span\n-                  className=\"text-xs font-medium\"\n-                  style={{\n-                    color: hoveredSegment === index ? item.color : \"#6B7280\",\n-                  }}\n-                >\n-                  {item.name}\n-                </span>\n-              </div>\n-            ))}\n-          </div>\n-        </div>\n-\n-        {/* Estimated Savings Report */}\n-        <div className=\"bg-white rounded-lg shadow-sm hover:scale-105 transition-transform duration-200\">\n-          <div className=\"p-6 border-b border-gray-200\">\n-            <h3 className=\"text-lg font-semibold text-gray-900\">Estimated Savings Report</h3>\n-          </div>\n-          <div className=\"p-6 space-y-6\">\n-            {chartData.map((item, index) => (\n-              <div\n-                key={index}\n-                className={`flex items-center justify-between p-3 rounded-lg transition-all duration-300 cursor-pointer ${\n-                  hoveredSegment === index ? \"bg-gray-50 scale-105 shadow-md\" : \"hover:bg-gray-50 hover:shadow-sm\"\n-                }`}\n-                onMouseEnter={() => setHoveredSegment(index)}\n-                onMouseLeave={() => setHoveredSegment(null)}\n-              >\n-                <div className=\"flex items-center space-x-3\">\n-                  <div\n-                    className=\"w-4 h-4 rounded-full transition-all duration-300\"\n-                    style={{\n-                      backgroundColor: item.color,\n-                      transform: hoveredSegment === index ? \"scale(1.3)\" : \"scale(1)\",\n-                      boxShadow: hoveredSegment === index ? `0 0 10px ${item.color}` : \"none\",\n-                    }}\n-                  ></div>\n-                  <span\n-                    className={`text-sm font-medium transition-all duration-300 ${\n-                      hoveredSegment === index ? \"text-gray-900\" : \"text-gray-600\"\n-                    }`}\n-                  >\n-                    {item.name}\n-                  </span>\n-                </div>\n-                <div className=\"flex items-center\">\n-                  <span\n-                    className={`font-bold text-lg transition-all duration-300 ${\n-                      hoveredSegment === index ? \"text-blue-600 scale-110\" : \"text-gray-900\"\n-                    }`}\n-                  >\n-                    ${item.value}\n-                  </span>\n-                  <div\n-                    className={`ml-2 w-16 bg-gray-200 rounded-full h-1 transition-all duration-300 ${\n-                      hoveredSegment === index ? \"opacity-100\" : \"opacity-0\"\n-                    }`}\n-                  >\n-                    <div\n-                      className=\"h-1 rounded-full\"\n-                      style={{\n-                        width: `${item.percentage}%`,\n-                        backgroundColor: item.color,\n-                      }}\n-                    ></div>\n-                  </div>\n-                </div>\n-              </div>\n-            ))}\n-\n-            <div className=\"mt-8 pt-4 border-t border-gray-100\">\n-              <div className=\"flex items-center justify-between\">\n-                <span className=\"text-sm font-medium text-gray-600\">Total Savings</span>\n-                <span className=\"font-bold text-xl text-blue-600\">${totalSavings}</span>\n-              </div>\n-              <div className=\"mt-2 w-full bg-gray-200 rounded-full h-1.5\">\n-                <div className=\"bg-blue-600 h-1.5 rounded-full w-full\"></div>\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n-      </div>\n-    </div>\n-  )\n-\n-  const renderUserActivity = () => (\n-    <div className=\"p-6\">\n-      {/* Header Controls */}\n-      <div className=\"bg-white rounded-lg p-6 shadow-sm mb-6\">\n-        <div className=\"flex flex-wrap items-center justify-between gap-4\">\n-          {/* Mode Filters */}\n-          <div className=\"flex items-center space-x-2\">\n-            {modes.map((mode) => (\n-              <button\n-                key={mode}\n-                onClick={() => setActiveMode(mode)}\n-                className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors duration-200 ${\n-                  activeMode === mode\n-                    ? \"bg-blue-100 text-blue-700 border border-blue-200\"\n-                    : \"bg-gray-100 text-gray-600 hover:bg-gray-200\"\n-                }`}\n-              >\n-                {mode}\n-              </button>\n-            ))}\n-          </div>\n-\n-          {/* Stats and Date Range */}\n-          <div className=\"flex items-center space-x-4\">\n-            <span className=\"text-sm font-medium text-gray-600\">10/10,000 Clicks</span>\n-            <button\n-              onClick={() => setIsCalendarOpen(true)}\n-              className=\"flex items-center space-x-2 px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors duration-200\"\n-            >\n-              <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                <path\n-                  strokeLinecap=\"round\"\n-                  strokeLinejoin=\"round\"\n-                  strokeWidth={2}\n-                  d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n-                />\n-              </svg>\n-              <span className=\"text-sm text-gray-600\">\n-                {startDate && endDate\n-                  ? `${startDate.toLocaleDateString()} — ${endDate.toLocaleDateString()}`\n-                  : \"Feb 10, 2023 — Feb 12, 2023\"}\n-              </span>\n-              <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n-              </svg>\n-            </button>\n-          </div>\n-        </div>\n-      </div>\n-\n-      {/* Data Table */}\n-      <div className=\"bg-white rounded-lg shadow-sm overflow-hidden\">\n-        <div className=\"overflow-x-auto\">\n-          <table className=\"w-full\">\n-            <thead className=\"bg-gray-50 border-b border-gray-200\">\n-              <tr>\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">User</th>\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n-                  User ID\n-                </th>\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n-                  IP Address\n-                </th>\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n-                  Clicks\n-                </th>\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n-                  Last Click Timestamp\n-                </th>\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n-                  Fraud Reason\n-                </th>\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Mode</th>\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n-                  Status\n-                </th>\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n-                  Action\n-                </th>\n-              </tr>\n-            </thead>\n-            <tbody className=\"bg-white divide-y divide-gray-200\">\n-              {userData.map((user) => (\n-                <tr key={user.id} className=\"hover:bg-gray-50 transition-colors duration-150\">\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{user.id}</td>\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{user.userId}</td>\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{user.ipAddress}</td>\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{user.clicks}</td>\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n-                    <div className=\"whitespace-pre-line\">{user.timestamp}</div>\n-                  </td>\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n-                    {user.fraudReason && <span className=\"text-red-600 font-medium\">{user.fraudReason}</span>}\n-                  </td>\n-                  <td className=\"px-6 py-4 whitespace-nowrap\">\n-                    <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${user.modeColor}`}>\n-                      {user.mode}\n-                    </span>\n-                  </td>\n-                  <td className=\"px-6 py-4 whitespace-nowrap\">\n-                    <span className={`text-sm font-medium ${user.statusColor}`}>{user.status}</span>\n-                  </td>\n-                  <td className=\"px-6 py-4 whitespace-nowrap\">\n-                    <button className=\"text-gray-400 hover:text-gray-600 transition-colors duration-200\">\n-                      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                        <path\n-                          strokeLinecap=\"round\"\n-                          strokeLinejoin=\"round\"\n-                          strokeWidth={2}\n-                          d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n-                        />\n-                        <path\n-                          strokeLinecap=\"round\"\n-                          strokeLinejoin=\"round\"\n-                          strokeWidth={2}\n-                          d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\n-                        />\n-                      </svg>\n-                    </button>\n-                  </td>\n-                </tr>\n-              ))}\n-            </tbody>\n-          </table>\n-        </div>\n-\n-        {/* Pagination */}\n-        <div className=\"bg-white px-6 py-3 border-t border-gray-200 flex items-center justify-between\">\n-          <div className=\"flex items-center space-x-2\">\n-            <span className=\"text-sm text-gray-700\">Showing</span>\n-            <select\n-              value={itemsPerPage}\n-              onChange={(e) => setItemsPerPage(Number(e.target.value))}\n-              className=\"border border-gray-300 rounded px-2 py-1 text-sm\"\n-            >\n-              <option value={10}>10</option>\n-              <option value={25}>25</option>\n-              <option value={50}>50</option>\n-            </select>\n-            <span className=\"text-sm text-gray-700\">\n-              to {endEntry} out of {totalEntries} entries\n-            </span>\n-          </div>\n-\n-          <div className=\"flex items-center space-x-2\">\n-            <button\n-              onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\n-              disabled={currentPage === 1}\n-              className=\"px-3 py-1 border border-gray-300 rounded text-sm hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n-            >\n-              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n-              </svg>\n-            </button>\n-\n-            {[...Array(Math.min(5, totalPages))].map((_, index) => {\n-              const pageNumber = index + 1\n-              return (\n-                <button\n-                  key={pageNumber}\n-                  onClick={() => setCurrentPage(pageNumber)}\n-                  className={`px-3 py-1 border rounded text-sm transition-colors duration-200 ${\n-                    currentPage === pageNumber\n-                      ? \"bg-blue-500 text-white border-blue-500\"\n-                      : \"border-gray-300 hover:bg-gray-50\"\n-                  }`}\n-                >\n-                  {pageNumber}\n-                </button>\n-              )\n-            })}\n-\n-            <button\n-              onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}\n-              disabled={currentPage === totalPages}\n-              className=\"px-3 py-1 border border-gray-300 rounded text-sm hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n-            >\n-              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n-              </svg>\n-            </button>\n-          </div>\n-        </div>\n-      </div>\n-    </div>\n-  )\n-\n-  const renderFraudProtection = () => (\n-    <div className=\"p-6 space-y-6 relative\">\n-      {/* Header */}\n-      <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n-        <div className=\"flex items-center space-x-3 mb-4\">\n-          <svg className=\"w-6 h-6 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-            <path\n-              strokeLinecap=\"round\"\n-              strokeLinejoin=\"round\"\n-              strokeWidth={2}\n-              d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\"\n-            />\n-          </svg>\n-          <h2 className=\"text-xl font-semibold text-gray-900\">Fraud Control Settings</h2>\n-        </div>\n-        <p className=\"text-gray-600\">\n-          These rules run continuously and apply to all sessions. You can enable or customize them to automatically\n-          detect and block fraudulent behavior.\n-        </p>\n-\n-        {/* Mode Selection */}\n-        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mt-6\">\n-          <button\n-            onClick={() => setFraudMode(\"Monitor Mode\")}\n-            className={`p-4 rounded-lg border-2 transition-all duration-200 ${\n-              fraudMode === \"Monitor Mode\"\n-                ? \"border-orange-300 bg-orange-50\"\n-                : \"border-gray-200 bg-white hover:border-orange-200\"\n-            }`}\n-          >\n-            <div className=\"flex items-center space-x-3\">\n-              <div className=\"w-10 h-10 bg-orange-100 rounded-lg flex items-center justify-center\">\n-                <svg className=\"w-5 h-5 text-orange-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                  <path\n-                    strokeLinecap=\"round\"\n-                    strokeLinejoin=\"round\"\n-                    strokeWidth={2}\n-                    d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n-                  />\n-                </svg>\n-              </div>\n-              <div className=\"text-left\">\n-                <h3 className=\"font-semibold text-gray-900\">Monitor Mode</h3>\n-                <p className=\"text-sm text-gray-600\">\n-                  Detects fraud without auto-blocking; requires manual review to block.\n-                </p>\n-              </div>\n-            </div>\n-          </button>\n-\n-          <button\n-            onClick={() => setFraudMode(\"Aggressive Mode\")}\n-            className={`p-4 rounded-lg border-2 transition-all duration-200 ${\n-              fraudMode === \"Aggressive Mode\"\n-                ? \"border-red-300 bg-red-50\"\n-                : \"border-gray-200 bg-white hover:border-red-200\"\n-            }`}\n-          >\n-            <div className=\"flex items-center space-x-3\">\n-              <div className=\"w-10 h-10 bg-red-100 rounded-lg flex items-center justify-center\">\n-                <svg className=\"w-5 h-5 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                  <path\n-                    strokeLinecap=\"round\"\n-                    strokeLinejoin=\"round\"\n-                    strokeWidth={2}\n-                    d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\n-                  />\n-                </svg>\n-              </div>\n-              <div className=\"text-left\">\n-                <h3 className=\"font-semibold text-gray-900\">Aggressive Mode</h3>\n-                <p className=\"text-sm text-gray-600\">Instantly detects and automatically blocks fraudulent traffic.</p>\n-              </div>\n-            </div>\n-          </button>\n-        </div>\n-      </div>\n-\n-      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n-        {/* Suspicious Behavior */}\n-        <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n-          <div className=\"flex items-center space-x-3 mb-6\">\n-            <svg className=\"w-6 h-6 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-              <path\n-                strokeLinecap=\"round\"\n-                strokeLinejoin=\"round\"\n-                strokeWidth={2}\n-                d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\n-              />\n-            </svg>\n-            <h3 className=\"text-lg font-semibold text-gray-900\">Suspicious Behavior</h3>\n-          </div>\n-\n-          <div className=\"space-y-6\">\n-            {/* Bounce Rate */}\n-            <div className=\"flex items-start space-x-4\">\n-              <div className=\"flex items-center mt-1\">\n-                <Toggle checked={true} onChange={() => {}} />\n-              </div>\n-              <div className=\"flex-1\">\n-                <h4 className=\"font-medium text-gray-900 mb-2\">Bounce Rate</h4>\n-                <div className=\"flex items-center space-x-4 mb-2\">\n-                  <input\n-                    type=\"number\"\n-                    defaultValue={2}\n-                    className=\"w-20 px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n-                  />\n-                  <span className=\"text-gray-600\">Minimum session duration (seconds)</span>\n-                </div>\n-                <p className=\"text-sm text-gray-500\">\n-                  Flags users who leave the site within a short time (below minimum session duration).\n-                </p>\n-              </div>\n-            </div>\n-\n-            {/* Click Fraud Threshold */}\n-            <div className=\"flex items-start space-x-4\">\n-              <div className=\"flex items-center mt-1\">\n-                <Toggle checked={true} onChange={() => {}} />\n-              </div>\n-              <div className=\"flex-1\">\n-                <h4 className=\"font-medium text-gray-900 mb-2\">Click Fraud Threshold</h4>\n-                <p className=\"text-sm text-gray-500 mb-4\">\n-                  Limits high-frequency visits from the same user to prevent repeated click abuse.\n-                </p>\n-\n-                <div className=\"space-y-3 border border-gray-200 rounded-lg p-4\">\n-                  {clickThresholdRules.map((rule) => (\n-                    <div key={rule.id} className=\"flex items-center space-x-3\">\n-                      <span className=\"text-sm text-gray-600\">Allow up to</span>\n-                      <input\n-                        type=\"number\"\n-                        value={rule.clicks}\n-                        onChange={(e) => updateClickThresholdRule(rule.id, \"clicks\", Number.parseInt(e.target.value))}\n-                        className=\"w-16 px-2 py-1 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\n-                      />\n-                      <span className=\"text-sm text-gray-600\">ad clicks within</span>\n-                      <input\n-                        type=\"number\"\n-                        value={rule.time}\n-                        onChange={(e) => updateClickThresholdRule(rule.id, \"time\", Number.parseInt(e.target.value))}\n-                        className=\"w-16 px-2 py-1 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\n-                      />\n-                      <select\n-                        value={rule.unit}\n-                        onChange={(e) => updateClickThresholdRule(rule.id, \"unit\", e.target.value)}\n-                        className=\"px-3 py-1 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\n-                      >\n-                        <option value=\"minutes\">minutes</option>\n-                        <option value=\"hours\">hours</option>\n-                        <option value=\"days\">days</option>\n-                        <option value=\"months\">months</option>\n-                      </select>\n-                      <button\n-                        onClick={() => removeClickThresholdRule(rule.id)}\n-                        className=\"p-1 text-red-500 hover:text-red-700 transition-colors duration-200\"\n-                      >\n-                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                          <path\n-                            strokeLinecap=\"round\"\n-                            strokeLinejoin=\"round\"\n-                            strokeWidth={2}\n-                            d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n-                          />\n-                        </svg>\n-                      </button>\n-                    </div>\n-                  ))}\n-\n-                  <div className=\"flex justify-between items-center mt-4\">\n-                    <button\n-                      onClick={addClickThresholdRule}\n-                      className=\"px-4 py-2 border border-orange-300 text-orange-600 rounded-lg hover:bg-orange-50 transition-colors duration-200\"\n-                    >\n-                      New Rule\n-                    </button>\n-                    <button className=\"px-4 py-2 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors duration-200\">\n-                      Update Threshold Rules\n-                    </button>\n-                  </div>\n-                </div>\n-              </div>\n-            </div>\n-\n-            {/* No Mouse Movement */}\n-            <div className=\"flex items-start space-x-4\">\n-              <div className=\"flex items-center mt-1\">\n-                <Toggle checked={false} onChange={() => {}} />\n-              </div>\n-              <div className=\"flex-1\">\n-                <h4 className=\"font-medium text-gray-900 mb-2\">No Mouse Movement (Desktop)</h4>\n-                <p className=\"text-sm text-gray-500\">\n-                  Flags desktop users who show no mouse movement, indicating low interaction or automation.\n-                </p>\n-              </div>\n-            </div>\n-\n-            {/* No Scroll Activity */}\n-            <div className=\"flex items-start space-x-4\">\n-              <div className=\"flex items-center mt-1\">\n-                <Toggle checked={false} onChange={() => {}} />\n-              </div>\n-              <div className=\"flex-1\">\n-                <h4 className=\"font-medium text-gray-900 mb-2\">No Scroll Activity</h4>\n-                <p className=\"text-sm text-gray-500\">\n-                  Flags users who do not scroll the page, suggesting minimal engagement.\n-                </p>\n-              </div>\n-            </div>\n-\n-            {/* No Click Interaction */}\n-            <div className=\"flex items-start space-x-4\">\n-              <div className=\"flex items-center mt-1\">\n-                <Toggle checked={false} onChange={() => {}} />\n-              </div>\n-              <div className=\"flex-1\">\n-                <h4 className=\"font-medium text-gray-900 mb-2\">No Click Interaction</h4>\n-                <p className=\"text-sm text-gray-500\">\n-                  Flags users who never click on any element during their session.\n-                </p>\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n-\n-        {/* VPN & Location Fraud */}\n-        <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n-          <div className=\"flex items-center space-x-3 mb-6\">\n-            <svg className=\"w-6 h-6 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-              <path\n-                strokeLinecap=\"round\"\n-                strokeLinejoin=\"round\"\n-                strokeWidth={2}\n-                d=\"M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9v-9m0-9v9m0 9c-5 0-9-4-9-9s4-9 9-9\"\n-              />\n-            </svg>\n-            <h3 className=\"text-lg font-semibold text-gray-900\">Vpn & Location Fraud</h3>\n-          </div>\n-\n-          <div className=\"space-y-6\">\n-            {/* Block VPN/Proxy */}\n-            <div className=\"flex items-start space-x-4\">\n-              <div className=\"flex items-center mt-1\">\n-                <Toggle checked={false} onChange={() => {}} />\n-              </div>\n-              <div className=\"flex-1\">\n-                <h4 className=\"font-medium text-gray-900 mb-2\">Block VPN/Proxy</h4>\n-                <p className=\"text-sm text-gray-500\">\n-                  Blocks users identified as using VPNs or proxy services to mask their IP.\n-                </p>\n-              </div>\n-            </div>\n-\n-            {/* ISP Fraud Detection */}\n-            <div className=\"flex items-start space-x-4\">\n-              <div className=\"flex items-center mt-1\">\n-                <Toggle checked={false} onChange={() => {}} />\n-              </div>\n-              <div className=\"flex-1\">\n-                <h4 className=\"font-medium text-gray-900 mb-2\">ISP Fraud Detection</h4>\n-                <p className=\"text-sm text-gray-500\">\n-                  Flags users connected through high-risk or suspicious internet providers.\n-                </p>\n-              </div>\n-            </div>\n-\n-            {/* IP/Geo Location Mismatch */}\n-            <div className=\"flex items-start space-x-4\">\n-              <div className=\"flex items-center mt-1\">\n-                <Toggle checked={true} onChange={() => {}} />\n-              </div>\n-              <div className=\"flex-1\">\n-                <h4 className=\"font-medium text-gray-900 mb-2\">IP/Geo Location Mismatch</h4>\n-                <p className=\"text-sm text-gray-500\">\n-                  Blocks users whose IP address does not align with their reported geolocation.\n-                </p>\n-              </div>\n-            </div>\n-\n-            {/* Timezone/IP Mismatch */}\n-            <div className=\"flex items-start space-x-4\">\n-              <div className=\"flex items-center mt-1\">\n-                <Toggle checked={true} onChange={() => {}} />\n-              </div>\n-              <div className=\"flex-1\">\n-                <h4 className=\"font-medium text-gray-900 mb-2\">Timezone/IP Mismatch</h4>\n-                <p className=\"text-sm text-gray-500\">\n-                  Blocks users whose browser timezone doesn't match their IP-based location.\n-                </p>\n-              </div>\n-            </div>\n-\n-            {/* Country-Based Blocking */}\n-            <div className=\"flex items-start space-x-4\">\n-              <div className=\"flex items-center mt-1\">\n-                <Toggle checked={false} onChange={() => {}} />\n-              </div>\n-              <div className=\"flex-1\">\n-                <h4 className=\"font-medium text-gray-900 mb-2\">Country-Based Blocking</h4>\n-                <p className=\"text-sm text-gray-500 mb-3\">Only allow traffic from selected countries (whitelist).</p>\n-\n-                <div className=\"space-y-3\">\n-                  <div className=\"relative\">\n-                    <select\n-                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white\"\n-                      onChange={handleCountrySelect}\n-                      value=\"\"\n-                    >\n-                      <option value=\"\" disabled>\n-                        Select countries to allow\n-                      </option>\n-                      {countries.map((country) => {\n-                        const isSelected = selectedCountries.some((c) => c.code === country.code)\n-                        return (\n-                          <option\n-                            key={country.code}\n-                            value={country.code}\n-                            className={isSelected ? \"text-gray-400\" : \"\"}\n-                            disabled={isSelected}\n-                          >\n-                            {country.name} {isSelected ? \"(Selected)\" : \"\"}\n-                          </option>\n-                        )\n-                      })}\n-                    </select>\n-                  </div>\n-                  <div className=\"flex space-x-2\">\n-                    <button\n-                      onClick={handleSelectAllCountries}\n-                      className=\"px-3 py-1 text-xs bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-md transition-colors\"\n-                    >\n-                      Select All Countries\n-                    </button>\n-                    <button\n-                      onClick={handleDeselectAllCountries}\n-                      className=\"px-3 py-1 text-xs bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-md transition-colors\"\n-                    >\n-                      Deselect All\n-                    </button>\n-                  </div>\n-                  {selectedCountries.length > 0 ? (\n-                    <div className=\"mt-3 flex flex-wrap gap-2\">\n-                      {selectedCountries.map((country) => (\n-                        <div\n-                          key={country.code}\n-                          className=\"bg-blue-50 text-blue-700 px-2 py-1 rounded-md text-sm flex items-center\"\n-                        >\n-                          {country.name}\n-                          <button\n-                            className=\"ml-1 text-blue-500 hover:text-blue-700\"\n-                            onClick={() => handleRemoveCountry(country.code)}\n-                          >\n-                            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                              <path\n-                                strokeLinecap=\"round\"\n-                                strokeLinejoin=\"round\"\n-                                strokeWidth={2}\n-                                d=\"M6 18L18 6M6 6l12 12\"\n-                              />\n-                            </svg>\n-                          </button>\n-                        </div>\n-                      ))}\n-                    </div>\n-                  ) : (\n-                    <div className=\"mt-3 text-sm text-gray-500 italic\">\n-                      No countries selected. All traffic will be blocked.\n-                    </div>\n-                  )}\n-                </div>\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n-\n-        {/* Browser Fraud */}\n-        <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n-          <div className=\"flex items-center space-x-3 mb-6\">\n-            <svg className=\"w-6 h-6 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-              <path\n-                strokeLinecap=\"round\"\n-                strokeLinejoin=\"round\"\n-                strokeWidth={2}\n-                d=\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\n-              />\n-            </svg>\n-            <h3 className=\"text-lg font-semibold text-gray-900\">Browser Fraud</h3>\n-          </div>\n-\n-          <div className=\"space-y-6\">\n-            {/* Incognito/Ad Blocker Detected */}\n-            <div className=\"flex items-start space-x-4\">\n-              <div className=\"flex items-center mt-1\">\n-                <Toggle checked={true} onChange={() => {}} />\n-              </div>\n-              <div className=\"flex-1\">\n-                <h4 className=\"font-medium text-gray-900 mb-2\">Incognito/Ad Blocker Detected</h4>\n-                <p className=\"text-sm text-gray-500\">\n-                  Flags users browsing in private/incognito mode or using ad-blocking extensions.\n-                </p>\n-              </div>\n-            </div>\n-\n-            {/* JavaScript Disabled */}\n-            <div className=\"flex items-start space-x-4\">\n-              <div className=\"flex items-center mt-1\">\n-                <Toggle checked={true} onChange={() => {}} />\n-              </div>\n-              <div className=\"flex-1\">\n-                <h4 className=\"font-medium text-gray-900 mb-2\">JavaScript Disabled</h4>\n-                <p className=\"text-sm text-gray-500\">\n-                  Blocks users with JavaScript disabled, a common trait of bots or anti-tracking setups.\n-                </p>\n-              </div>\n-            </div>\n-\n-            {/* Browser Language Fraud Detection */}\n-            <div className=\"flex items-start space-x-4\">\n-              <div className=\"flex items-center mt-1\">\n-                <Toggle checked={false} onChange={() => {}} />\n-              </div>\n-              <div className=\"flex-1\">\n-                <h4 className=\"font-medium text-gray-900 mb-2\">Browser Language Fraud Detection</h4>\n-                <p className=\"text-sm text-gray-500\">\n-                  Flags users with non-English browser languages (Only EN-US, EN-GB etc. are allowed)\n-                </p>\n-              </div>\n-            </div>\n-\n-            {/* Headless Browser Detected */}\n-            <div className=\"flex items-start space-x-4\">\n-              <div className=\"flex items-center mt-1\">\n-                <Toggle checked={true} onChange={() => {}} />\n-              </div>\n-              <div className=\"flex-1\">\n-                <h4 className=\"font-medium text-gray-900 mb-2\">Headless Browser Detected</h4>\n-                <p className=\"text-sm text-gray-500\">\n-                  Blocks sessions running in headless or automation-mode browsers, common in bots.\n-                </p>\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n-\n-        {/* Geo Access Control */}\n-        <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n-          <div className=\"flex items-center space-x-3 mb-6\">\n-            <svg className=\"w-6 h-6 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-              <path\n-                strokeLinecap=\"round\"\n-                strokeLinejoin=\"round\"\n-                strokeWidth={2}\n-                d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\"\n-              />\n-              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n-            </svg>\n-            <h3 className=\"text-lg font-semibold text-gray-900\">Geo Access Control</h3>\n-          </div>\n-\n-          <div className=\"space-y-6\">\n-            {/* One-Time Geolocation */}\n-            <div className=\"flex items-start space-x-4\">\n-              <div className=\"flex items-center mt-1\">\n-                <Toggle checked={false} onChange={() => {}} />\n-              </div>\n-              <div className=\"flex-1\">\n-                <h4 className=\"font-medium text-gray-900 mb-2\">One-Time Geolocation</h4>\n-                <p className=\"text-sm text-gray-500\">\n-                  Prompts users to share their location once for additional verification.\n-                </p>\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n-      </div>\n-      {/* Save Settings Button */}\n-      <div className=\"flex justify-end mt-8\">\n-        <button\n-          onClick={() => {\n-            setShowFraudSaveToast(true);\n-            setTimeout(() => setShowFraudSaveToast(false), 2000);\n-          }}\n-          className=\"px-6 py-3 bg-blue-600 text-white rounded-lg shadow hover:bg-blue-700 transition-colors duration-200 font-semibold text-lg\"\n-        >\n-          Save Settings\n-        </button>\n-      </div>\n-      {/* Toast Notification */}\n-      {showFraudSaveToast && (\n-        <div className=\"fixed right-8 bottom-8 z-50 bg-green-500 text-white px-6 py-4 rounded-lg shadow-lg flex items-center space-x-2 animate-fadeIn\">\n-          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n-          </svg>\n-          <span className=\"font-medium\">Settings saved</span>\n-        </div>\n-      )}\n-    </div>\n-  )\n-\n-  const renderIntegrations = () => (\n-    <div className=\"p-6 space-y-6\">\n-      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n-        {/* Website Domain Section */}\n-        <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n-          <h3 className=\"text-lg font-semibold text-gray-900 mb-6\">Please Enter Your Website Domain</h3>\n-\n-          <div className=\"space-y-4\">\n-            <div>\n-              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Website</label>\n-              <div className=\"flex space-x-3\">\n-                <input\n-                  type=\"text\"\n-                  defaultValue=\"www.yourdomain.com\"\n-                  className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n-                />\n-                <button className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors duration-200\">\n-                  Test Connection\n-                </button>\n-              </div>\n-            </div>\n-\n-            <div>\n-              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Status</label>\n-              <span className=\"inline-flex px-3 py-1 text-sm font-medium bg-green-100 text-green-800 rounded-full\">\n-                Connected\n-              </span>\n-            </div>\n-\n-            <div>\n-              <label className=\"block text-sm font-medium text-gray-700 mb-2\">HTML Code</label>\n-              <div className=\"relative\">\n-                <textarea\n-                  readOnly\n-                  value={`<!DOCTYPE html>\n-<html lang=\"en\">\n-<head>\n-  <meta charset=\"UTF-8\">\n-  <title>Fraud Detection Settings</title>\n-</head>\n-<body>\n-\n-  <h1>Detection Mode</h1>\n-  \n-  <h2>Safe Mode</h2>\n-  <p>Flags medium-risk behavior for review.</p>\n-  \n-  <h2>Aggressive Mode</h2>\n-  <p>Blocks high-risk users immediately.</p>\n-  \n-  <h1>Custom Rules</h1>\n-  <p>Extra checks like VPN, incognito, and user interaction.</p>\n-  \n-  <h2>Visitor Threshold</h2>\n-  <p>Limits visits over short and long periods.</p>\n-  \n-  <h2>Session Control</h2>\n-  <p>Blocks long or suspicious sessions.</p>\n-\n-</body>\n-</html>`}\n-                  className=\"w-full h-64 px-3 py-2 border border-gray-300 rounded-lg bg-gray-50 text-sm font-mono resize-none\"\n-                />\n-                <button\n-                  onClick={() => {\n-                    const textarea = document.querySelector(\"textarea\");\n-                    if (textarea) {\n-                      navigator.clipboard.writeText(textarea.value);\n-                    }\n-                    // You could add a toast notification here\n-                  }}\n-                  className=\"absolute top-3 right-3 px-3 py-1 bg-gray-200 text-gray-700 rounded text-sm hover:bg-gray-300 transition-colors duration-200 flex items-center space-x-1\"\n-                >\n-                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                    <path\n-                      strokeLinecap=\"round\"\n-                      strokeLinejoin=\"round\"\n-                      strokeWidth={2}\n-                      d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\"\n-                    />\n-                  </svg>\n-                  <span>Copy</span>\n-                </button>\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n-\n-        {/* Facebook Event Test Section */}\n-        <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n-          <h3 className=\"text-lg font-semibold text-gray-900 mb-6\">Facebook Event Test</h3>\n-\n-          <div className=\"space-y-4\">\n-            <div>\n-              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Event Name</label>\n-              <div className=\"flex space-x-3\">\n-                <input\n-                  type=\"text\"\n-                  value=\"Oliggo3824639423\"\n-                  readOnly\n-                  className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg bg-gray-50 text-gray-600\"\n-                />\n-                <button className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors duration-200\">\n-                  Test Connection\n-                </button>\n-              </div>\n-            </div>\n-\n-            <div>\n-              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Status</label>\n-              <span className=\"inline-flex px-3 py-1 text-sm font-medium bg-green-100 text-green-800 rounded-full\">\n-                Connected\n-              </span>\n-            </div>\n-          </div>\n-        </div>\n-      </div>\n-    </div>\n-  )\n-\n-  const renderRefundReport = () => (\n-    <div className=\"p-6 space-y-6\">\n-      {/* Header Stats */}\n-      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n-        <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n-          <div className=\"flex items-center space-x-3\">\n-            <div className=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center\">\n-              <svg className=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                <path\n-                  strokeLinecap=\"round\"\n-                  strokeLinejoin=\"round\"\n-                  strokeWidth={2}\n-                  d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\"\n-                />\n-              </svg>\n-            </div>\n-            <div>\n-              <p className=\"text-sm font-medium text-gray-600\">All Time Refund</p>\n-              <p className=\"text-2xl font-bold text-gray-900\">$300</p>\n-            </div>\n-          </div>\n-        </div>\n-\n-        <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n-          <div className=\"flex items-center space-x-3\">\n-            <div className=\"w-10 h-10 bg-purple-100 rounded-lg flex items-center justify-center\">\n-              <svg className=\"w-5 h-5 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                <path\n-                  strokeLinecap=\"round\"\n-                  strokeLinejoin=\"round\"\n-                  strokeWidth={2}\n-                  d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n-                />\n-              </svg>\n-            </div>\n-            <div>\n-              <p className=\"text-sm font-medium text-gray-600\">Next Upcoming Refund Date</p>\n-              <p className=\"text-2xl font-bold text-gray-900\">05/01/2025</p>\n-            </div>\n-          </div>\n-        </div>\n-      </div>\n-\n-      {/* Refund Table */}\n-      <div className=\"bg-white rounded-lg shadow-sm overflow-hidden\">\n-        <div className=\"overflow-x-auto\">\n-          <table className=\"w-full\">\n-            <thead className=\"bg-gray-50 border-b border-gray-200\">\n-              <tr>\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Week</th>\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n-                  Start Date\n-                </th>\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n-                  End Date\n-                </th>\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n-                  Refund Amount\n-                </th>\n-                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Link</th>\n-              </tr>\n-            </thead>\n-            <tbody className=\"bg-white divide-y divide-gray-200\">\n-              {refundData.weeks.map((week) => (\n-                <tr key={week.id} className=\"hover:bg-gray-50 transition-colors duration-150\">\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{week.week}</td>\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n-                    <div>\n-                      <div>{week.startDate}</div>\n-                      <div className=\"text-xs text-gray-400\">{week.startTime}</div>\n-                    </div>\n-                  </td>\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n-                    <div>\n-                      <div>{week.endDate}</div>\n-                      <div className=\"text-xs text-gray-400\">{week.endTime}</div>\n-                    </div>\n-                  </td>\n-                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{week.refundAmount}</td>\n-                  <td className=\"px-6 py-4 whitespace-nowrap\">\n-                    <button\n-                      onClick={() => navigator.clipboard.writeText(week.link)}\n-                      className=\"inline-flex items-center space-x-1 px-3 py-1 border border-gray-300 rounded text-sm hover:bg-gray-50 transition-colors duration-200\"\n-                    >\n-                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                        <path\n-                          strokeLinecap=\"round\"\n-                          strokeLinejoin=\"round\"\n-                          strokeWidth={2}\n-                          d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\"\n-                        />\n-                      </svg>\n-                      <span>Copy Link</span>\n-                    </button>\n-                  </td>\n-                </tr>\n-              ))}\n-            </tbody>\n-          </table>\n-        </div>\n-\n-        {/* Pagination */}\n-        <div className=\"bg-white px-6 py-3 border-t border-gray-200 flex items-center justify-between\">\n-          <div className=\"flex items-center space-x-2\">\n-            <span className=\"text-sm text-gray-700\">Showing 1 to</span>\n-            <select className=\"border border-gray-300 rounded px-2 py-1 text-sm\">\n-              <option value={10}>10</option>\n-              <option value={25}>25</option>\n-              <option value={50}>50</option>\n-            </select>\n-            <span className=\"text-sm text-gray-700\">out of 20 entries</span>\n-          </div>\n-\n-          <div className=\"flex items-center space-x-2\">\n-            <button className=\"px-3 py-1 border border-gray-300 rounded text-sm hover:bg-gray-50\">\n-              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n-              </svg>\n-            </button>\n-            <button className=\"px-3 py-1 bg-blue-500 text-white border border-blue-500 rounded text-sm\">1</button>\n-            <button className=\"px-3 py-1 border border-gray-300 rounded text-sm hover:bg-gray-50\">2</button>\n-            <button className=\"px-3 py-1 border border-gray-300 rounded text-sm hover:bg-gray-50\">\n-              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n-              </svg>\n-            </button>\n-          </div>\n-        </div>\n-      </div>\n-    </div>\n-  )\n-\n-  return (\n-    <div className=\"min-h-screen flex flex-col bg-gray-50\">\n-      {/* Header */}\n-      <header className=\"bg-white shadow-sm px-6 py-4 flex justify-between items-center z-10\">\n-        <div className=\"flex items-center\">\n-          <Image src=\"/images/new-logo.png\" alt=\"Oliggo Logo\" width={32} height={32} className=\"mr-2\" />\n-          <span className=\"text-blue-600 text-2xl font-medium\">Oliggo</span>\n-        </div>\n-\n-        <div className=\"relative\" ref={profileDropdownRef}>\n-          <button\n-            onClick={() => setIsProfileOpen(!isProfileOpen)}\n-            className=\"flex items-center space-x-2 text-gray-700 hover:text-gray-900\"\n-          >\n-            <div className=\"w-8 h-8 rounded-full bg-blue-500 flex items-center justify-center text-white font-medium\">\n-              {userFirstName[0]}\n-              {userLastName[0]}\n-            </div>\n-            <span className=\"font-medium\">{userFirstName}</span>\n-          </button>\n-\n-          {isProfileOpen && (\n-            <div className=\"absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg py-2 z-50\">\n-              <button\n-                onClick={() => {\n-                  setIsUserSettingsOpen(true);\n-                  setIsProfileOpen(false);\n-                }}\n-                className=\"w-full flex items-center justify-center space-x-2 text-gray-700 hover:text-blue-600 py-2\"\n-              >\n-                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n-                </svg>\n-                <span>User Settings</span>\n-              </button>\n-              <button\n-                onClick={() => { window.location.href = '/admin'; }}\n-                className=\"w-full flex items-center justify-center space-x-2 text-gray-700 hover:text-blue-600 py-2\"\n-              >\n-                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\" />\n-                </svg>\n-                <span>Admin Panel</span>\n-              </button>\n-              <div className=\"border-t pt-4\">\n-                <button \n-                  onClick={handleSignOut}\n-                  className=\"w-full flex items-center justify-center space-x-2 text-red-600 hover:text-red-700\"\n-                >\n-                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                    <path\n-                      strokeLinecap=\"round\"\n-                      strokeLinejoin=\"round\"\n-                      strokeWidth={2}\n-                      d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n-                    />\n-                  </svg>\n-                  <span>Sign Out</span>\n-                </button>\n-              </div>\n-            </div>\n-          )}\n-        </div>\n-      </header>\n-\n-      <div className=\"flex flex-1\">\n-        {/* Left Sidebar */}\n-        <div\n-          className={`${isSidebarExpanded ? \"w-80\" : \"w-20\"} bg-white shadow-sm flex flex-col py-6 transition-all duration-300 relative`}\n-        >\n-          {/* Expand/Collapse Button - Moved above profiles */}\n-          <div className={`${isSidebarExpanded ? \"px-6\" : \"flex justify-center\"} mb-4`}>\n-            <button\n-              onClick={() => setIsSidebarExpanded(!isSidebarExpanded)}\n-              className=\"w-8 h-8 bg-gray-100 border border-gray-300 rounded-full flex items-center justify-center shadow-sm hover:shadow-md transition-all duration-200 hover:bg-gray-200\"\n-            >\n-              <svg\n-                className={`w-4 h-4 text-gray-600 transition-transform duration-200 ${isSidebarExpanded ? \"rotate-180\" : \"\"}`}\n-                fill=\"none\"\n-                stroke=\"currentColor\"\n-                viewBox=\"0 0 24 24\"\n-              >\n-                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n-              </svg>\n-            </button>\n-          </div>\n-\n-          <div className={`${isSidebarExpanded ? \"px-6\" : \"items-center\"} flex flex-col space-y-4`}>\n-            {/* Sub-profiles */}\n-            {subProfiles.map((profile, index) => (\n-              <div key={profile.id} className=\"relative\">\n-                <button\n-                  onClick={() => setSelectedProfile(index)}\n-                  onMouseEnter={() => !isSidebarExpanded && setHoveredProfile(index)}\n-                  onMouseLeave={() => !isSidebarExpanded && setHoveredProfile(null)}\n-                  className={`flex items-center justify-center transition-all duration-300 transform hover:scale-110 ${\n-                    isSidebarExpanded ? \"w-full flex-col\" : \"w-12 h-12 rounded-full\"\n-                  }`}\n-                >\n-                  <div\n-                    className={`w-12 h-12 rounded-full ${profile.color} flex items-center justify-center text-white font-medium shadow-md ${\n-                      selectedProfile === index ? \"ring-2 ring-blue-500 ring-offset-2\" : \"\"\n-                    }`}\n-                  >\n-                    {profile.initials}\n-                  </div>\n-\n-                  {isSidebarExpanded && (\n-                    <div className=\"mt-2 text-center\">\n-                      <p className=\"text-gray-800 font-medium\">{profile.name}</p>\n-                      <p className=\"text-gray-500 text-xs\">{profile.details.adAccount}</p>\n-                    </div>\n-                  )}\n-                </button>\n-\n-                {/* Tooltip for collapsed sidebar */}\n-                {!isSidebarExpanded && hoveredProfile === index && (\n-                  <div\n-                    className=\"absolute left-16 top-0 bg-white border border-gray-200 text-gray-800 p-3 rounded-lg shadow-xl z-50 w-64\"\n-                    onMouseEnter={() => setHoveredProfile(index)}\n-                    onMouseLeave={() => setHoveredProfile(null)}\n-                  >\n-                    <div className=\"flex items-center justify-between mb-2\">\n-                      <div className=\"font-medium text-blue-600\">{profile.name} Profile</div>\n-                      <div className=\"flex space-x-1\">\n-                        <button\n-                          onClick={() => openEditModal(index)}\n-                          className=\"p-1.5 text-gray-400 hover:text-blue-600 hover:bg-blue-50 rounded transition-colors duration-200\"\n-                          title=\"Edit Profile\"\n-                        >\n-                          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                            <path\n-                              strokeLinecap=\"round\"\n-                              strokeLinejoin=\"round\"\n-                              strokeWidth={2}\n-                              d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n-                            />\n-                          </svg>\n-                        </button>\n-                        <button\n-                          onClick={() => deleteProfile(index)}\n-                          className=\"p-1.5 text-gray-400 hover:text-red-600 hover:bg-red-50 rounded transition-colors duration-200\"\n-                          title=\"Delete Profile\"\n-                        >\n-                          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                            <path\n-                              strokeLinecap=\"round\"\n-                              strokeLinejoin=\"round\"\n-                              strokeWidth={2}\n-                              d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n-                            />\n-                          </svg>\n-                        </button>\n-                      </div>\n-                    </div>\n-                    <div className=\"text-sm space-y-2\">\n-                      <div>\n-                        <span className=\"text-gray-500\">Ad Account:</span> {profile.details.adAccount}\n-                      </div>\n-                      <div>\n-                        <span className=\"text-gray-500\">Campaign:</span> {profile.details.campaign}\n-                      </div>\n-                      <div>\n-                        <span className=\"text-gray-500\">Adset:</span> {profile.details.adset}\n-                      </div>\n-                      <div>\n-                        <span className=\"text-gray-500\">Pixel:</span> {profile.details.pixel}\n-                      </div>\n-                      <div>\n-                        <span className=\"text-gray-500\">Activated:</span> {profile.details.activatedTime}\n-                      </div>\n-                      <div>\n-                        <span className=\"text-gray-500\">Status:</span>\n-                        <span\n-                          className={`ml-1 ${profile.details.protectStatus === \"Active\" ? \"text-green-600\" : \"text-yellow-600\"}`}\n-                        >\n-                          {profile.details.protectStatus}\n-                        </span>\n-                      </div>\n-                    </div>\n-                    <div className=\"absolute left-0 top-3 w-0 h-0 border-t-4 border-b-4 border-r-4 border-transparent border-r-white -translate-x-1\"></div>\n-                  </div>\n-                )}\n-              </div>\n-            ))}\n-\n-            {/* Expanded Profile Details */}\n-            {isSidebarExpanded && (\n-              <div className=\"bg-gray-50 rounded-lg p-4 mt-4\">\n-                <div className=\"flex items-center justify-between mb-3\">\n-                  <h3 className=\"font-medium text-gray-800\">Profile Details</h3>\n-                  <div className=\"flex space-x-1\">\n-                    <button\n-                      onClick={() => openEditModal(selectedProfile)}\n-                      className=\"p-1.5 text-gray-400 hover:text-blue-600 hover:bg-blue-50 rounded transition-colors duration-200\"\n-                      title=\"Edit Profile\"\n-                    >\n-                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                        <path\n-                          strokeLinecap=\"round\"\n-                          strokeLinejoin=\"round\"\n-                          strokeWidth={2}\n-                          d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n-                        />\n-                      </svg>\n-                    </button>\n-                    <button\n-                      onClick={() => deleteProfile(selectedProfile)}\n-                      className=\"p-1.5 text-gray-400 hover:text-red-600 hover:bg-red-50 rounded transition-colors duration-200\"\n-                      title=\"Delete Profile\"\n-                    >\n-                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                        <path\n-                          strokeLinecap=\"round\"\n-                          strokeLinejoin=\"round\"\n-                          strokeWidth={2}\n-                          d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n-                        />\n-                      </svg>\n-                    </button>\n-                  </div>\n-                </div>\n-                <div className=\"space-y-2 text-sm\">\n-                  <div>\n-                    <span className=\"text-gray-500\">Campaign:</span>\n-                    <p className=\"text-gray-800\">{subProfiles[selectedProfile].details.campaign}</p>\n-                  </div>\n-                  <div>\n-                    <span className=\"text-gray-500\">Adset:</span>\n-                    <p className=\"text-gray-800\">{subProfiles[selectedProfile].details.adset}</p>\n-                  </div>\n-                  <div>\n-                    <span className=\"text-gray-500\">Pixel:</span>\n-                    <p className=\"text-gray-800\">{subProfiles[selectedProfile].details.pixel}</p>\n-                  </div>\n-                  <div>\n-                    <span className=\"text-gray-500\">Activated Time:</span>\n-                    <p className=\"text-gray-800\">{subProfiles[selectedProfile].details.activatedTime}</p>\n-                  </div>\n-                  <div>\n-                    <span className=\"text-gray-500\">Protect Status:</span>\n-                    <span\n-                      className={`ml-1 px-2 py-1 rounded-full text-xs font-medium ${\n-                        subProfiles[selectedProfile].details.protectStatus === \"Active\"\n-                          ? \"bg-green-100 text-green-800\"\n-                          : \"bg-yellow-100 text-yellow-800\"\n-                      }`}\n-                    >\n-                      {subProfiles[selectedProfile].details.protectStatus}\n-                    </span>\n-                  </div>\n-                </div>\n-              </div>\n-            )}\n-\n-            {/* Add Profile Button */}\n-            <button\n-              className={`${isSidebarExpanded ? \"w-full p-4 rounded-lg\" : \"w-12 h-12 rounded-full\"} border-2 border-dashed border-gray-300 flex items-center justify-center text-gray-400 hover:text-gray-600 hover:border-gray-400 transition-all duration-300 hover:scale-105`}\n-            >\n-              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n-              </svg>\n-              {isSidebarExpanded && <span className=\"ml-2 text-gray-600\">Add Profile</span>}\n-            </button>\n-\n-            {/* Separator Line */}\n-            <div className={`${isSidebarExpanded ? \"w-full\" : \"w-8\"} h-px bg-gray-300 my-4`}></div>\n-\n-            {/* Facebook Logo with Animation */}\n-            <div\n-              className={`${isSidebarExpanded ? \"w-full p-4 rounded-lg\" : \"w-12 h-12 rounded-lg\"} bg-blue-600 flex items-center justify-center transition-all duration-300 hover:bg-blue-700 hover:scale-105 ${isSidebarExpanded ? \"justify-start space-x-3\" : \"\"} relative overflow-hidden group`}\n-            >\n-              <div className=\"relative\">\n-                <span className=\"text-white font-bold text-lg transform transition-all duration-500 group-hover:rotate-12 group-hover:scale-110 inline-block\">\n-                  f\n-                </span>\n-                {/* Animated background pulse */}\n-                <div className=\"absolute inset-0 bg-blue-400 rounded-full opacity-0 group-hover:opacity-30 group-hover:animate-ping\"></div>\n-                {/* Rotating border */}\n-                <div className=\"absolute inset-0 border-2 border-blue-300 rounded-full opacity-0 group-hover:opacity-50 animate-spin\"></div>\n-              </div>\n-              {isSidebarExpanded && (\n-                <span className=\"text-white font-medium transform transition-all duration-300 group-hover:translate-x-1\">\n-                  Facebook Ads\n-                </span>\n-              )}\n-              {/* Floating particles */}\n-              <div className=\"absolute top-1 right-1 w-1 h-1 bg-blue-200 rounded-full opacity-0 group-hover:opacity-100 group-hover:animate-bounce\"></div>\n-              <div\n-                className=\"absolute bottom-1 left-1 w-1 h-1 bg-blue-200 rounded-full opacity-0 group-hover:opacity-100 group-hover:animate-bounce\"\n-                style={{ animationDelay: \"0.2s\" }}\n-              ></div>\n-            </div>\n-          </div>\n-        </div>\n-\n-        {/* Main Content */}\n-        <div className=\"flex-1 flex flex-col\">\n-          {/* Navigation Tabs */}\n-          <div className=\"bg-white border-b border-gray-200 px-6\">\n-            <div className=\"flex justify-center space-x-8\">\n-              {tabs.map((tab) => (\n-                <button\n-                  key={tab}\n-                  onClick={() => setActiveTab(tab)}\n-                  className={`py-4 px-2 border-b-2 font-medium text-sm transition-colors duration-200 ${\n-                    activeTab === tab\n-                      ? \"border-blue-500 text-blue-600\"\n-                      : \"border-transparent text-gray-500 hover:text-gray-700\"\n-                  }`}\n-                >\n-                  {tab}\n-                </button>\n-              ))}\n-            </div>\n-          </div>\n-\n-          {/* Content based on active tab */}\n-          <div className=\"flex-1\">\n-            {activeTab === \"Dashboard\" && renderDashboard()}\n-            {activeTab === \"User Activity\" && renderUserActivity()}\n-            {activeTab === \"Fraud Protection\" && renderFraudProtection()}\n-            {activeTab === \"Integrations\" && renderIntegrations()}\n-            {activeTab === \"Refund Report\" && renderRefundReport()}\n-          </div>\n-        </div>\n-      </div>\n-\n-      {/* Calendar Modal */}\n-      {isCalendarOpen && (\n-        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n-          <div className=\"bg-white rounded-lg p-6 w-96\">\n-            <div className=\"flex items-center justify-between mb-4\">\n-              <h3 className=\"text-lg font-semibold\">Select Date Range</h3>\n-              <button onClick={() => setIsCalendarOpen(false)} className=\"text-gray-400 hover:text-gray-600\">\n-                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n-                </svg>\n-              </button>\n-            </div>\n-\n-            {/* Calendar Header */}\n-            <div className=\"flex items-center justify-between mb-4\">\n-              <button\n-                onClick={() => setSelectedDate(new Date(selectedDate.getFullYear(), selectedDate.getMonth() - 1))}\n-                className=\"p-2 hover:bg-gray-100 rounded\"\n-              >\n-                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n-                </svg>\n-              </button>\n-              <h4 className=\"text-lg font-medium\">\n-                {selectedDate.toLocaleDateString(\"en-US\", { month: \"long\", year: \"numeric\" })}\n-              </h4>\n-              <button\n-                onClick={() => setSelectedDate(new Date(selectedDate.getFullYear(), selectedDate.getMonth() + 1))}\n-                className=\"p-2 hover:bg-gray-100 rounded\"\n-              >\n-                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n-                </svg>\n-              </button>\n-            </div>\n-\n-            {/* Calendar Grid */}\n-            <div className=\"grid grid-cols-7 gap-1 mb-4\">\n-              {[\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"].map((day) => (\n-                <div key={day} className=\"p-2 text-center text-sm font-medium text-gray-500\">\n-                  {day}\n-                </div>\n-              ))}\n-\n-              {/* Empty cells for days before month starts */}\n-              {Array.from({ length: getFirstDayOfMonth(selectedDate) }).map((_, index) => (\n-                <div key={index} className=\"p-2\"></div>\n-              ))}\n-\n-              {/* Days of the month */}\n-              {Array.from({ length: getDaysInMonth(selectedDate) }).map((_, index) => {\n-                const day = index + 1\n-                return (\n-                  <button\n-                    key={day}\n-                    onClick={() => handleDateClick(day)}\n-                    className={`p-2 text-sm rounded hover:bg-blue-100 transition-colors ${\n-                      isDateStart(day) || isDateEnd(day)\n-                        ? \"bg-blue-600 text-white\"\n-                        : isDateInRange(day)\n-                          ? \"bg-blue-100 text-blue-600\"\n-                          : \"text-gray-700\"\n-                    }`}\n-                  >\n-                    {day}\n-                  </button>\n-                )\n-              })}\n-            </div>\n-\n-            {/* Selected Range Display */}\n-            {startDate && (\n-              <div className=\"mb-4 p-3 bg-gray-50 rounded-lg\">\n-                <p className=\"text-sm text-gray-600\">\n-                  <strong>Start:</strong> {startDate.toLocaleDateString()}\n-                  {endDate && (\n-                    <>\n-                      <br />\n-                      <strong>End:</strong> {endDate.toLocaleDateString()}\n-                    </>\n-                  )}\n-                </p>\n-              </div>\n-            )}\n-\n-            <div className=\"flex justify-end space-x-3\">\n-              <button\n-                onClick={() => {\n-                  setStartDate(null)\n-                  setEndDate(null)\n-                  setIsCalendarOpen(false)\n-                }}\n-                className=\"px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors duration-200\"\n-              >\n-                Cancel\n-              </button>\n-              <button\n-                onClick={() => setIsCalendarOpen(false)}\n-                disabled={!startDate || !endDate}\n-                className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed\"\n-              >\n-                Apply\n-              </button>\n-            </div>\n-          </div>\n-        </div>\n-      )}\n-\n-      {/* Edit Profile Modal */}\n-      {isEditModalOpen && (\n-        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n-          <div className=\"bg-white rounded-lg p-6 w-96 max-w-md mx-4\">\n-            <div className=\"flex items-center justify-between mb-6\">\n-              <h3 className=\"text-lg font-semibold text-gray-900\">Edit Facebook Account</h3>\n-              <button\n-                onClick={closeEditModal}\n-                className=\"text-gray-400 hover:text-gray-600 transition-colors duration-200\"\n-              >\n-                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n-                </svg>\n-              </button>\n-            </div>\n-\n-            {/* Profile Avatar */}\n-            <div className=\"flex justify-center mb-6\">\n-              <div className=\"relative\">\n-                <div\n-                  className={`w-20 h-20 rounded-full ${editProfileColor} flex items-center justify-center text-xl font-bold shadow-lg`}\n-                >\n-                  {editProfileName\n-                    .split(\" \")\n-                    .map((n) => n[0])\n-                    .join(\"\")\n-                    .toUpperCase()\n-                    .slice(0, 2) || \"MB\"}\n-                </div>\n-                <div className=\"absolute -bottom-1 -right-1 w-6 h-6 bg-blue-600 rounded-full flex items-center justify-center\">\n-                  <svg className=\"w-3 h-3 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n-                  </svg>\n-                </div>\n-              </div>\n-            </div>\n-\n-            {/* Account Name */}\n-            <div className=\"mb-6\">\n-              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Account Name</label>\n-              <input\n-                type=\"text\"\n-                value={editProfileName}\n-                onChange={(e) => setEditProfileName(e.target.value)}\n-                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n-                placeholder=\"Enter account name\"\n-              />\n-            </div>\n-\n-            {/* Account Color */}\n-            <div className=\"mb-8\">\n-              <label className=\"block text-sm font-medium text-gray-700 mb-3\">Account Color</label>\n-              <div className=\"flex flex-wrap gap-3 justify-center\">\n-                {colorOptions.map((color) => (\n-                  <button\n-                    key={color.value}\n-                    onClick={() => setEditProfileColor(color.value)}\n-                    className={`w-10 h-10 rounded-full ${color.class} transition-all duration-200 hover:scale-110 ${\n-                      editProfileColor === color.value\n-                        ? \"ring-4 ring-blue-300 ring-offset-2\"\n-                        : \"hover:ring-2 hover:ring-gray-300 hover:ring-offset-1\"\n-                    }`}\n-                    title={color.name}\n-                  />\n-                ))}\n-              </div>\n-            </div>\n-\n-            {/* Action Buttons */}\n-            <div className=\"flex justify-end space-x-3\">\n-              <button\n-                onClick={closeEditModal}\n-                className=\"px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors duration-200\"\n-              >\n-                Cancel\n-              </button>\n-              <button\n-                onClick={saveProfileChanges}\n-                className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors duration-200\"\n-              >\n-                Save Changes\n-              </button>\n-            </div>\n-          </div>\n-        </div>\n-      )}\n-\n-      {/* User Settings Modal */}\n-      {isUserSettingsOpen && (\n-        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n-          <div className=\"bg-white rounded-lg p-6 w-96 max-w-md mx-4\">\n-            <div className=\"flex items-center justify-between mb-6\">\n-              <div className=\"flex items-center space-x-2\">\n-                <svg className=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                  <path\n-                    strokeLinecap=\"round\"\n-                    strokeLinejoin=\"round\"\n-                    strokeWidth={2}\n-                    d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\n-                  />\n-                </svg>\n-                <h3 className=\"text-lg font-semibold text-gray-900\">User Settings</h3>\n-              </div>\n-              <button onClick={() => setIsUserSettingsOpen(false)} className=\"text-gray-400 hover:text-gray-600\">\n-                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n-                </svg>\n-              </button>\n-            </div>\n-\n-            {/* Photo Section */}\n-            <div className=\"mb-6\">\n-              <label className=\"block text-sm font-medium text-gray-700 mb-3\">Photo</label>\n-              <div className=\"flex items-center space-x-4\">\n-                <div className=\"w-16 h-16 bg-gray-200 rounded-full flex items-center justify-center\">\n-                  <svg className=\"w-8 h-8 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                    <path\n-                      strokeLinecap=\"round\"\n-                      strokeLinejoin=\"round\"\n-                      strokeWidth={2}\n-                      d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\n-                    />\n-                  </svg>\n-                </div>\n-                <button className=\"flex items-center space-x-2 text-blue-600 hover:text-blue-700\">\n-                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n-                  </svg>\n-                  <span>Upload</span>\n-                </button>\n-              </div>\n-            </div>\n-\n-            {/* First Name */}\n-            <div className=\"mb-4\">\n-              <label className=\"block text-sm font-medium text-gray-700 mb-2\">First Name</label>\n-              <input\n-                type=\"text\"\n-                value={userFirstName}\n-                onChange={(e) => setUserFirstName(e.target.value)}\n-                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n-              />\n-            </div>\n-\n-            {/* Last Name */}\n-            <div className=\"mb-8\">\n-              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Last Name</label>\n-              <input\n-                type=\"text\"\n-                value={userLastName}\n-                onChange={(e) => setUserLastName(e.target.value)}\n-                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n-              />\n-            </div>\n-\n-            {/* Action Buttons */}\n-            <div className=\"flex justify-end space-x-3 mb-4\">\n-              <button\n-                onClick={() => setIsUserSettingsOpen(false)}\n-                className=\"px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50\"\n-              >\n-                Cancel\n-              </button>\n-              <button\n-                onClick={() => setIsUserSettingsOpen(false)}\n-                className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n-              >\n-                Save Changes\n-              </button>\n-            </div>\n-\n-            {/* Sign Out */}\n-            <div className=\"border-t pt-4\">\n-              <button className=\"w-full flex items-center justify-center space-x-2 text-red-600 hover:text-red-700\">\n-                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                  <path\n-                    strokeLinecap=\"round\"\n-                    strokeLinejoin=\"round\"\n-                    strokeWidth={2}\n-                    d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n-                  />\n-                </svg>\n-                <span>Sign Out</span>\n-              </button>\n-            </div>\n-          </div>\n-        </div>\n-      )}\n-\n-      <style jsx global>{`\n-        @keyframes pulse {\n-          0% {\n-            transform: scale(1);\n-            opacity: 0.7;\n-          }\n-          50% {\n-            transform: scale(1.5);\n-            opacity: 1;\n-          }\n-          100% {\n-            transform: scale(1);\n-            opacity: 0.7;\n-          }\n-        }\n-        @keyframes fadeIn {\n-          from {\n-            opacity: 0;\n-          }\n-          to {\n-            opacity: 1;\n-          }\n-        }\n-        .animate-fadeIn {\n-          animation: fadeIn 0.3s ease-in-out;\n-        }\n-      `}</style>\n-    </div>\n-  )\n-}\n"
                },
                {
                    "date": 1750108055729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,8 +87,25 @@\n     { code: \"CA\", name: \"Canada\" },\n     { code: \"UK\", name: \"United Kingdom\" },\n   ])\n \n+  // Fraud Protection toggles state\n+  const [toggleBounceRate, setToggleBounceRate] = useState(true);\n+  const [toggleClickFraud, setToggleClickFraud] = useState(true);\n+  const [toggleNoMouse, setToggleNoMouse] = useState(false);\n+  const [toggleNoScroll, setToggleNoScroll] = useState(false);\n+  const [toggleNoClick, setToggleNoClick] = useState(false);\n+  const [toggleBlockVPN, setToggleBlockVPN] = useState(false);\n+  const [toggleISP, setToggleISP] = useState(false);\n+  const [toggleIPGeo, setToggleIPGeo] = useState(true);\n+  const [toggleTimezone, setToggleTimezone] = useState(true);\n+  const [toggleCountry, setToggleCountry] = useState(false);\n+  const [toggleIncognito, setToggleIncognito] = useState(true);\n+  const [toggleJS, setToggleJS] = useState(true);\n+  const [toggleLang, setToggleLang] = useState(false);\n+  const [toggleHeadless, setToggleHeadless] = useState(true);\n+  const [toggleGeo, setToggleGeo] = useState(false);\n+\n   // Add animation effect for the chart\n   useEffect(() => {\n     const interval = setInterval(() => {\n       setChartRotation((prev) => (prev + 1) % 360)\n"
                },
                {
                    "date": 1750108102105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1392,9 +1392,9 @@\n           <div className=\"space-y-6\">\n             {/* Bounce Rate */}\n             <div className=\"flex items-start space-x-4\">\n               <div className=\"flex items-center mt-1\">\n-                <Toggle checked={true} onChange={() => {}} />\n+                <Toggle checked={toggleBounceRate} onChange={() => setToggleBounceRate(v => !v)} />\n               </div>\n               <div className=\"flex-1\">\n                 <h4 className=\"font-medium text-gray-900 mb-2\">Bounce Rate</h4>\n                 <div className=\"flex items-center space-x-4 mb-2\">\n@@ -1413,9 +1413,9 @@\n \n             {/* Click Fraud Threshold */}\n             <div className=\"flex items-start space-x-4\">\n               <div className=\"flex items-center mt-1\">\n-                <Toggle checked={true} onChange={() => {}} />\n+                <Toggle checked={toggleClickFraud} onChange={() => setToggleClickFraud(v => !v)} />\n               </div>\n               <div className=\"flex-1\">\n                 <h4 className=\"font-medium text-gray-900 mb-2\">Click Fraud Threshold</h4>\n                 <p className=\"text-sm text-gray-500 mb-4\">\n@@ -1482,9 +1482,9 @@\n \n             {/* No Mouse Movement */}\n             <div className=\"flex items-start space-x-4\">\n               <div className=\"flex items-center mt-1\">\n-                <Toggle checked={false} onChange={() => {}} />\n+                <Toggle checked={toggleNoMouse} onChange={() => setToggleNoMouse(v => !v)} />\n               </div>\n               <div className=\"flex-1\">\n                 <h4 className=\"font-medium text-gray-900 mb-2\">No Mouse Movement (Desktop)</h4>\n                 <p className=\"text-sm text-gray-500\">\n@@ -1495,9 +1495,9 @@\n \n             {/* No Scroll Activity */}\n             <div className=\"flex items-start space-x-4\">\n               <div className=\"flex items-center mt-1\">\n-                <Toggle checked={false} onChange={() => {}} />\n+                <Toggle checked={toggleNoScroll} onChange={() => setToggleNoScroll(v => !v)} />\n               </div>\n               <div className=\"flex-1\">\n                 <h4 className=\"font-medium text-gray-900 mb-2\">No Scroll Activity</h4>\n                 <p className=\"text-sm text-gray-500\">\n@@ -1508,9 +1508,9 @@\n \n             {/* No Click Interaction */}\n             <div className=\"flex items-start space-x-4\">\n               <div className=\"flex items-center mt-1\">\n-                <Toggle checked={false} onChange={() => {}} />\n+                <Toggle checked={toggleNoClick} onChange={() => setToggleNoClick(v => !v)} />\n               </div>\n               <div className=\"flex-1\">\n                 <h4 className=\"font-medium text-gray-900 mb-2\">No Click Interaction</h4>\n                 <p className=\"text-sm text-gray-500\">\n@@ -1538,9 +1538,9 @@\n           <div className=\"space-y-6\">\n             {/* Block VPN/Proxy */}\n             <div className=\"flex items-start space-x-4\">\n               <div className=\"flex items-center mt-1\">\n-                <Toggle checked={false} onChange={() => {}} />\n+                <Toggle checked={toggleBlockVPN} onChange={() => setToggleBlockVPN(v => !v)} />\n               </div>\n               <div className=\"flex-1\">\n                 <h4 className=\"font-medium text-gray-900 mb-2\">Block VPN/Proxy</h4>\n                 <p className=\"text-sm text-gray-500\">\n@@ -1551,9 +1551,9 @@\n \n             {/* ISP Fraud Detection */}\n             <div className=\"flex items-start space-x-4\">\n               <div className=\"flex items-center mt-1\">\n-                <Toggle checked={false} onChange={() => {}} />\n+                <Toggle checked={toggleISP} onChange={() => setToggleISP(v => !v)} />\n               </div>\n               <div className=\"flex-1\">\n                 <h4 className=\"font-medium text-gray-900 mb-2\">ISP Fraud Detection</h4>\n                 <p className=\"text-sm text-gray-500\">\n@@ -1564,9 +1564,9 @@\n \n             {/* IP/Geo Location Mismatch */}\n             <div className=\"flex items-start space-x-4\">\n               <div className=\"flex items-center mt-1\">\n-                <Toggle checked={true} onChange={() => {}} />\n+                <Toggle checked={toggleIPGeo} onChange={() => setToggleIPGeo(v => !v)} />\n               </div>\n               <div className=\"flex-1\">\n                 <h4 className=\"font-medium text-gray-900 mb-2\">IP/Geo Location Mismatch</h4>\n                 <p className=\"text-sm text-gray-500\">\n@@ -1577,9 +1577,9 @@\n \n             {/* Timezone/IP Mismatch */}\n             <div className=\"flex items-start space-x-4\">\n               <div className=\"flex items-center mt-1\">\n-                <Toggle checked={true} onChange={() => {}} />\n+                <Toggle checked={toggleTimezone} onChange={() => setToggleTimezone(v => !v)} />\n               </div>\n               <div className=\"flex-1\">\n                 <h4 className=\"font-medium text-gray-900 mb-2\">Timezone/IP Mismatch</h4>\n                 <p className=\"text-sm text-gray-500\">\n@@ -1590,9 +1590,9 @@\n \n             {/* Country-Based Blocking */}\n             <div className=\"flex items-start space-x-4\">\n               <div className=\"flex items-center mt-1\">\n-                <Toggle checked={false} onChange={() => {}} />\n+                <Toggle checked={toggleCountry} onChange={() => setToggleCountry(v => !v)} />\n               </div>\n               <div className=\"flex-1\">\n                 <h4 className=\"font-medium text-gray-900 mb-2\">Country-Based Blocking</h4>\n                 <p className=\"text-sm text-gray-500 mb-3\">Only allow traffic from selected countries (whitelist).</p>\n@@ -1689,9 +1689,9 @@\n           <div className=\"space-y-6\">\n             {/* Incognito/Ad Blocker Detected */}\n             <div className=\"flex items-start space-x-4\">\n               <div className=\"flex items-center mt-1\">\n-                <Toggle checked={true} onChange={() => {}} />\n+                <Toggle checked={toggleIncognito} onChange={() => setToggleIncognito(v => !v)} />\n               </div>\n               <div className=\"flex-1\">\n                 <h4 className=\"font-medium text-gray-900 mb-2\">Incognito/Ad Blocker Detected</h4>\n                 <p className=\"text-sm text-gray-500\">\n@@ -1702,9 +1702,9 @@\n \n             {/* JavaScript Disabled */}\n             <div className=\"flex items-start space-x-4\">\n               <div className=\"flex items-center mt-1\">\n-                <Toggle checked={true} onChange={() => {}} />\n+                <Toggle checked={toggleJS} onChange={() => setToggleJS(v => !v)} />\n               </div>\n               <div className=\"flex-1\">\n                 <h4 className=\"font-medium text-gray-900 mb-2\">JavaScript Disabled</h4>\n                 <p className=\"text-sm text-gray-500\">\n@@ -1715,9 +1715,9 @@\n \n             {/* Browser Language Fraud Detection */}\n             <div className=\"flex items-start space-x-4\">\n               <div className=\"flex items-center mt-1\">\n-                <Toggle checked={false} onChange={() => {}} />\n+                <Toggle checked={toggleLang} onChange={() => setToggleLang(v => !v)} />\n               </div>\n               <div className=\"flex-1\">\n                 <h4 className=\"font-medium text-gray-900 mb-2\">Browser Language Fraud Detection</h4>\n                 <p className=\"text-sm text-gray-500\">\n@@ -1728,9 +1728,9 @@\n \n             {/* Headless Browser Detected */}\n             <div className=\"flex items-start space-x-4\">\n               <div className=\"flex items-center mt-1\">\n-                <Toggle checked={true} onChange={() => {}} />\n+                <Toggle checked={toggleHeadless} onChange={() => setToggleHeadless(v => !v)} />\n               </div>\n               <div className=\"flex-1\">\n                 <h4 className=\"font-medium text-gray-900 mb-2\">Headless Browser Detected</h4>\n                 <p className=\"text-sm text-gray-500\">\n@@ -1759,9 +1759,9 @@\n           <div className=\"space-y-6\">\n             {/* One-Time Geolocation */}\n             <div className=\"flex items-start space-x-4\">\n               <div className=\"flex items-center mt-1\">\n-                <Toggle checked={false} onChange={() => {}} />\n+                <Toggle checked={toggleGeo} onChange={() => setToggleGeo(v => !v)} />\n               </div>\n               <div className=\"flex-1\">\n                 <h4 className=\"font-medium text-gray-900 mb-2\">One-Time Geolocation</h4>\n                 <p className=\"text-sm text-gray-500\">\n"
                },
                {
                    "date": 1750108207212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1471,11 +1471,8 @@\n                       className=\"px-4 py-2 border border-orange-300 text-orange-600 rounded-lg hover:bg-orange-50 transition-colors duration-200\"\n                     >\n                       New Rule\n                     </button>\n-                    <button className=\"px-4 py-2 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors duration-200\">\n-                      Update Threshold Rules\n-                    </button>\n                   </div>\n                 </div>\n               </div>\n             </div>\n"
                }
            ],
            "date": 1750105098373,
            "name": "Commit-0",
            "content": "\"use client\"\n\nimport type React from \"react\"\n\nimport Image from \"next/image\"\nimport { useState, useEffect, useRef } from \"react\"\nimport userActivityData from \"../../data/user-activity.json\"\n\n// 4. Replace all checkboxes with toggle switches in the Fraud Protection section\n// Create a new Toggle component function at the top of the file, after the other state variables:\n\nconst Toggle = ({ checked = false, onChange }: { checked?: boolean; onChange?: () => void }) => {\n  return (\n    <div\n      onClick={onChange}\n      className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 cursor-pointer ${\n        checked ? \"bg-blue-600\" : \"bg-gray-200\"\n      }`}\n    >\n      <span\n        className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n          checked ? \"translate-x-6\" : \"translate-x-1\"\n        }`}\n      />\n    </div>\n  )\n}\n\nexport default function HomePage() {\n  const [isProfileOpen, setIsProfileOpen] = useState(false)\n  const [selectedProfile, setSelectedProfile] = useState(0)\n  const [isCalendarOpen, setIsCalendarOpen] = useState(false)\n  const [activeTab, setActiveTab] = useState(\"Dashboard\")\n  const [hoveredSegment, setHoveredSegment] = useState<number | null>(null)\n  const [selectedDate, setSelectedDate] = useState(new Date())\n  const [startDate, setStartDate] = useState<Date | null>(null)\n  const [endDate, setEndDate] = useState<Date | null>(null)\n  const [chartRotation, setChartRotation] = useState(0)\n  const [chartScale, setChartScale] = useState(1)\n  const [isSidebarExpanded, setIsSidebarExpanded] = useState(false)\n  const [hoveredProfile, setHoveredProfile] = useState<number | null>(null)\n  const [activeMode, setActiveMode] = useState(\"All Users\")\n  const [currentPage, setCurrentPage] = useState(1)\n  const [itemsPerPage, setItemsPerPage] = useState(10)\n  const [fraudMode, setFraudMode] = useState(\"Monitor Mode\")\n  const [clickThresholdRules, setClickThresholdRules] = useState([\n    { id: 1, clicks: 4, time: 7, unit: \"days\" },\n    { id: 2, clicks: 6, time: 30, unit: \"days\" },\n    { id: 3, clicks: 3, time: 10, unit: \"minutes\" },\n  ])\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false)\n  const [editingProfile, setEditingProfile] = useState<number | null>(null)\n  const [editProfileName, setEditProfileName] = useState(\"\")\n  const [editProfileColor, setEditProfileColor] = useState(\"\")\n  const [isUserSettingsOpen, setIsUserSettingsOpen] = useState(false)\n  const [userFirstName, setUserFirstName] = useState(\"John Tristan\")\n  const [userLastName, setUserLastName] = useState(\"Ward\")\n  const profileDropdownRef = useRef<HTMLDivElement>(null)\n\n  // Add these new state variables after the other useState declarations (around line 40)\n  const [countries] = useState([\n    { code: \"US\", name: \"United States\" },\n    { code: \"CA\", name: \"Canada\" },\n    { code: \"UK\", name: \"United Kingdom\" },\n    { code: \"DE\", name: \"Germany\" },\n    { code: \"FR\", name: \"France\" },\n    { code: \"AU\", name: \"Australia\" },\n    { code: \"JP\", name: \"Japan\" },\n    { code: \"BR\", name: \"Brazil\" },\n    { code: \"IN\", name: \"India\" },\n    { code: \"IT\", name: \"Italy\" },\n    { code: \"ES\", name: \"Spain\" },\n    { code: \"MX\", name: \"Mexico\" },\n    { code: \"KR\", name: \"South Korea\" },\n    { code: \"NL\", name: \"Netherlands\" },\n    { code: \"SE\", name: \"Sweden\" },\n    { code: \"CH\", name: \"Switzerland\" },\n    { code: \"SG\", name: \"Singapore\" },\n    { code: \"ZA\", name: \"South Africa\" },\n    { code: \"AE\", name: \"United Arab Emirates\" },\n    { code: \"AR\", name: \"Argentina\" },\n  ])\n  const [selectedCountries, setSelectedCountries] = useState<{ code: string; name: string }[]>([\n    { code: \"US\", name: \"United States\" },\n    { code: \"CA\", name: \"Canada\" },\n    { code: \"UK\", name: \"United Kingdom\" },\n  ])\n\n  // Add animation effect for the chart\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setChartRotation((prev) => (prev + 1) % 360)\n    }, 100)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (profileDropdownRef.current && !profileDropdownRef.current.contains(event.target as Node)) {\n        setIsProfileOpen(false)\n      }\n    }\n\n    if (isProfileOpen) {\n      document.addEventListener(\"mousedown\", handleClickOutside)\n    }\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside)\n    }\n  }, [isProfileOpen])\n\n  const subProfiles = [\n    {\n      id: 0,\n      name: \"JT\",\n      color: \"bg-blue-500\",\n      initials: \"JT\",\n      details: {\n        adAccount: \"Meta Ads Account #1\",\n        campaign: \"Summer Campaign 2024\",\n        adset: \"Targeting 18-35\",\n        pixel: \"Pixel ID: 123456789\",\n        activatedTime: \"Jan 15, 2024 10:30 AM\",\n        protectStatus: \"Active\",\n      },\n    },\n    {\n      id: 1,\n      name: \"MA\",\n      color: \"bg-orange-500\",\n      initials: \"MA\",\n      details: {\n        adAccount: \"Meta Ads Account #2\",\n        campaign: \"Winter Campaign 2024\",\n        adset: \"Targeting 25-45\",\n        pixel: \"Pixel ID: 987654321\",\n        activatedTime: \"Dec 20, 2023 2:15 PM\",\n        protectStatus: \"Paused\",\n      },\n    },\n  ]\n\n  const colorOptions = [\n    { name: \"Blue\", value: \"bg-blue-500\", class: \"bg-blue-500\" },\n    { name: \"Purple\", value: \"bg-purple-500\", class: \"bg-purple-500\" },\n    { name: \"Teal\", value: \"bg-teal-500\", class: \"bg-teal-500\" },\n    { name: \"Green\", value: \"bg-green-500\", class: \"bg-green-500\" },\n    { name: \"Light Blue\", value: \"bg-sky-500\", class: \"bg-sky-500\" },\n    { name: \"Red\", value: \"bg-red-500\", class: \"bg-red-500\" },\n    { name: \"Orange\", value: \"bg-orange-500\", class: \"bg-orange-500\" },\n    { name: \"Cyan\", value: \"bg-cyan-500\", class: \"bg-cyan-500\" },\n  ]\n\n  const tabs = [\"Dashboard\", \"User Activity\", \"Fraud Protection\", \"Integrations\", \"Refund Report\"]\n  const modes = [\"All Users\", \"Safe Mode\", \"Monitor Mode\", \"Aggressive Mode\"]\n\n  const statsCards = [\n    {\n      title: \"Total Clicks\",\n      value: \"105\",\n      icon: (\n        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\n          />\n        </svg>\n      ),\n      color: \"text-blue-500\",\n    },\n    {\n      title: \"Fraud Clicks\",\n      value: \"80\",\n      icon: (\n        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n          />\n        </svg>\n      ),\n      color: \"text-green-500\",\n    },\n    // For \"Total Unique Visitors\", replace the icon with:\n    {\n      title: \"Total Unique Visitors\",\n      value: \"60\",\n      icon: (\n        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\"\n          />\n        </svg>\n      ),\n      color: \"text-yellow-500\",\n    },\n    // For \"Total Block Ip\", replace the icon with:\n    {\n      title: \"Total Block Ip\",\n      value: \"50\",\n      icon: (\n        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\"\n          />\n        </svg>\n      ),\n      color: \"text-red-500\",\n    },\n    {\n      title: \"VPN & Location Fraud\",\n      value: \"105\",\n      icon: (\n        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9v-9m0-9v9m0 9c-5 0-9-4-9-9s4-9 9-9\"\n          />\n        </svg>\n      ),\n      color: \"text-purple-500\",\n    },\n  ]\n\n  const bottomStats = [\n    {\n      title: \"Browser Fraud\",\n      value: \"25\",\n      icon: (\n        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\n          />\n        </svg>\n      ),\n      color: \"text-yellow-500\",\n    },\n    {\n      title: \"Suspicious Behavior\",\n      value: \"30\",\n      icon: (\n        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\n          />\n        </svg>\n      ),\n      color: \"text-blue-500\",\n    },\n    {\n      title: \"Block Devices\",\n      value: \"30\",\n      icon: (\n        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z\"\n          />\n        </svg>\n      ),\n      color: \"text-blue-500\",\n    },\n    {\n      title: \"Fraud by Desktop\",\n      value: \"30%\",\n      progress: 30,\n      icon: (\n        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\n          />\n        </svg>\n      ),\n      color: \"text-orange-500\",\n    },\n    {\n      title: \"Fraud by Mobile\",\n      value: \"5%\",\n      progress: 5,\n      icon: (\n        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z\"\n          />\n        </svg>\n      ),\n      color: \"text-blue-500\",\n    },\n  ]\n\n  // Chart data from Estimated Savings Report\n  const chartData = [\n    { name: \"Vpn\", value: 30, color: \"#3b82f6\", percentage: 37.5 },\n    { name: \"Suspicious Behavior\", value: 15, color: \"#10b981\", percentage: 18.75 },\n    { name: \"Browser Fraud\", value: 35, color: \"#f97316\", percentage: 43.75 },\n  ]\n\n  const totalSavings = chartData.reduce((sum, item) => sum + item.value, 0)\n\n  // Calculate stroke-dasharray for each segment\n  const circumference = 2 * Math.PI * 40\n  let cumulativePercentage = 0\n\n  // Calendar helper functions\n  const getDaysInMonth = (date: Date) => {\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate()\n  }\n\n  const getFirstDayOfMonth = (date: Date) => {\n    return new Date(date.getFullYear(), date.getMonth(), 1).getDay()\n  }\n\n  const handleDateClick = (day: number) => {\n    const clickedDate = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), day)\n\n    if (!startDate || (startDate && endDate)) {\n      setStartDate(clickedDate)\n      setEndDate(null)\n    } else if (startDate && !endDate) {\n      if (clickedDate >= startDate) {\n        setEndDate(clickedDate)\n      } else {\n        setStartDate(clickedDate)\n        setEndDate(null)\n      }\n    }\n  }\n\n  const isDateInRange = (day: number) => {\n    if (!startDate) return false\n    const date = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), day)\n    if (!endDate) return date.getTime() === startDate.getTime()\n    return date >= startDate && date <= endDate\n  }\n\n  const isDateStart = (day: number) => {\n    if (!startDate) return false\n    const date = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), day)\n    return date.getTime() === startDate.getTime()\n  }\n\n  const isDateEnd = (day: number) => {\n    if (!endDate) return false\n    const date = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), day)\n    return date.getTime() === endDate.getTime()\n  }\n\n  const userData = userActivityData.users\n  const totalEntries = userActivityData.totalEntries\n  const startEntry = (currentPage - 1) * itemsPerPage + 1\n  const endEntry = Math.min(currentPage * itemsPerPage, totalEntries)\n  const totalPages = Math.ceil(totalEntries / itemsPerPage)\n\n  const addClickThresholdRule = () => {\n    const newRule = {\n      id: Date.now(),\n      clicks: 1,\n      time: 1,\n      unit: \"days\",\n    }\n    setClickThresholdRules([...clickThresholdRules, newRule])\n  }\n\n  const removeClickThresholdRule = (id: number) => {\n    setClickThresholdRules(clickThresholdRules.filter((rule) => rule.id !== id))\n  }\n\n  const updateClickThresholdRule = (id: number, field: string, value: any) => {\n    setClickThresholdRules(clickThresholdRules.map((rule) => (rule.id === id ? { ...rule, [field]: value } : rule)))\n  }\n\n  const refundData = {\n    weeks: [\n      {\n        id: 1,\n        week: \"Week 10\",\n        startDate: \"14 Jan 2024\",\n        startTime: \"10:00 Eastern\",\n        endDate: \"14 Jan 2024\",\n        endTime: \"10:00 Eastern\",\n        refundAmount: \"$150\",\n        link: \"https://example.com/refund/week10\",\n      },\n      {\n        id: 2,\n        week: \"Week 9\",\n        startDate: \"14 Jan 2024\",\n        startTime: \"10:00 Eastern\",\n        endDate: \"14 Jan 2024\",\n        endTime: \"10:00 Eastern\",\n        refundAmount: \"$150\",\n        link: \"https://example.com/refund/week9\",\n      },\n      {\n        id: 3,\n        week: \"Week 8\",\n        startDate: \"14 Jan 2024\",\n        startTime: \"10:00 Eastern\",\n        endDate: \"14 Jan 2024\",\n        endTime: \"10:00 Eastern\",\n        refundAmount: \"$150\",\n        link: \"https://example.com/refund/week8\",\n      },\n      {\n        id: 4,\n        week: \"Week 7\",\n        startDate: \"14 Jan 2024\",\n        startTime: \"10:00 Eastern\",\n        endDate: \"14 Jan 2024\",\n        endTime: \"10:00 Eastern\",\n        refundAmount: \"$150\",\n        link: \"https://example.com/refund/week7\",\n      },\n      {\n        id: 5,\n        week: \"Week 6\",\n        startDate: \"14 Jan 2024\",\n        startTime: \"10:00 Eastern\",\n        endDate: \"14 Jan 2024\",\n        endTime: \"10:00 Eastern\",\n        refundAmount: \"$150\",\n        link: \"https://example.com/refund/week6\",\n      },\n      {\n        id: 6,\n        week: \"Week 5\",\n        startDate: \"14 Jan 2024\",\n        startTime: \"10:00 Eastern\",\n        endDate: \"14 Jan 2024\",\n        endTime: \"10:00 Eastern\",\n        refundAmount: \"$150\",\n        link: \"https://example.com/refund/week5\",\n      },\n      {\n        id: 7,\n        week: \"Week 4\",\n        startDate: \"14 Jan 2024\",\n        startTime: \"10:00 Eastern\",\n        endDate: \"14 Jan 2024\",\n        endTime: \"10:00 Eastern\",\n        refundAmount: \"$150\",\n        link: \"https://example.com/refund/week4\",\n      },\n      {\n        id: 8,\n        week: \"Week 3\",\n        startDate: \"14 Jan 2024\",\n        startTime: \"10:00 Eastern\",\n        endDate: \"14 Jan 2024\",\n        endTime: \"10:00 Eastern\",\n        refundAmount: \"$150\",\n        link: \"https://example.com/refund/week3\",\n      },\n      {\n        id: 9,\n        week: \"Week 2\",\n        startDate: \"14 Jan 2024\",\n        startTime: \"10:00 Eastern\",\n        endDate: \"14 Jan 2024\",\n        endTime: \"10:00 Eastern\",\n        refundAmount: \"$150\",\n        link: \"https://example.com/refund/week2\",\n      },\n      {\n        id: 10,\n        week: \"Week 1\",\n        startDate: \"14 Jan 2024\",\n        startTime: \"10:00 Eastern\",\n        endDate: \"14 Jan 2024\",\n        endTime: \"10:00 Eastern\",\n        refundAmount: \"$150\",\n        link: \"https://example.com/refund/week1\",\n      },\n    ],\n  }\n\n  const openEditModal = (profileIndex: number) => {\n    setEditingProfile(profileIndex)\n    setEditProfileName(subProfiles[profileIndex].name)\n    setEditProfileColor(subProfiles[profileIndex].color)\n    setIsEditModalOpen(true)\n  }\n\n  const closeEditModal = () => {\n    setIsEditModalOpen(false)\n    setEditingProfile(null)\n    setEditProfileName(\"\")\n    setEditProfileColor(\"\")\n  }\n\n  const saveProfileChanges = () => {\n    if (editingProfile !== null) {\n      // Update the profile (in a real app, this would update the backend)\n      const updatedProfiles = [...subProfiles]\n      updatedProfiles[editingProfile] = {\n        ...updatedProfiles[editingProfile],\n        name: editProfileName,\n        color: editProfileColor,\n        initials: editProfileName\n          .split(\" \")\n          .map((n) => n[0])\n          .join(\"\")\n          .toUpperCase()\n          .slice(0, 2),\n      }\n      // In a real app, you would update the state here\n      console.log(\"Profile updated:\", updatedProfiles[editingProfile])\n    }\n    closeEditModal()\n  }\n\n  const deleteProfile = (profileIndex: number) => {\n    if (confirm(\"Are you sure you want to delete this profile?\")) {\n      // In a real app, this would delete from backend\n      console.log(\"Profile deleted:\", subProfiles[profileIndex])\n      if (selectedProfile === profileIndex) {\n        setSelectedProfile(0)\n      }\n    }\n  }\n\n  // Add these handler functions before the renderFraudProtection function\n  // 2. Update the handleCountrySelect function to handle toggling selection\n  const handleCountrySelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const selectedCode = e.target.value\n    if (!selectedCode) return\n\n    const countryToAdd = countries.find((country) => country.code === selectedCode)\n    if (countryToAdd && !selectedCountries.some((country) => country.code === selectedCode)) {\n      setSelectedCountries([...selectedCountries, countryToAdd])\n    }\n\n    // Reset the select element\n    e.target.value = \"\"\n  }\n\n  const handleRemoveCountry = (codeToRemove: string) => {\n    setSelectedCountries(selectedCountries.filter((country) => country.code !== codeToRemove))\n  }\n\n  const handleSelectAllCountries = () => {\n    setSelectedCountries([...countries])\n  }\n\n  const handleDeselectAllCountries = () => {\n    setSelectedCountries([])\n  }\n\n  const renderDashboard = () => (\n    <div className=\"p-6 space-y-6\">\n      {/* Filters */}\n      <div className=\"bg-white rounded-lg p-6 shadow-sm hover:shadow-lg hover:scale-[1.02] transition-all duration-300\">\n        <div className=\"grid grid-cols-1 md:grid-cols-6 gap-4 items-end\">\n          <div className=\"md:col-span-1\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Ad Account</label>\n            <div className=\"relative\">\n              <select className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent appearance-none bg-white\">\n                <option>Select</option>\n                <option>Account 1</option>\n                <option>Account 2</option>\n              </select>\n              <svg\n                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n              </svg>\n            </div>\n          </div>\n\n          <div className=\"md:col-span-1\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Campaign</label>\n            <div className=\"relative\">\n              <select className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent appearance-none bg-white\">\n                <option>Select</option>\n                <option>Campaign 1</option>\n                <option>Campaign 2</option>\n              </select>\n              <svg\n                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n              </svg>\n            </div>\n          </div>\n\n          <div className=\"md:col-span-1\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Adset</label>\n            <div className=\"relative\">\n              <select className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent appearance-none bg-white\">\n                <option>Select</option>\n                <option>Adset 1</option>\n                <option>Adset 2</option>\n              </select>\n              <svg\n                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n              </svg>\n            </div>\n          </div>\n\n          <div className=\"md:col-span-1\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Pixel</label>\n            <div className=\"relative\">\n              <select className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent appearance-none bg-white\">\n                <option>Select</option>\n                <option>Pixel 1</option>\n                <option>Pixel 2</option>\n              </select>\n              <svg\n                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n              </svg>\n            </div>\n          </div>\n\n          <div className=\"md:col-span-1\">\n            <button className=\"w-full bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-lg font-medium transition-colors duration-200\">\n              Protect\n            </button>\n          </div>\n\n          <div className=\"md:col-span-1\">\n            <button\n              onClick={() => setIsCalendarOpen(true)}\n              className=\"w-full flex items-center justify-center space-x-2 px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors duration-200\"\n            >\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                />\n              </svg>\n              <span className=\"truncate\">\n                {startDate && endDate\n                  ? `${startDate.toLocaleDateString()} — ${endDate.toLocaleDateString()}`\n                  : \"Feb 10, 2023 — Feb 12, 2023\"}\n              </span>\n              <svg className=\"w-4 h-4 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Stats Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-6\">\n        {statsCards.map((stat, index) => (\n          <div\n            key={index}\n            className=\"bg-white rounded-lg shadow-sm p-6 h-36 flex flex-col justify-between hover:scale-105 transition-transform duration-200 group\"\n          >\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex-1\">\n                <p className=\"text-sm font-medium text-gray-600 mb-2\">{stat.title}</p>\n                <p className=\"text-3xl font-bold text-gray-900\">{stat.value}</p>\n              </div>\n              <div className={`${stat.color} ml-4 transition-transform duration-300 group-hover:scale-110`}>\n                {stat.title === \"Total Clicks\" && (\n                  <svg\n                    className=\"w-6 h-6 group-hover:animate-pulse\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n                    />\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\n                    />\n                  </svg>\n                )}\n                {stat.title === \"Fraud Clicks\" && (\n                  <svg\n                    className=\"w-6 h-6 group-hover:animate-pulse\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    />\n                  </svg>\n                )}\n                {stat.title === \"Total Unique Visitors\" && (\n                  <svg\n                    className=\"w-6 h-6 group-hover:animate-pulse\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z\"\n                    />\n                  </svg>\n                )}\n                {stat.title === \"Total Block Ip\" && (\n                  <svg\n                    className=\"w-6 h-6 group-hover:animate-spin\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728L5.636 5.636m12.728 12.728L5.636 5.636\"\n                    />\n                  </svg>\n                )}\n                {stat.title === \"VPN & Location Fraud\" && (\n                  <svg\n                    className=\"w-6 h-6 group-hover:animate-pulse\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9v-9m0-9v9m0 9c-5 0-9-4-9-9s4-9 9-9\"\n                    />\n                  </svg>\n                )}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Middle Stats */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-6 gap-6\">\n        {bottomStats.map((stat, index) => (\n          <div\n            key={index}\n            className=\"bg-white rounded-lg shadow-sm p-6 h-36 flex flex-col justify-between hover:scale-105 transition-transform duration-200\"\n          >\n            <div className=\"flex items-center justify-between mb-2\">\n              <div className=\"flex-1\">\n                <p className=\"text-sm font-medium text-gray-600 mb-2\">{stat.title}</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{stat.value}</p>\n              </div>\n              <div className={`${stat.color} ml-4`}>{stat.icon}</div>\n            </div>\n            {stat.progress && (\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div\n                  className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n                  style={{ width: `${stat.progress}%` }}\n                ></div>\n              </div>\n            )}\n          </div>\n        ))}\n\n        {/* Threat Level */}\n        <div className=\"bg-white rounded-lg shadow-sm p-6 h-36 hover:scale-105 transition-transform duration-200\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <p className=\"text-sm font-medium text-gray-600\">Threat Level</p>\n            <svg className=\"w-6 h-6 text-purple-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\"\n              />\n            </svg>\n          </div>\n          <div className=\"flex flex-col justify-between h-16\">\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-sm text-gray-600\">Low</span>\n              <div className=\"w-20 bg-gray-200 rounded-full h-2\">\n                <div className=\"bg-green-500 h-2 rounded-full w-3/4\"></div>\n              </div>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-sm text-gray-600\">Mid</span>\n              <div className=\"w-20 bg-gray-200 rounded-full h-2\">\n                <div className=\"bg-orange-500 h-2 rounded-full w-1/2\"></div>\n              </div>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-sm text-gray-600\">High</span>\n              <div className=\"w-20 bg-gray-200 rounded-full h-2\">\n                <div className=\"bg-red-500 h-2 rounded-full w-1/4\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Bottom Row - Chart and Savings Report */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Interactive Donut Chart */}\n        <div className=\"bg-white rounded-lg shadow-sm p-6 overflow-hidden hover:scale-105 transition-transform duration-200\">\n          <div className=\"relative w-64 h-64 mx-auto\">\n            {/* Background glow effects */}\n            <div\n              className=\"absolute inset-0 bg-blue-500/10 rounded-full blur-xl\"\n              style={{\n                transform: `scale(${1 + Math.sin(chartRotation * 0.05) * 0.05})`,\n                transition: \"transform 0.5s ease-in-out\",\n              }}\n            ></div>\n            <div\n              className=\"absolute inset-0 bg-green-500/10 rounded-full blur-xl\"\n              style={{\n                transform: `scale(${1 + Math.sin(chartRotation * 0.03 + 2) * 0.05})`,\n                transition: \"transform 0.5s ease-in-out\",\n              }}\n            ></div>\n            <div\n              className=\"absolute inset-0 bg-orange-500/10 rounded-full blur-xl\"\n              style={{\n                transform: `scale(${1 + Math.sin(chartRotation * 0.04 + 4) * 0.05})`,\n                transition: \"transform 0.5s ease-in-out\",\n              }}\n            ></div>\n\n            {/* Main chart */}\n            <svg\n              className=\"w-full h-full transform\"\n              style={{\n                transform: `rotate(${-90 + (hoveredSegment !== null ? chartRotation * 0.1 : 0)}deg) scale(${\n                  hoveredSegment !== null ? 1.05 : 1\n                })`,\n                transition: \"transform 0.3s ease-in-out\",\n              }}\n              viewBox=\"0 0 100 100\"\n              onMouseEnter={() => setChartScale(1.05)}\n              onMouseLeave={() => setChartScale(1)}\n            >\n              <defs>\n                <filter id=\"glow\" x=\"-20%\" y=\"-20%\" width=\"140%\" height=\"140%\">\n                  <feGaussianBlur stdDeviation=\"2\" result=\"blur\" />\n                  <feComposite in=\"SourceGraphic\" in2=\"blur\" operator=\"over\" />\n                </filter>\n              </defs>\n\n              <circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"#f3f4f6\" strokeWidth=\"8\" fill=\"none\" />\n              {chartData.map((segment, index) => {\n                const strokeDasharray = `${(segment.value / totalSavings) * circumference} ${circumference}`\n                const strokeDashoffset = (-cumulativePercentage * circumference) / 100\n                cumulativePercentage += (segment.value / totalSavings) * 100\n\n                return (\n                  <circle\n                    key={index}\n                    cx=\"50\"\n                    cy=\"50\"\n                    r=\"40\"\n                    stroke={segment.color}\n                    strokeWidth={hoveredSegment === index ? \"12\" : \"8\"}\n                    fill=\"none\"\n                    strokeDasharray={strokeDasharray}\n                    strokeDashoffset={strokeDashoffset}\n                    strokeLinecap=\"round\"\n                    filter={hoveredSegment === index ? \"url(#glow)\" : \"\"}\n                    className=\"transition-all duration-300 cursor-pointer\"\n                    onMouseEnter={() => setHoveredSegment(index)}\n                    onMouseLeave={() => setHoveredSegment(null)}\n                    style={{\n                      transition: \"all 0.3s ease-in-out\",\n                      transform: hoveredSegment === index ? \"scale(1.02)\" : \"scale(1)\",\n                      transformOrigin: \"center\",\n                    }}\n                  />\n                )\n              })}\n\n              {/* Animated particles */}\n              {chartData.map((segment, index) => {\n                const angle = (cumulativePercentage - segment.percentage / 2) * 3.6 * (Math.PI / 180)\n                const x = 50 + 40 * Math.cos(angle)\n                const y = 50 + 40 * Math.sin(angle)\n\n                return (\n                  <circle\n                    key={`particle-${index}`}\n                    cx={x}\n                    cy={y}\n                    r={hoveredSegment === index ? 2 : 1}\n                    fill={segment.color}\n                    className=\"transition-all duration-300\"\n                    style={{\n                      opacity: hoveredSegment === index ? 1 : 0.7,\n                      filter: hoveredSegment === index ? \"url(#glow)\" : \"\",\n                      animation: \"pulse 2s infinite\",\n                    }}\n                  />\n                )\n              })}\n            </svg>\n\n            {/* Center content */}\n            <div\n              className=\"absolute inset-0 flex flex-col items-center justify-center bg-white/80 rounded-full\"\n              style={{\n                width: \"65%\",\n                height: \"65%\",\n                left: \"17.5%\",\n                top: \"17.5%\",\n                backdropFilter: \"blur(5px)\",\n                boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.05), 0 1px 3px rgba(0, 0, 0, 0.1)\",\n                transform: `scale(${hoveredSegment !== null ? 1.1 : 1})`,\n                transition: \"transform 0.3s ease-in-out\",\n              }}\n            >\n              <p className=\"text-lg font-semibold text-gray-900\">Ad Spend Saved</p>\n              <p\n                className=\"text-3xl font-bold text-blue-600\"\n                style={{\n                  textShadow: hoveredSegment !== null ? \"0 0 10px rgba(59, 130, 246, 0.3)\" : \"none\",\n                }}\n              >\n                ${totalSavings}\n              </p>\n              {hoveredSegment !== null && (\n                <p\n                  className=\"text-sm text-gray-600 mt-1 animate-fadeIn px-2 text-center max-w-full overflow-hidden\"\n                  style={{\n                    color: chartData[hoveredSegment].color,\n                    fontWeight: \"500\",\n                  }}\n                >\n                  {chartData[hoveredSegment].name}: ${chartData[hoveredSegment].value}\n                </p>\n              )}\n            </div>\n          </div>\n\n          {/* Legend */}\n          <div className=\"flex justify-center mt-4 space-x-6\">\n            {chartData.map((item, index) => (\n              <div\n                key={index}\n                className=\"flex items-center space-x-2 cursor-pointer transition-all duration-200\"\n                onMouseEnter={() => setHoveredSegment(index)}\n                onMouseLeave={() => setHoveredSegment(null)}\n                style={{\n                  transform: hoveredSegment === index ? \"scale(1.1)\" : \"scale(1)\",\n                }}\n              >\n                <div\n                  className=\"w-3 h-3 rounded-full\"\n                  style={{\n                    backgroundColor: item.color,\n                    boxShadow: hoveredSegment === index ? `0 0 8px ${item.color}` : \"none\",\n                  }}\n                ></div>\n                <span\n                  className=\"text-xs font-medium\"\n                  style={{\n                    color: hoveredSegment === index ? item.color : \"#6B7280\",\n                  }}\n                >\n                  {item.name}\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Estimated Savings Report */}\n        <div className=\"bg-white rounded-lg shadow-sm hover:scale-105 transition-transform duration-200\">\n          <div className=\"p-6 border-b border-gray-200\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Estimated Savings Report</h3>\n          </div>\n          <div className=\"p-6 space-y-6\">\n            {chartData.map((item, index) => (\n              <div\n                key={index}\n                className={`flex items-center justify-between p-3 rounded-lg transition-all duration-300 cursor-pointer ${\n                  hoveredSegment === index ? \"bg-gray-50 scale-105 shadow-md\" : \"hover:bg-gray-50 hover:shadow-sm\"\n                }`}\n                onMouseEnter={() => setHoveredSegment(index)}\n                onMouseLeave={() => setHoveredSegment(null)}\n              >\n                <div className=\"flex items-center space-x-3\">\n                  <div\n                    className=\"w-4 h-4 rounded-full transition-all duration-300\"\n                    style={{\n                      backgroundColor: item.color,\n                      transform: hoveredSegment === index ? \"scale(1.3)\" : \"scale(1)\",\n                      boxShadow: hoveredSegment === index ? `0 0 10px ${item.color}` : \"none\",\n                    }}\n                  ></div>\n                  <span\n                    className={`text-sm font-medium transition-all duration-300 ${\n                      hoveredSegment === index ? \"text-gray-900\" : \"text-gray-600\"\n                    }`}\n                  >\n                    {item.name}\n                  </span>\n                </div>\n                <div className=\"flex items-center\">\n                  <span\n                    className={`font-bold text-lg transition-all duration-300 ${\n                      hoveredSegment === index ? \"text-blue-600 scale-110\" : \"text-gray-900\"\n                    }`}\n                  >\n                    ${item.value}\n                  </span>\n                  <div\n                    className={`ml-2 w-16 bg-gray-200 rounded-full h-1 transition-all duration-300 ${\n                      hoveredSegment === index ? \"opacity-100\" : \"opacity-0\"\n                    }`}\n                  >\n                    <div\n                      className=\"h-1 rounded-full\"\n                      style={{\n                        width: `${item.percentage}%`,\n                        backgroundColor: item.color,\n                      }}\n                    ></div>\n                  </div>\n                </div>\n              </div>\n            ))}\n\n            <div className=\"mt-8 pt-4 border-t border-gray-100\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm font-medium text-gray-600\">Total Savings</span>\n                <span className=\"font-bold text-xl text-blue-600\">${totalSavings}</span>\n              </div>\n              <div className=\"mt-2 w-full bg-gray-200 rounded-full h-1.5\">\n                <div className=\"bg-blue-600 h-1.5 rounded-full w-full\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n\n  const renderUserActivity = () => (\n    <div className=\"p-6\">\n      {/* Header Controls */}\n      <div className=\"bg-white rounded-lg p-6 shadow-sm mb-6\">\n        <div className=\"flex flex-wrap items-center justify-between gap-4\">\n          {/* Mode Filters */}\n          <div className=\"flex items-center space-x-2\">\n            {modes.map((mode) => (\n              <button\n                key={mode}\n                onClick={() => setActiveMode(mode)}\n                className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors duration-200 ${\n                  activeMode === mode\n                    ? \"bg-blue-100 text-blue-700 border border-blue-200\"\n                    : \"bg-gray-100 text-gray-600 hover:bg-gray-200\"\n                }`}\n              >\n                {mode}\n              </button>\n            ))}\n          </div>\n\n          {/* Stats and Date Range */}\n          <div className=\"flex items-center space-x-4\">\n            <span className=\"text-sm font-medium text-gray-600\">10/10,000 Clicks</span>\n            <button\n              onClick={() => setIsCalendarOpen(true)}\n              className=\"flex items-center space-x-2 px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors duration-200\"\n            >\n              <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                />\n              </svg>\n              <span className=\"text-sm text-gray-600\">\n                {startDate && endDate\n                  ? `${startDate.toLocaleDateString()} — ${endDate.toLocaleDateString()}`\n                  : \"Feb 10, 2023 — Feb 12, 2023\"}\n              </span>\n              <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Data Table */}\n      <div className=\"bg-white rounded-lg shadow-sm overflow-hidden\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full\">\n            <thead className=\"bg-gray-50 border-b border-gray-200\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">User</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  User ID\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  IP Address\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Clicks\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Last Click Timestamp\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Fraud Reason\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Mode</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Status\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Action\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {userData.map((user) => (\n                <tr key={user.id} className=\"hover:bg-gray-50 transition-colors duration-150\">\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{user.id}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{user.userId}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{user.ipAddress}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{user.clicks}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    <div className=\"whitespace-pre-line\">{user.timestamp}</div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {user.fraudReason && <span className=\"text-red-600 font-medium\">{user.fraudReason}</span>}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${user.modeColor}`}>\n                      {user.mode}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className={`text-sm font-medium ${user.statusColor}`}>{user.status}</span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <button className=\"text-gray-400 hover:text-gray-600 transition-colors duration-200\">\n                      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth={2}\n                          d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n                        />\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth={2}\n                          d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\n                        />\n                      </svg>\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n\n        {/* Pagination */}\n        <div className=\"bg-white px-6 py-3 border-t border-gray-200 flex items-center justify-between\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-700\">Showing</span>\n            <select\n              value={itemsPerPage}\n              onChange={(e) => setItemsPerPage(Number(e.target.value))}\n              className=\"border border-gray-300 rounded px-2 py-1 text-sm\"\n            >\n              <option value={10}>10</option>\n              <option value={25}>25</option>\n              <option value={50}>50</option>\n            </select>\n            <span className=\"text-sm text-gray-700\">\n              to {endEntry} out of {totalEntries} entries\n            </span>\n          </div>\n\n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\n              disabled={currentPage === 1}\n              className=\"px-3 py-1 border border-gray-300 rounded text-sm hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n              </svg>\n            </button>\n\n            {[...Array(Math.min(5, totalPages))].map((_, index) => {\n              const pageNumber = index + 1\n              return (\n                <button\n                  key={pageNumber}\n                  onClick={() => setCurrentPage(pageNumber)}\n                  className={`px-3 py-1 border rounded text-sm transition-colors duration-200 ${\n                    currentPage === pageNumber\n                      ? \"bg-blue-500 text-white border-blue-500\"\n                      : \"border-gray-300 hover:bg-gray-50\"\n                  }`}\n                >\n                  {pageNumber}\n                </button>\n              )\n            })}\n\n            <button\n              onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}\n              disabled={currentPage === totalPages}\n              className=\"px-3 py-1 border border-gray-300 rounded text-sm hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n\n  const renderFraudProtection = () => (\n    <div className=\"p-6 space-y-6\">\n      {/* Header */}\n      <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n        <div className=\"flex items-center space-x-3 mb-4\">\n          <svg className=\"w-6 h-6 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\"\n            />\n          </svg>\n          <h2 className=\"text-xl font-semibold text-gray-900\">Fraud Control Settings</h2>\n        </div>\n        <p className=\"text-gray-600\">\n          These rules run continuously and apply to all sessions. You can enable or customize them to automatically\n          detect and block fraudulent behavior.\n        </p>\n\n        {/* Mode Selection */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mt-6\">\n          <button\n            onClick={() => setFraudMode(\"Monitor Mode\")}\n            className={`p-4 rounded-lg border-2 transition-all duration-200 ${\n              fraudMode === \"Monitor Mode\"\n                ? \"border-orange-300 bg-orange-50\"\n                : \"border-gray-200 bg-white hover:border-orange-200\"\n            }`}\n          >\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-10 h-10 bg-orange-100 rounded-lg flex items-center justify-center\">\n                <svg className=\"w-5 h-5 text-orange-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                  />\n                </svg>\n              </div>\n              <div className=\"text-left\">\n                <h3 className=\"font-semibold text-gray-900\">Monitor Mode</h3>\n                <p className=\"text-sm text-gray-600\">\n                  Detects fraud without auto-blocking; requires manual review to block.\n                </p>\n              </div>\n            </div>\n          </button>\n\n          <button\n            onClick={() => setFraudMode(\"Aggressive Mode\")}\n            className={`p-4 rounded-lg border-2 transition-all duration-200 ${\n              fraudMode === \"Aggressive Mode\"\n                ? \"border-red-300 bg-red-50\"\n                : \"border-gray-200 bg-white hover:border-red-200\"\n            }`}\n          >\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-10 h-10 bg-red-100 rounded-lg flex items-center justify-center\">\n                <svg className=\"w-5 h-5 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\n                  />\n                </svg>\n              </div>\n              <div className=\"text-left\">\n                <h3 className=\"font-semibold text-gray-900\">Aggressive Mode</h3>\n                <p className=\"text-sm text-gray-600\">Instantly detects and automatically blocks fraudulent traffic.</p>\n              </div>\n            </div>\n          </button>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        {/* Suspicious Behavior */}\n        <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n          <div className=\"flex items-center space-x-3 mb-6\">\n            <svg className=\"w-6 h-6 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\n              />\n            </svg>\n            <h3 className=\"text-lg font-semibold text-gray-900\">Suspicious Behavior</h3>\n          </div>\n\n          <div className=\"space-y-6\">\n            {/* Bounce Rate */}\n            <div className=\"flex items-start space-x-4\">\n              <div className=\"flex items-center mt-1\">\n                <Toggle checked={true} onChange={() => {}} />\n              </div>\n              <div className=\"flex-1\">\n                <h4 className=\"font-medium text-gray-900 mb-2\">Bounce Rate</h4>\n                <div className=\"flex items-center space-x-4 mb-2\">\n                  <input\n                    type=\"number\"\n                    defaultValue={2}\n                    className=\"w-20 px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                  <span className=\"text-gray-600\">Minimum session duration (seconds)</span>\n                </div>\n                <p className=\"text-sm text-gray-500\">\n                  Flags users who leave the site within a short time (below minimum session duration).\n                </p>\n              </div>\n            </div>\n\n            {/* Click Fraud Threshold */}\n            <div className=\"flex items-start space-x-4\">\n              <div className=\"flex items-center mt-1\">\n                <Toggle checked={true} onChange={() => {}} />\n              </div>\n              <div className=\"flex-1\">\n                <h4 className=\"font-medium text-gray-900 mb-2\">Click Fraud Threshold</h4>\n                <p className=\"text-sm text-gray-500 mb-4\">\n                  Limits high-frequency visits from the same user to prevent repeated click abuse.\n                </p>\n\n                <div className=\"space-y-3 border border-gray-200 rounded-lg p-4\">\n                  {clickThresholdRules.map((rule) => (\n                    <div key={rule.id} className=\"flex items-center space-x-3\">\n                      <span className=\"text-sm text-gray-600\">Allow up to</span>\n                      <input\n                        type=\"number\"\n                        value={rule.clicks}\n                        onChange={(e) => updateClickThresholdRule(rule.id, \"clicks\", Number.parseInt(e.target.value))}\n                        className=\"w-16 px-2 py-1 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      />\n                      <span className=\"text-sm text-gray-600\">ad clicks within</span>\n                      <input\n                        type=\"number\"\n                        value={rule.time}\n                        onChange={(e) => updateClickThresholdRule(rule.id, \"time\", Number.parseInt(e.target.value))}\n                        className=\"w-16 px-2 py-1 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      />\n                      <select\n                        value={rule.unit}\n                        onChange={(e) => updateClickThresholdRule(rule.id, \"unit\", e.target.value)}\n                        className=\"px-3 py-1 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      >\n                        <option value=\"minutes\">minutes</option>\n                        <option value=\"hours\">hours</option>\n                        <option value=\"days\">days</option>\n                        <option value=\"months\">months</option>\n                      </select>\n                      <button\n                        onClick={() => removeClickThresholdRule(rule.id)}\n                        className=\"p-1 text-red-500 hover:text-red-700 transition-colors duration-200\"\n                      >\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth={2}\n                            d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n                          />\n                        </svg>\n                      </button>\n                    </div>\n                  ))}\n\n                  <div className=\"flex justify-between items-center mt-4\">\n                    <button\n                      onClick={addClickThresholdRule}\n                      className=\"px-4 py-2 border border-orange-300 text-orange-600 rounded-lg hover:bg-orange-50 transition-colors duration-200\"\n                    >\n                      New Rule\n                    </button>\n                    <button className=\"px-4 py-2 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors duration-200\">\n                      Update Threshold Rules\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* No Mouse Movement */}\n            <div className=\"flex items-start space-x-4\">\n              <div className=\"flex items-center mt-1\">\n                <Toggle checked={false} onChange={() => {}} />\n              </div>\n              <div className=\"flex-1\">\n                <h4 className=\"font-medium text-gray-900 mb-2\">No Mouse Movement (Desktop)</h4>\n                <p className=\"text-sm text-gray-500\">\n                  Flags desktop users who show no mouse movement, indicating low interaction or automation.\n                </p>\n              </div>\n            </div>\n\n            {/* No Scroll Activity */}\n            <div className=\"flex items-start space-x-4\">\n              <div className=\"flex items-center mt-1\">\n                <Toggle checked={false} onChange={() => {}} />\n              </div>\n              <div className=\"flex-1\">\n                <h4 className=\"font-medium text-gray-900 mb-2\">No Scroll Activity</h4>\n                <p className=\"text-sm text-gray-500\">\n                  Flags users who do not scroll the page, suggesting minimal engagement.\n                </p>\n              </div>\n            </div>\n\n            {/* No Click Interaction */}\n            <div className=\"flex items-start space-x-4\">\n              <div className=\"flex items-center mt-1\">\n                <Toggle checked={false} onChange={() => {}} />\n              </div>\n              <div className=\"flex-1\">\n                <h4 className=\"font-medium text-gray-900 mb-2\">No Click Interaction</h4>\n                <p className=\"text-sm text-gray-500\">\n                  Flags users who never click on any element during their session.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* VPN & Location Fraud */}\n        <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n          <div className=\"flex items-center space-x-3 mb-6\">\n            <svg className=\"w-6 h-6 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9v-9m0-9v9m0 9c-5 0-9-4-9-9s4-9 9-9\"\n              />\n            </svg>\n            <h3 className=\"text-lg font-semibold text-gray-900\">Vpn & Location Fraud</h3>\n          </div>\n\n          <div className=\"space-y-6\">\n            {/* Block VPN/Proxy */}\n            <div className=\"flex items-start space-x-4\">\n              <div className=\"flex items-center mt-1\">\n                <Toggle checked={false} onChange={() => {}} />\n              </div>\n              <div className=\"flex-1\">\n                <h4 className=\"font-medium text-gray-900 mb-2\">Block VPN/Proxy</h4>\n                <p className=\"text-sm text-gray-500\">\n                  Blocks users identified as using VPNs or proxy services to mask their IP.\n                </p>\n              </div>\n            </div>\n\n            {/* ISP Fraud Detection */}\n            <div className=\"flex items-start space-x-4\">\n              <div className=\"flex items-center mt-1\">\n                <Toggle checked={false} onChange={() => {}} />\n              </div>\n              <div className=\"flex-1\">\n                <h4 className=\"font-medium text-gray-900 mb-2\">ISP Fraud Detection</h4>\n                <p className=\"text-sm text-gray-500\">\n                  Flags users connected through high-risk or suspicious internet providers.\n                </p>\n              </div>\n            </div>\n\n            {/* IP/Geo Location Mismatch */}\n            <div className=\"flex items-start space-x-4\">\n              <div className=\"flex items-center mt-1\">\n                <Toggle checked={true} onChange={() => {}} />\n              </div>\n              <div className=\"flex-1\">\n                <h4 className=\"font-medium text-gray-900 mb-2\">IP/Geo Location Mismatch</h4>\n                <p className=\"text-sm text-gray-500\">\n                  Blocks users whose IP address does not align with their reported geolocation.\n                </p>\n              </div>\n            </div>\n\n            {/* Timezone/IP Mismatch */}\n            <div className=\"flex items-start space-x-4\">\n              <div className=\"flex items-center mt-1\">\n                <Toggle checked={true} onChange={() => {}} />\n              </div>\n              <div className=\"flex-1\">\n                <h4 className=\"font-medium text-gray-900 mb-2\">Timezone/IP Mismatch</h4>\n                <p className=\"text-sm text-gray-500\">\n                  Blocks users whose browser timezone doesn't match their IP-based location.\n                </p>\n              </div>\n            </div>\n\n            {/* Country-Based Blocking */}\n            <div className=\"flex items-start space-x-4\">\n              <div className=\"flex items-center mt-1\">\n                <Toggle checked={false} onChange={() => {}} />\n              </div>\n              <div className=\"flex-1\">\n                <h4 className=\"font-medium text-gray-900 mb-2\">Country-Based Blocking</h4>\n                <p className=\"text-sm text-gray-500 mb-3\">Only allow traffic from selected countries (whitelist).</p>\n\n                <div className=\"space-y-3\">\n                  // 1. Update the country selection dropdown to show selected countries as dimmed and allow deselection\n                  <div className=\"relative\">\n                    <select\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white\"\n                      onChange={handleCountrySelect}\n                      value=\"\"\n                    >\n                      <option value=\"\" disabled>\n                        Select countries to allow\n                      </option>\n                      {countries.map((country) => {\n                        const isSelected = selectedCountries.some((c) => c.code === country.code)\n                        return (\n                          <option\n                            key={country.code}\n                            value={country.code}\n                            className={isSelected ? \"text-gray-400\" : \"\"}\n                            disabled={isSelected}\n                          >\n                            {country.name} {isSelected ? \"(Selected)\" : \"\"}\n                          </option>\n                        )\n                      })}\n                    </select>\n                  </div>\n                  <div className=\"flex space-x-2\">\n                    <button\n                      onClick={handleSelectAllCountries}\n                      className=\"px-3 py-1 text-xs bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-md transition-colors\"\n                    >\n                      Select All Countries\n                    </button>\n                    <button\n                      onClick={handleDeselectAllCountries}\n                      className=\"px-3 py-1 text-xs bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-md transition-colors\"\n                    >\n                      Deselect All\n                    </button>\n                  </div>\n                  {selectedCountries.length > 0 ? (\n                    <div className=\"mt-3 flex flex-wrap gap-2\">\n                      {selectedCountries.map((country) => (\n                        <div\n                          key={country.code}\n                          className=\"bg-blue-50 text-blue-700 px-2 py-1 rounded-md text-sm flex items-center\"\n                        >\n                          {country.name}\n                          <button\n                            className=\"ml-1 text-blue-500 hover:text-blue-700\"\n                            onClick={() => handleRemoveCountry(country.code)}\n                          >\n                            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth={2}\n                                d=\"M6 18L18 6M6 6l12 12\"\n                              />\n                            </svg>\n                          </button>\n                        </div>\n                      ))}\n                    </div>\n                  ) : (\n                    <div className=\"mt-3 text-sm text-gray-500 italic\">\n                      No countries selected. All traffic will be blocked.\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Browser Fraud */}\n        <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n          <div className=\"flex items-center space-x-3 mb-6\">\n            <svg className=\"w-6 h-6 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\n              />\n            </svg>\n            <h3 className=\"text-lg font-semibold text-gray-900\">Browser Fraud</h3>\n          </div>\n\n          <div className=\"space-y-6\">\n            {/* Incognito/Ad Blocker Detected */}\n            <div className=\"flex items-start space-x-4\">\n              <div className=\"flex items-center mt-1\">\n                <Toggle checked={true} onChange={() => {}} />\n              </div>\n              <div className=\"flex-1\">\n                <h4 className=\"font-medium text-gray-900 mb-2\">Incognito/Ad Blocker Detected</h4>\n                <p className=\"text-sm text-gray-500\">\n                  Flags users browsing in private/incognito mode or using ad-blocking extensions.\n                </p>\n              </div>\n            </div>\n\n            {/* JavaScript Disabled */}\n            <div className=\"flex items-start space-x-4\">\n              <div className=\"flex items-center mt-1\">\n                <Toggle checked={true} onChange={() => {}} />\n              </div>\n              <div className=\"flex-1\">\n                <h4 className=\"font-medium text-gray-900 mb-2\">JavaScript Disabled</h4>\n                <p className=\"text-sm text-gray-500\">\n                  Blocks users with JavaScript disabled, a common trait of bots or anti-tracking setups.\n                </p>\n              </div>\n            </div>\n\n            {/* Browser Language Fraud Detection */}\n            <div className=\"flex items-start space-x-4\">\n              <div className=\"flex items-center mt-1\">\n                <Toggle checked={false} onChange={() => {}} />\n              </div>\n              <div className=\"flex-1\">\n                <h4 className=\"font-medium text-gray-900 mb-2\">Browser Language Fraud Detection</h4>\n                <p className=\"text-sm text-gray-500\">\n                  Flags users with non-English browser languages (Only EN-US, EN-GB etc. are allowed)\n                </p>\n              </div>\n            </div>\n\n            {/* Headless Browser Detected */}\n            <div className=\"flex items-start space-x-4\">\n              <div className=\"flex items-center mt-1\">\n                <Toggle checked={true} onChange={() => {}} />\n              </div>\n              <div className=\"flex-1\">\n                <h4 className=\"font-medium text-gray-900 mb-2\">Headless Browser Detected</h4>\n                <p className=\"text-sm text-gray-500\">\n                  Blocks sessions running in headless or automation-mode browsers, common in bots.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Geo Access Control */}\n        <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n          <div className=\"flex items-center space-x-3 mb-6\">\n            <svg className=\"w-6 h-6 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\"\n              />\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n            </svg>\n            <h3 className=\"text-lg font-semibold text-gray-900\">Geo Access Control</h3>\n          </div>\n\n          <div className=\"space-y-6\">\n            {/* One-Time Geolocation */}\n            <div className=\"flex items-start space-x-4\">\n              <div className=\"flex items-center mt-1\">\n                <Toggle checked={false} onChange={() => {}} />\n              </div>\n              <div className=\"flex-1\">\n                <h4 className=\"font-medium text-gray-900 mb-2\">One-Time Geolocation</h4>\n                <p className=\"text-sm text-gray-500\">\n                  Prompts users to share their location once for additional verification.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n\n  const renderIntegrations = () => (\n    <div className=\"p-6 space-y-6\">\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Website Domain Section */}\n        <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-6\">Please Enter Your Website Domain</h3>\n\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Website</label>\n              <div className=\"flex space-x-3\">\n                <input\n                  type=\"text\"\n                  defaultValue=\"www.yourdomain.com\"\n                  className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n                <button className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors duration-200\">\n                  Test Connection\n                </button>\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Status</label>\n              <span className=\"inline-flex px-3 py-1 text-sm font-medium bg-green-100 text-green-800 rounded-full\">\n                Connected\n              </span>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">HTML Code</label>\n              <div className=\"relative\">\n                <textarea\n                  readOnly\n                  value={`<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Fraud Detection Settings</title>\n</head>\n<body>\n\n  <h1>Detection Mode</h1>\n  \n  <h2>Safe Mode</h2>\n  <p>Flags medium-risk behavior for review.</p>\n  \n  <h2>Aggressive Mode</h2>\n  <p>Blocks high-risk users immediately.</p>\n  \n  <h1>Custom Rules</h1>\n  <p>Extra checks like VPN, incognito, and user interaction.</p>\n  \n  <h2>Visitor Threshold</h2>\n  <p>Limits visits over short and long periods.</p>\n  \n  <h2>Session Control</h2>\n  <p>Blocks long or suspicious sessions.</p>\n\n</body>\n</html>`}\n                  className=\"w-full h-64 px-3 py-2 border border-gray-300 rounded-lg bg-gray-50 text-sm font-mono resize-none\"\n                />\n                <button\n                  onClick={() => {\n                    navigator.clipboard.writeText(document.querySelector(\"textarea\").value)\n                    // You could add a toast notification here\n                  }}\n                  className=\"absolute top-3 right-3 px-3 py-1 bg-gray-200 text-gray-700 rounded text-sm hover:bg-gray-300 transition-colors duration-200 flex items-center space-x-1\"\n                >\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\"\n                    />\n                  </svg>\n                  <span>Copy</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Facebook Event Test Section */}\n        <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-6\">Facebook Event Test</h3>\n\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Event Name</label>\n              <div className=\"flex space-x-3\">\n                <input\n                  type=\"text\"\n                  value=\"Oliggo3824639423\"\n                  readOnly\n                  className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg bg-gray-50 text-gray-600\"\n                />\n                <button className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors duration-200\">\n                  Test Connection\n                </button>\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Status</label>\n              <span className=\"inline-flex px-3 py-1 text-sm font-medium bg-green-100 text-green-800 rounded-full\">\n                Connected\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n\n  const renderRefundReport = () => (\n    <div className=\"p-6 space-y-6\">\n      {/* Header Stats */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center\">\n              <svg className=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\"\n                />\n              </svg>\n            </div>\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">All Time Refund</p>\n              <p className=\"text-2xl font-bold text-gray-900\">$300</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"w-10 h-10 bg-purple-100 rounded-lg flex items-center justify-center\">\n              <svg className=\"w-5 h-5 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                />\n              </svg>\n            </div>\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Next Upcoming Refund Date</p>\n              <p className=\"text-2xl font-bold text-gray-900\">05/01/2025</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Refund Table */}\n      <div className=\"bg-white rounded-lg shadow-sm overflow-hidden\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full\">\n            <thead className=\"bg-gray-50 border-b border-gray-200\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Week</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Start Date\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  End Date\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Refund Amount\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Link</th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {refundData.weeks.map((week) => (\n                <tr key={week.id} className=\"hover:bg-gray-50 transition-colors duration-150\">\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{week.week}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    <div>\n                      <div>{week.startDate}</div>\n                      <div className=\"text-xs text-gray-400\">{week.startTime}</div>\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    <div>\n                      <div>{week.endDate}</div>\n                      <div className=\"text-xs text-gray-400\">{week.endTime}</div>\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{week.refundAmount}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <button\n                      onClick={() => navigator.clipboard.writeText(week.link)}\n                      className=\"inline-flex items-center space-x-1 px-3 py-1 border border-gray-300 rounded text-sm hover:bg-gray-50 transition-colors duration-200\"\n                    >\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth={2}\n                          d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\"\n                        />\n                      </svg>\n                      <span>Copy Link</span>\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n\n        {/* Pagination */}\n        <div className=\"bg-white px-6 py-3 border-t border-gray-200 flex items-center justify-between\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-700\">Showing 1 to</span>\n            <select className=\"border border-gray-300 rounded px-2 py-1 text-sm\">\n              <option value={10}>10</option>\n              <option value={25}>25</option>\n              <option value={50}>50</option>\n            </select>\n            <span className=\"text-sm text-gray-700\">out of 20 entries</span>\n          </div>\n\n          <div className=\"flex items-center space-x-2\">\n            <button className=\"px-3 py-1 border border-gray-300 rounded text-sm hover:bg-gray-50\">\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n              </svg>\n            </button>\n            <button className=\"px-3 py-1 bg-blue-500 text-white border border-blue-500 rounded text-sm\">1</button>\n            <button className=\"px-3 py-1 border border-gray-300 rounded text-sm hover:bg-gray-50\">2</button>\n            <button className=\"px-3 py-1 border border-gray-300 rounded text-sm hover:bg-gray-50\">\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n\n  return (\n    <div className=\"min-h-screen h-screen flex flex-col bg-gray-50 overflow-hidden\">\n      {/* Header */}\n      <header className=\"bg-white shadow-sm px-6 py-4 flex justify-between items-center z-10\">\n        <div className=\"flex items-center\">\n          <Image src=\"/images/new-logo.png\" alt=\"Oliggo Logo\" width={32} height={32} className=\"mr-2\" />\n          <span className=\"text-blue-600 text-2xl font-medium\">Oliggo</span>\n        </div>\n\n        <button className=\"bg-white border border-gray-200 rounded-full px-6 py-2 text-blue-600 font-medium hover:bg-gray-50 transition-colors duration-200 shadow-sm\">\n          Meta\n        </button>\n\n        <div className=\"relative\">\n          <button\n            onClick={() => setIsProfileOpen(!isProfileOpen)}\n            className=\"flex items-center space-x-3 hover:bg-gray-50 rounded-lg px-3 py-2 transition-all duration-200\"\n          >\n            <div className=\"w-10 h-10 rounded-full bg-gradient-to-br from-blue-500 to-purple-600 flex items-center justify-center text-white font-medium\">\n              JW\n            </div>\n            <span className=\"text-gray-800 font-medium hidden sm:block\">\n              {userFirstName} {userLastName}\n            </span>\n            <svg\n              className={`w-4 h-4 text-gray-600 transition-transform duration-200 ${isProfileOpen ? \"rotate-180\" : \"\"}`}\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n            </svg>\n          </button>\n\n          {isProfileOpen && (\n            <div\n              ref={profileDropdownRef}\n              className=\"absolute right-0 mt-2 w-64 bg-white rounded-lg shadow-xl border border-gray-100 py-2 z-50\"\n            >\n              <div className=\"py-2\">\n                <button\n                  onClick={() => {\n                    setIsUserSettingsOpen(true)\n                    setIsProfileOpen(false)\n                  }}\n                  className=\"w-full px-4 py-2 text-left hover:bg-gray-50 flex items-center space-x-3 text-gray-700\"\n                >\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\n                    />\n                  </svg>\n                  <span>User Settings</span>\n                </button>\n                <button\n                  onClick={() => (window.location.href = \"/admin\")}\n                  className=\"w-full px-4 py-2 text-left hover:bg-gray-50 flex items-center space-x-3 text-gray-700\"\n                >\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\"\n                    />\n                  </svg>\n                  <span>Admin Panel</span>\n                </button>\n                <hr className=\"my-2 border-gray-100\" />\n                <button className=\"w-full px-4 py-2 text-left hover:bg-gray-50 flex items-center space-x-3 text-red-600\">\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n                    />\n                  </svg>\n                  <span>Sign Out</span>\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      </header>\n\n      <div className=\"flex flex-1 overflow-hidden\">\n        {/* Left Sidebar */}\n        <div\n          className={`${isSidebarExpanded ? \"w-80\" : \"w-20\"} bg-white shadow-sm flex flex-col py-6 transition-all duration-300 relative`}\n        >\n          {/* Expand/Collapse Button - Moved above profiles */}\n          <div className={`${isSidebarExpanded ? \"px-6\" : \"flex justify-center\"} mb-4`}>\n            <button\n              onClick={() => setIsSidebarExpanded(!isSidebarExpanded)}\n              className=\"w-8 h-8 bg-gray-100 border border-gray-300 rounded-full flex items-center justify-center shadow-sm hover:shadow-md transition-all duration-200 hover:bg-gray-200\"\n            >\n              <svg\n                className={`w-4 h-4 text-gray-600 transition-transform duration-200 ${isSidebarExpanded ? \"rotate-180\" : \"\"}`}\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n              </svg>\n            </button>\n          </div>\n\n          <div className={`${isSidebarExpanded ? \"px-6\" : \"items-center\"} flex flex-col space-y-4`}>\n            {/* Sub-profiles */}\n            {subProfiles.map((profile, index) => (\n              <div key={profile.id} className=\"relative\">\n                <button\n                  onClick={() => setSelectedProfile(index)}\n                  onMouseEnter={() => !isSidebarExpanded && setHoveredProfile(index)}\n                  onMouseLeave={() => !isSidebarExpanded && setHoveredProfile(null)}\n                  className={`flex items-center justify-center transition-all duration-300 transform hover:scale-110 ${\n                    isSidebarExpanded ? \"w-full flex-col\" : \"w-12 h-12 rounded-full\"\n                  }`}\n                >\n                  <div\n                    className={`w-12 h-12 rounded-full ${profile.color} flex items-center justify-center text-white font-medium shadow-md ${\n                      selectedProfile === index ? \"ring-2 ring-blue-500 ring-offset-2\" : \"\"\n                    }`}\n                  >\n                    {profile.initials}\n                  </div>\n\n                  {isSidebarExpanded && (\n                    <div className=\"mt-2 text-center\">\n                      <p className=\"text-gray-800 font-medium\">{profile.name}</p>\n                      <p className=\"text-gray-500 text-xs\">{profile.details.adAccount}</p>\n                    </div>\n                  )}\n                </button>\n\n                {/* Tooltip for collapsed sidebar */}\n                {!isSidebarExpanded && hoveredProfile === index && (\n                  <div\n                    className=\"absolute left-16 top-0 bg-white border border-gray-200 text-gray-800 p-3 rounded-lg shadow-xl z-50 w-64\"\n                    onMouseEnter={() => setHoveredProfile(index)}\n                    onMouseLeave={() => setHoveredProfile(null)}\n                  >\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <div className=\"font-medium text-blue-600\">{profile.name} Profile</div>\n                      <div className=\"flex space-x-1\">\n                        <button\n                          onClick={() => openEditModal(index)}\n                          className=\"p-1.5 text-gray-400 hover:text-blue-600 hover:bg-blue-50 rounded transition-colors duration-200\"\n                          title=\"Edit Profile\"\n                        >\n                          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              strokeWidth={2}\n                              d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n                            />\n                          </svg>\n                        </button>\n                        <button\n                          onClick={() => deleteProfile(index)}\n                          className=\"p-1.5 text-gray-400 hover:text-red-600 hover:bg-red-50 rounded transition-colors duration-200\"\n                          title=\"Delete Profile\"\n                        >\n                          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              strokeWidth={2}\n                              d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n                            />\n                          </svg>\n                        </button>\n                      </div>\n                    </div>\n                    <div className=\"text-sm space-y-2\">\n                      <div>\n                        <span className=\"text-gray-500\">Ad Account:</span> {profile.details.adAccount}\n                      </div>\n                      <div>\n                        <span className=\"text-gray-500\">Campaign:</span> {profile.details.campaign}\n                      </div>\n                      <div>\n                        <span className=\"text-gray-500\">Adset:</span> {profile.details.adset}\n                      </div>\n                      <div>\n                        <span className=\"text-gray-500\">Pixel:</span> {profile.details.pixel}\n                      </div>\n                      <div>\n                        <span className=\"text-gray-500\">Activated:</span> {profile.details.activatedTime}\n                      </div>\n                      <div>\n                        <span className=\"text-gray-500\">Status:</span>\n                        <span\n                          className={`ml-1 ${profile.details.protectStatus === \"Active\" ? \"text-green-600\" : \"text-yellow-600\"}`}\n                        >\n                          {profile.details.protectStatus}\n                        </span>\n                      </div>\n                    </div>\n                    <div className=\"absolute left-0 top-3 w-0 h-0 border-t-4 border-b-4 border-r-4 border-transparent border-r-white -translate-x-1\"></div>\n                  </div>\n                )}\n              </div>\n            ))}\n\n            {/* Expanded Profile Details */}\n            {isSidebarExpanded && (\n              <div className=\"bg-gray-50 rounded-lg p-4 mt-4\">\n                <div className=\"flex items-center justify-between mb-3\">\n                  <h3 className=\"font-medium text-gray-800\">Profile Details</h3>\n                  <div className=\"flex space-x-1\">\n                    <button\n                      onClick={() => openEditModal(selectedProfile)}\n                      className=\"p-1.5 text-gray-400 hover:text-blue-600 hover:bg-blue-50 rounded transition-colors duration-200\"\n                      title=\"Edit Profile\"\n                    >\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth={2}\n                          d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n                        />\n                      </svg>\n                    </button>\n                    <button\n                      onClick={() => deleteProfile(selectedProfile)}\n                      className=\"p-1.5 text-gray-400 hover:text-red-600 hover:bg-red-50 rounded transition-colors duration-200\"\n                      title=\"Delete Profile\"\n                    >\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth={2}\n                          d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n                        />\n                      </svg>\n                    </button>\n                  </div>\n                </div>\n                <div className=\"space-y-2 text-sm\">\n                  <div>\n                    <span className=\"text-gray-500\">Campaign:</span>\n                    <p className=\"text-gray-800\">{subProfiles[selectedProfile].details.campaign}</p>\n                  </div>\n                  <div>\n                    <span className=\"text-gray-500\">Adset:</span>\n                    <p className=\"text-gray-800\">{subProfiles[selectedProfile].details.adset}</p>\n                  </div>\n                  <div>\n                    <span className=\"text-gray-500\">Pixel:</span>\n                    <p className=\"text-gray-800\">{subProfiles[selectedProfile].details.pixel}</p>\n                  </div>\n                  <div>\n                    <span className=\"text-gray-500\">Activated Time:</span>\n                    <p className=\"text-gray-800\">{subProfiles[selectedProfile].details.activatedTime}</p>\n                  </div>\n                  <div>\n                    <span className=\"text-gray-500\">Protect Status:</span>\n                    <span\n                      className={`ml-1 px-2 py-1 rounded-full text-xs font-medium ${\n                        subProfiles[selectedProfile].details.protectStatus === \"Active\"\n                          ? \"bg-green-100 text-green-800\"\n                          : \"bg-yellow-100 text-yellow-800\"\n                      }`}\n                    >\n                      {subProfiles[selectedProfile].details.protectStatus}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Add Profile Button */}\n            <button\n              className={`${isSidebarExpanded ? \"w-full p-4 rounded-lg\" : \"w-12 h-12 rounded-full\"} border-2 border-dashed border-gray-300 flex items-center justify-center text-gray-400 hover:text-gray-600 hover:border-gray-400 transition-all duration-300 hover:scale-105`}\n            >\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n              </svg>\n              {isSidebarExpanded && <span className=\"ml-2 text-gray-600\">Add Profile</span>}\n            </button>\n\n            {/* Separator Line */}\n            <div className={`${isSidebarExpanded ? \"w-full\" : \"w-8\"} h-px bg-gray-300 my-4`}></div>\n\n            {/* Facebook Logo with Animation */}\n            <div\n              className={`${isSidebarExpanded ? \"w-full p-4 rounded-lg\" : \"w-12 h-12 rounded-lg\"} bg-blue-600 flex items-center justify-center transition-all duration-300 hover:bg-blue-700 hover:scale-105 ${isSidebarExpanded ? \"justify-start space-x-3\" : \"\"} relative overflow-hidden group`}\n            >\n              <div className=\"relative\">\n                <span className=\"text-white font-bold text-lg transform transition-all duration-500 group-hover:rotate-12 group-hover:scale-110 inline-block\">\n                  f\n                </span>\n                {/* Animated background pulse */}\n                <div className=\"absolute inset-0 bg-blue-400 rounded-full opacity-0 group-hover:opacity-30 group-hover:animate-ping\"></div>\n                {/* Rotating border */}\n                <div className=\"absolute inset-0 border-2 border-blue-300 rounded-full opacity-0 group-hover:opacity-50 animate-spin\"></div>\n              </div>\n              {isSidebarExpanded && (\n                <span className=\"text-white font-medium transform transition-all duration-300 group-hover:translate-x-1\">\n                  Facebook Ads\n                </span>\n              )}\n              {/* Floating particles */}\n              <div className=\"absolute top-1 right-1 w-1 h-1 bg-blue-200 rounded-full opacity-0 group-hover:opacity-100 group-hover:animate-bounce\"></div>\n              <div\n                className=\"absolute bottom-1 left-1 w-1 h-1 bg-blue-200 rounded-full opacity-0 group-hover:opacity-100 group-hover:animate-bounce\"\n                style={{ animationDelay: \"0.2s\" }}\n              ></div>\n            </div>\n          </div>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"flex-1 flex flex-col h-screen\">\n          {/* Navigation Tabs */}\n          <div className=\"bg-white border-b border-gray-200 px-6\">\n            <div className=\"flex justify-center space-x-8\">\n              {tabs.map((tab) => (\n                <button\n                  key={tab}\n                  onClick={() => setActiveTab(tab)}\n                  className={`py-4 px-2 border-b-2 font-medium text-sm transition-colors duration-200 ${\n                    activeTab === tab\n                      ? \"border-blue-500 text-blue-600\"\n                      : \"border-transparent text-gray-500 hover:text-gray-700\"\n                  }`}\n                >\n                  {tab}\n                </button>\n              ))}\n            </div>\n          </div>\n\n          {/* Content based on active tab - with independent scrolling */}\n          <div className=\"flex-1 overflow-auto\">\n            {activeTab === \"Dashboard\" && renderDashboard()}\n            {activeTab === \"User Activity\" && renderUserActivity()}\n            {activeTab === \"Fraud Protection\" && renderFraudProtection()}\n            {activeTab === \"Integrations\" && renderIntegrations()}\n            {activeTab === \"Refund Report\" && renderRefundReport()}\n          </div>\n        </div>\n      </div>\n\n      {/* Calendar Modal */}\n      {isCalendarOpen && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-96\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-semibold\">Select Date Range</h3>\n              <button onClick={() => setIsCalendarOpen(false)} className=\"text-gray-400 hover:text-gray-600\">\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n\n            {/* Calendar Header */}\n            <div className=\"flex items-center justify-between mb-4\">\n              <button\n                onClick={() => setSelectedDate(new Date(selectedDate.getFullYear(), selectedDate.getMonth() - 1))}\n                className=\"p-2 hover:bg-gray-100 rounded\"\n              >\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                </svg>\n              </button>\n              <h4 className=\"text-lg font-medium\">\n                {selectedDate.toLocaleDateString(\"en-US\", { month: \"long\", year: \"numeric\" })}\n              </h4>\n              <button\n                onClick={() => setSelectedDate(new Date(selectedDate.getFullYear(), selectedDate.getMonth() + 1))}\n                className=\"p-2 hover:bg-gray-100 rounded\"\n              >\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                </svg>\n              </button>\n            </div>\n\n            {/* Calendar Grid */}\n            <div className=\"grid grid-cols-7 gap-1 mb-4\">\n              {[\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"].map((day) => (\n                <div key={day} className=\"p-2 text-center text-sm font-medium text-gray-500\">\n                  {day}\n                </div>\n              ))}\n\n              {/* Empty cells for days before month starts */}\n              {Array.from({ length: getFirstDayOfMonth(selectedDate) }).map((_, index) => (\n                <div key={index} className=\"p-2\"></div>\n              ))}\n\n              {/* Days of the month */}\n              {Array.from({ length: getDaysInMonth(selectedDate) }).map((_, index) => {\n                const day = index + 1\n                return (\n                  <button\n                    key={day}\n                    onClick={() => handleDateClick(day)}\n                    className={`p-2 text-sm rounded hover:bg-blue-100 transition-colors ${\n                      isDateStart(day) || isDateEnd(day)\n                        ? \"bg-blue-600 text-white\"\n                        : isDateInRange(day)\n                          ? \"bg-blue-100 text-blue-600\"\n                          : \"text-gray-700\"\n                    }`}\n                  >\n                    {day}\n                  </button>\n                )\n              })}\n            </div>\n\n            {/* Selected Range Display */}\n            {startDate && (\n              <div className=\"mb-4 p-3 bg-gray-50 rounded-lg\">\n                <p className=\"text-sm text-gray-600\">\n                  <strong>Start:</strong> {startDate.toLocaleDateString()}\n                  {endDate && (\n                    <>\n                      <br />\n                      <strong>End:</strong> {endDate.toLocaleDateString()}\n                    </>\n                  )}\n                </p>\n              </div>\n            )}\n\n            <div className=\"flex justify-end space-x-3\">\n              <button\n                onClick={() => {\n                  setStartDate(null)\n                  setEndDate(null)\n                  setIsCalendarOpen(false)\n                }}\n                className=\"px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors duration-200\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={() => setIsCalendarOpen(false)}\n                disabled={!startDate || !endDate}\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                Apply\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Edit Profile Modal */}\n      {isEditModalOpen && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-96 max-w-md mx-4\">\n            <div className=\"flex items-center justify-between mb-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Edit Facebook Account</h3>\n              <button\n                onClick={closeEditModal}\n                className=\"text-gray-400 hover:text-gray-600 transition-colors duration-200\"\n              >\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n\n            {/* Profile Avatar */}\n            <div className=\"flex justify-center mb-6\">\n              <div className=\"relative\">\n                <div\n                  className={`w-20 h-20 rounded-full ${editProfileColor} flex items-center justify-center text-xl font-bold shadow-lg`}\n                >\n                  {editProfileName\n                    .split(\" \")\n                    .map((n) => n[0])\n                    .join(\"\")\n                    .toUpperCase()\n                    .slice(0, 2) || \"MB\"}\n                </div>\n                <div className=\"absolute -bottom-1 -right-1 w-6 h-6 bg-blue-600 rounded-full flex items-center justify-center\">\n                  <svg className=\"w-3 h-3 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n                  </svg>\n                </div>\n              </div>\n            </div>\n\n            {/* Account Name */}\n            <div className=\"mb-6\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Account Name</label>\n              <input\n                type=\"text\"\n                value={editProfileName}\n                onChange={(e) => setEditProfileName(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                placeholder=\"Enter account name\"\n              />\n            </div>\n\n            {/* Account Color */}\n            <div className=\"mb-8\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-3\">Account Color</label>\n              <div className=\"flex flex-wrap gap-3 justify-center\">\n                {colorOptions.map((color) => (\n                  <button\n                    key={color.value}\n                    onClick={() => setEditProfileColor(color.value)}\n                    className={`w-10 h-10 rounded-full ${color.class} transition-all duration-200 hover:scale-110 ${\n                      editProfileColor === color.value\n                        ? \"ring-4 ring-blue-300 ring-offset-2\"\n                        : \"hover:ring-2 hover:ring-gray-300 hover:ring-offset-1\"\n                    }`}\n                    title={color.name}\n                  />\n                ))}\n              </div>\n            </div>\n\n            {/* Action Buttons */}\n            <div className=\"flex justify-end space-x-3\">\n              <button\n                onClick={closeEditModal}\n                className=\"px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors duration-200\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={saveProfileChanges}\n                className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors duration-200\"\n              >\n                Save Changes\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* User Settings Modal */}\n      {isUserSettingsOpen && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-96 max-w-md mx-4\">\n            <div className=\"flex items-center justify-between mb-6\">\n              <div className=\"flex items-center space-x-2\">\n                <svg className=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\n                  />\n                </svg>\n                <h3 className=\"text-lg font-semibold text-gray-900\">User Settings</h3>\n              </div>\n              <button onClick={() => setIsUserSettingsOpen(false)} className=\"text-gray-400 hover:text-gray-600\">\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n\n            {/* Photo Section */}\n            <div className=\"mb-6\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-3\">Photo</label>\n              <div className=\"flex items-center space-x-4\">\n                <div className=\"w-16 h-16 bg-gray-200 rounded-full flex items-center justify-center\">\n                  <svg className=\"w-8 h-8 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\n                    />\n                  </svg>\n                </div>\n                <button className=\"flex items-center space-x-2 text-blue-600 hover:text-blue-700\">\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n                  </svg>\n                  <span>Upload</span>\n                </button>\n              </div>\n            </div>\n\n            {/* First Name */}\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">First Name</label>\n              <input\n                type=\"text\"\n                value={userFirstName}\n                onChange={(e) => setUserFirstName(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n\n            {/* Last Name */}\n            <div className=\"mb-8\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Last Name</label>\n              <input\n                type=\"text\"\n                value={userLastName}\n                onChange={(e) => setUserLastName(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n\n            {/* Action Buttons */}\n            <div className=\"flex justify-end space-x-3 mb-4\">\n              <button\n                onClick={() => setIsUserSettingsOpen(false)}\n                className=\"px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={() => setIsUserSettingsOpen(false)}\n                className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n              >\n                Save Changes\n              </button>\n            </div>\n\n            {/* Sign Out */}\n            <div className=\"border-t pt-4\">\n              <button className=\"w-full flex items-center justify-center space-x-2 text-red-600 hover:text-red-700\">\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n                  />\n                </svg>\n                <span>Sign Out</span>\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <style jsx global>{`\n        @keyframes pulse {\n          0% {\n            transform: scale(1);\n            opacity: 0.7;\n          }\n          50% {\n            transform: scale(1.5);\n            opacity: 1;\n          }\n          100% {\n            transform: scale(1);\n            opacity: 0.7;\n          }\n        }\n        @keyframes fadeIn {\n          from {\n            opacity: 0;\n          }\n          to {\n            opacity: 1;\n          }\n        }\n        .animate-fadeIn {\n          animation: fadeIn 0.3s ease-in-out;\n        }\n      `}</style>\n    </div>\n  )\n}\n"
        }
    ]
}